'use strict';angular.module('toaster',['ngAnimate']).service('toaster',['$rootScope','$document',function($rootScope,$document){this.pop=function(type,title,body,timeout,bodyOutputType,clickHandler,beforeClose,close){this.toast={type:type,title:title||($document.length>0?$document[0].title:''),body:body,timeout:timeout||3000,bodyOutputType:bodyOutputType,click:clickHandler||null,beforeClose:beforeClose||null,close:close||null,};if(!this.toast.body||this.toast.body.length<0){console.log("TOAST-NOTE: Your body content is not inside a parent scope of toaster-container.");return;}
$rootScope.$broadcast('toaster-newToast');};this.show=function(options){options=options||{};options=$.extend({type:0,title:($document.length>0?$document[0].title:null),timeout:3000,bodyOutputType:'trustedHtml',},options);if(!options.body||options.body.length<0){console.log("TOAST-NOTE: Your body content is not inside a parent scope of toaster-container.");return;}
if(options.type&&!isNaN(options.type)){var type=0;try{type=parseInt(options.type);}catch(e){type=0;}
switch(type){case 1:{options.type='success';break;}
case 2:{options.type='info';break;}
case 3:{options.type='warning';break;}
case 4:{options.type='error';break;}
case 5:{options.type='wait';break;}
default:{options.type='';}}}
if(options.click&&!angular.isFunction($scope.$parent.$eval(options.click))){console.log("TOAST-NOTE: Your click handler is not inside a parent scope of toaster-container.");options.click=null;}
if(options.beforeClose&&!angular.isFunction($scope.$parent.$eval(options.beforeClose))){console.log("TOAST-NOTE: Your beforeClose handler is not inside a parent scope of toaster-container.");options.beforeClose=null;}
if(options.close&&!angular.isFunction($scope.$parent.$eval(options.close))){console.log("TOAST-NOTE: Your close handler is not inside a parent scope of toaster-container.");options.close=null;}
this.toast=options;$rootScope.$broadcast('toaster-newToast');};this.clear=function(){$rootScope.$broadcast('toaster-clearToasts');};}]).constant('toasterConfig',{'limit':0,'tap-to-dismiss':true,'close-button':false,'newest-on-top':true,'time-out':5000,'icon-classes':{error:'toast-error',info:'toast-info',wait:'toast-wait',success:'toast-success',warning:'toast-warning'},'body-output-type':'','body-template':'toasterBodyTmpl.html','icon-class':'toast-info','position-class':'toast-top-right','title-class':'toast-title','message-class':'toast-message'}).directive('toasterContainer',['$compile','$timeout','$sce','toasterConfig','toaster',function($compile,$timeout,$sce,toasterConfig,toaster){return{replace:true,restrict:'EA',scope:true,link:function(scope,elm,attrs){var id=0,mergedConfig;mergedConfig=angular.extend({},toasterConfig,scope.$eval(attrs.toasterOptions));scope.config={position:mergedConfig['position-class'],title:mergedConfig['title-class'],message:mergedConfig['message-class'],tap:mergedConfig['tap-to-dismiss'],closeButton:mergedConfig['close-button']};scope.configureTimer=function configureTimer(toast){var timeout=typeof(toast.timeout)=="number"?toast.timeout:mergedConfig['time-out'];if(timeout>0)
setTimeout(toast,timeout);};function addToast(toast){toast.type=mergedConfig['icon-classes'][toast.type];if(!toast.type)
toast.type=mergedConfig['icon-class'];id++;angular.extend(toast,{id:id});toast.bodyOutputType=toast.bodyOutputType||mergedConfig['body-output-type'];switch(toast.bodyOutputType){case'trustedHtml':toast.html=$sce.trustAsHtml(toast.body);break;case'template':toast.bodyTemplate=toast.body||mergedConfig['body-template'];break;}
scope.configureTimer(toast);if(mergedConfig['newest-on-top']===true){scope.toasters.unshift(toast);if(mergedConfig['limit']>0&&scope.toasters.length>mergedConfig['limit']){scope.toasters.pop();}}else{scope.toasters.push(toast);if(mergedConfig['limit']>0&&scope.toasters.length>mergedConfig['limit']){scope.toasters.shift();}}}
function setTimeout(toast,time){toast.timeout=$timeout(function(){scope.removeToast(toast.id);},time);}
scope.toasters=[];scope.$on('toaster-newToast',function(){addToast(toaster.toast);});scope.$on('toaster-clearToasts',function(){scope.toasters.splice(0,scope.toasters.length);});},controller:['$scope','$element','$attrs',function($scope,$element,$attrs){$scope.stopTimer=function(toast){if(toast.timeout){$timeout.cancel(toast.timeout);toast.timeout=null;}};$scope.restartTimer=function(toast){if(!toast.timeout)
$scope.configureTimer(toast);};$scope.removeToast=function(id){var i=0;for(i;i<$scope.toasters.length;i++){if($scope.toasters[i].id===id)
break;}
var result=true;var toaster=$scope.toasters[i];if(toaster.beforeClose&&angular.isFunction($scope.$parent.$eval(toaster.beforeClose))){result=$scope.$parent.$eval(toaster.beforeClose)
(toaster);}else{if(angular.isString(toaster.beforeClose))
console.log("TOAST-NOTE: Your beforeClose handler is not inside a parent scope of toaster-container.");}
if(result==true||result=='1'){$scope.toasters.splice(i,1);if(toaster.close&&angular.isFunction($scope.$parent.$eval(toaster.close))){$scope.$parent.$eval(toaster.close)(toaster);}else{if(angular.isString(toaster.close))
console.log("TOAST-NOTE: Your close handler is not inside a parent scope of toaster-container.");}}};$scope.click=function(toaster){if($scope.config.tap===true){if(toaster.click&&angular.isFunction($scope.$parent.$eval(toaster.click))){var result=$scope.$parent.$eval(toaster.click)
(toaster);if(result===true)
$scope.removeToast(toaster.id);}else{if(angular.isString(toaster.click))
console.log("TOAST-NOTE: Your click handler is not inside a parent scope of toaster-container.");$scope.removeToast(toaster.id);}}};}],template:'<div  id="toast-container" ng-class="config.position">'
+'<div ng-repeat="toaster in toasters" class="toast" ng-class="toaster.type" ng-click="click(toaster)" ng-mouseover="stopTimer(toaster)"  ng-mouseout="restartTimer(toaster)">'
+'<button class="toast-close-button" ng-show="config.closeButton">&times;</button>'
+'<div ng-class="config.title">{{toaster.title}}</div>'
+'<div ng-class="config.message" ng-switch on="toaster.bodyOutputType">'
+'<div ng-switch-when="trustedHtml" ng-bind-html="toaster.html"></div>'
+'<div ng-switch-when="template"><div ng-include="toaster.bodyTemplate"></div></div>'
+'<div ng-switch-default >{{toaster.body}}</div>'
+'</div>'+'</div>'+'</div>'};}]);