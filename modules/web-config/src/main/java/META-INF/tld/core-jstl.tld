<?xml version="1.0" encoding="UTF-8"?>
<taglib version="2.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd">
	<display-name>NLH4J JSTL CORE</display-name>
	<tlib-version>1.0</tlib-version>
	<short-name>core-jstl</short-name>
	<uri>http://nlh4j.org.vn/core-jstl</uri>
	<!-- Message JSP tag -->
	<tag>
		<description>Retrieves the message with the given code, or text if code isn't resolvable.
		The HTML escaping flag participates in a page-wide or application-wide setting
		(i.e. by HtmlEscapeTag or a "defaultHtmlEscape" context-param in web.xml).</description>
		<name>message</name>
		<tag-class>org.nlh4j.core.taglibs.MessageTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<description>A MessageSourceResolvable argument (direct or through JSP EL).
			Fits nicely when used in conjunction with Spring's own validation error classes
			which all implement the MessageSourceResolvable interface. For example, this
			allows you to iterate over all of the errors in a form, passing each error
			(using a runtime expression) as the value of this 'message' attribute, thus
			effecting the easy display of such error messages.</description>
			<name>message</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The category to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			Valid values: 1 - COMMON, 2 - APPLICATION, 3 - SCREEN.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>category</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The category to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			Valid values: 1 - COMMON, 2 - APPLICATION, 3 - SCREEN.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>categoryNumber</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The message type to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			Valid values: 1 - ERROR, 2 - WARN, 3 - CONFIRM.
			Default is INFO.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The message type to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			Valid values: 1 - ERROR, 2 - WARN, 3 - CONFIRM.
			Default is INFO.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>typeNumber</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The screen identity while message category is SCREEN to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			Default is SCR.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>screen</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The message number to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			Default is 0.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>number</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The message number length to use when formatting code if code is not provided.
			If code is not provided, and category is NONE, the text attribute will be used.
			If length is equals or less than 0; default i 5.
			Default is 5.
			Formatted code is [COM/APP/SCR]_MSG_ID_[MSG TYPE]_[FORMATTED MSG NUMBER]</description>
			<name>numLen</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The code (key) to use when looking up the message.
			If code is not provided, the text attribute will be used.</description>
			<name>code</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Set optional message arguments for this tag, as a (comma-)
			delimited String (each String argument can contain JSP EL), an Object array
			(used as argument array), or a single Object (used as single argument).
			You can additionally use nested spring:argument tags.</description>
			<name>arguments</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The separator character to be used for splitting the
			arguments string value; defaults to a 'comma' (',').</description>
			<name>argumentSeparator</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Default text to output when a message for the given code
			could not be found. If both text and code are not set, the tag will
			output null.</description>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The string to use when binding the result to the page,
			request, session or application scope. If not specified, the result
			gets outputted to the writer (i.e. typically directly to the JSP).</description>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The scope to use when exporting the result to a variable.
			This attribute is only used when var is also set. Possible values are
			page, request, session and application.</description>
			<name>scope</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Set HTML escaping for this tag, as boolean value.
			Overrides the default HTML escaping setting for the current page.</description>
			<name>htmlEscape</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Set JavaScript escaping for this tag, as boolean value.
			Default is 'false'.</description>
			<name>javaScriptEscape</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<!-- Spring profile tag -->
	<tag>
		<description>Retrieves the SPRING profile configuration enviroment.</description>
		<name>spring</name>
		<tag-class>org.nlh4j.core.taglibs.SpringProfileTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>A delimitted profiles need to check with configuration.</description>
			<name>profile</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>The delimiter need to split profiles to check. Default is comma (,)</description>
			<name>delimiter</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<!-- JSTL support functions -->
	<function>
		<name>contains</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean contains(java.util.List,java.lang.Object)</function-signature>
	</function>
	<function>
		<name>containsAtLeast</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean containsAtLeast(java.util.List,java.lang.Object[])</function-signature>
	</function>
	<function>
		<name>indexOf</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>int indexOf(java.util.List,java.lang.Object)</function-signature>
	</function>
	<function>
		<name>angularBodyAttr</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>java.lang.String angularBodyAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</function-signature>
	</function>
	<function>
		<name>concat</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>java.lang.String concat(java.lang.String,java.lang.Object[])</function-signature>
	</function>
	<function>
		<name>displayLanguage</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>java.lang.String getDisplayLanguage(java.lang.String)</function-signature>
	</function>
	<function>
		<name>isProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isProfile(java.lang.String)</function-signature>
	</function>
	<function>
		<name>isDefaultProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isDefaultProfile()</function-signature>
	</function>
	<function>
		<name>isQuartzProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isQuartzProfile()</function-signature>
	</function>
	<function>
		<name>isMailProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isMailProfile()</function-signature>
	</function>
	<function>
		<name>isTemplateProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isTemplateProfile()</function-signature>
	</function>
	<function>
		<name>isSocketProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isSocketProfile()</function-signature>
	</function>
	<function>
		<name>isSocketChatProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isSocketChatProfile()</function-signature>
	</function>
	<function>
		<name>isSocketNotificationProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isSocketNotificationProfile()</function-signature>
	</function>
	<function>
		<name>isSocketOnlineProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isSocketOnlineProfile()</function-signature>
	</function>
	<function>
		<name>isSocketQueueProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isSocketQueueProfile()</function-signature>
	</function>
	<function>
		<name>isFullProfile</name>
		<function-class>org.nlh4j.core.taglibs.TagUtils</function-class>
		<function-signature>boolean isFullProfile()</function-signature>
	</function>
</taglib>
