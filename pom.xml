<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Present package -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.nlh4j</groupId>
	<artifactId>nlh4j</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>
	<name>nlh4j</name>
	<description>Base Package for Java Web/Mobile</description>

	<!-- License -->
	<licenses>
		<license>
			<name>GNU Lesser General Public License (LGPL), Version 3</name>
			<url>http://www.gnu.org/licenses/lgpl.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<!-- Authors -->
	<developers>
		<developer>
			<name>Hai Nguyen</name>
			<email>hainguyenjc@gmail.com</email>
			<roles>
				<role>Technical/Team Supporter/Leader</role>
			</roles>
			<timezone>7</timezone>
		</developer>
	</developers>

	<!-- Contributors -->
	<inceptionYear>2017</inceptionYear>
	<contributors>
		<contributor>
			<name>Hai Nguyen</name>
			<email>hainguyenjc@gmail.com</email>
			<roles>
				<role><![CDATA[ Technical/Team/Project Leader ]]></role>
			</roles>
		</contributor>
	</contributors>

	<!-- Profile configuration -->
	<profiles>
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Proguard/JarSigner [for PRODUCTION relase] -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>obfuscation</id>
			<properties>
				<!-- Progurad configuration -->
				<proguard.skip>false</proguard.skip>
				
				<!-- JAR Signer -->
				<jarsigner.skip>false</jarsigner.skip>
			</properties>
		</profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- JDK 1.8 -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>jdk8</id>
			<!-- The development profile is active by default -->
			<activation>
				<jdk>[1.6,1.8)</jdk>
			</activation>
			<properties>
				<!-- General -->
				<revision>1.0-jre8</revision>

				<!-- JDK -->
				<java.version>1.8</java.version>
				<jdk.toolchain>${root.basedir}/toolchains.xml</jdk.toolchain>
				
				<!-- m2e profiles -->
				<eclipse.maven.project.activated.profiles>dev,jdk8</eclipse.maven.project.activated.profiles>
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Maven Plugins -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Eclipse project setup -->
				<eclipse.setup.skip>true</eclipse.setup.skip>

				<!--
					 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
					 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
					 on static final field (non-constant) (static initializer block that has been generated by this plugin)
					 such as `static final Logger logger`
					 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<maven.truelicense.groupId>net.java.truelicense</maven.truelicense.groupId>
				<maven.truelicense.artifactId>truelicense-maven-plugin</maven.truelicense.artifactId>
				<maven.truelicense.version>2.6.4</maven.truelicense.version>
				<maven.proguard.groupId>com.github.wvengen</maven.proguard.groupId>
				<maven.proguard.artifactId>proguard-maven-plugin</maven.proguard.artifactId>
				<maven.proguard.version>2.0.14</maven.proguard.version>
				<maven.proguard-base.version>5.3.2</maven.proguard-base.version>
				<maven.aspectj.groupId>org.codehaus.mojo</maven.aspectj.groupId>
				<maven.aspectj.artifactId>aspectj-maven-plugin</maven.aspectj.artifactId>
				<maven.aspectj.version>1.14.0</maven.aspectj.version>
				
				<!-- AspectJ -->
				<org.aspectj.version>1.8.13</org.aspectj.version>
				<org.aspectj.skip>false</org.aspectj.skip>

				<!-- License password -->
				<license.alias>${module.groupId}</license.alias>
				<license.storepass>01101981</license.storepass>
				<license.keypass>01101981</license.keypass>

				<!-- JAR Signer -->
				<jarsigner.verbose>true</jarsigner.verbose>
				<jarsigner.keystore>${certificate.basedir}/jdk8/jdk8.${module.groupId}.keystore.jks</jarsigner.keystore>
				<jarsigner.cert>${certificate.basedir}/jdk8/jdk8.${module.groupId}.keystore.cer</jarsigner.cert>
				<jarsigner.alias>${license.alias}</jarsigner.alias>
				<jarsigner.storepass>${license.storepass}</jarsigner.storepass>
				<jarsigner.keypass>${license.keypass}</jarsigner.keypass>
				<jarsigner.storetype>JKS</jarsigner.storetype>

				<!-- Lombok -->
				<org.projectlombok.version>1.16.18</org.projectlombok.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Servlet -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 3.1.x (javax - JDK8) -->
				<servlet-api.groupId>javax.servlet</servlet-api.groupId>
				<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
				<servlet-api.version>3.1.0</servlet-api.version>
				<!-- 4.0.x (javax) -->
				<!--<servlet-api.groupId>javax.servlet</servlet-api.groupId>
				<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
				<servlet-api.version>4.0.1</servlet-api.version>-->
				<!-- 4.0.x (jakarta) -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>4.0.4</servlet-api.version>-->
				<!-- 5.0.x (jakarta) -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>5.0.0</servlet-api.version>-->
				<!-- 6.0.x -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>6.0.0</servlet-api.version>-->

				<!-- TODO Deprepcated: Web API due to conflict other dependencies -->
				<!--<javaee-web-api.version>6.0</javaee-web-api.version>-->
				<!--<javaee-web-api.version>7.0</javaee-web-api.version>-->
				<!--<javaee-web-api.version>8.0</javaee-web-api.version>-->
				<!--<javaee-web-api.version>8.0.1</javaee-web-api.version>-->
		
				<!-- JSTL -->
				<jstl.groupId>javax.servlet</jstl.groupId>
				<jstl.artifactId>jstl</jstl.artifactId>
				<!--<jstl.groupId>jakarta.servlet.jsp.jstl</jstl.groupId>
				<jstl.artifactId>jakarta.servlet.jsp.jstl-api</jstl.artifactId>-->
				<jstl.version>1.2</jstl.version>
				<!--<jstl.version>1.2.7</jstl.version>
				<jstl.version>2.0.0</jstl.version>
				<jstl.version>3.0.0</jstl.version>-->

				<!-- WS-RS -->
				<javax.ws.rs.version>2.0.1</javax.ws.rs.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Springframework -->
				<!--
					 https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions
					 + Supported Versions
						6.2.x		is the next planned feature branch (November 2024).
						6.1.x		is the upcoming feature branch (November 2023).
						6.0.x		is the main production line as of November 2022. This new generation of the framework comes with a JDK 17 and Jakarta EE 9 baseline.
						5.3.x		is the final feature branch of the 5th generation, with long-term support provided on JDK 8, JDK 11, JDK 17 and the Java EE 8 level.
						4.3.x		reached its official EOL (end-of-life) on December 31st, 2020. No further maintenance and security patches are planned in that line.
						3.2.x		reached its official EOL (end-of-life) on December 31st, 2016. No further maintenance and security patches are planned in that line.
					 + JDK Version Range:
						Spring Framework 6.2.x:		JDK 17-25 (expected)
						Spring Framework 6.1.x:		JDK 17-23
						Spring Framework 6.0.x:		JDK 17-21
						Spring Framework 5.3.x:		JDK 8-21 (as of 5.3.26)
					 + Java/Jakarta EE Versions
						Spring Framework 6.2.x:		Jakarta EE 9-11 (jakarta namespace)
						Spring Framework 6.1.x:		Jakarta EE 9-10 (jakarta namespace)
						Spring Framework 6.0.x:		Jakarta EE 9-10 (jakarta namespace)
						Spring Framework 5.3.x:		Java EE 7-8 (javax namespace)
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- <spring.framework.version>4.2.5.RELEASE</spring.framework.version> -->
				<!-- <spring.framework.version>4.0.6.RELEASE</spring.framework.version> -->
				<!-- FIXME New version to avoid SecurityException of Spring AOP and maven jar signer.
					Could not generate CGLIB subclass... Common causes of this problem include
					using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException:
					Cannot subclass final class... -->
				<!-- Spring 5.0.x -->
				<!--<spring.framework.version>5.0.4.RELEASE</spring.framework.version>-->
				<!--<spring.framework.version>5.0.20.RELEASE</spring.framework.version>-->
				<!-- Spring 5.1.x -->
				<!--<spring.framework.version>5.1.20.RELEASE</spring.framework.version>-->
				<!-- Spring 5.2.x -->
				<!--<spring.framework.version>5.2.25.RELEASE</spring.framework.version>-->
				<!-- Spring 5.3.x -->
				<spring.framework.version>5.3.30</spring.framework.version>
				<!-- Spring 6.0.x -->
				<!--<spring.framework.version>6.0.13</spring.framework.version>-->
				<!--<spring.framework.version>6.0.14</spring.framework.version>-->
				<!-- Spring 6.1.x -->
				<!--<spring.framework.version>6.1.0</spring.framework.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring LDAP -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring LDAP 2.0.x -->
				<!--<spring.ldap.core.version>2.0.4.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.1.x -->
				<!--<spring.ldap.core.version>2.1.0.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.2.x -->
				<!--<spring.ldap.core.version>2.2.1.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.3.x -->
				<!--<spring.ldap.core.version>2.3.8.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.4.x -->
				<spring.ldap.core.version>2.4.1</spring.ldap.core.version>
				<!-- Spring LDAP 3.0.x -->
				<!--<spring.ldap.core.version>3.0.6</spring.ldap.core.version>-->
				<!-- Spring LDAP 3.1.x -->
				<!--<spring.ldap.core.version>3.1.2</spring.ldap.core.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Security -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Security 3.2.x -->
				<!--<spring.security.version>3.2.9.RELEASE</spring.security.version>-->
				<!-- Spring Security 5.5.x -->
				<!--<spring.security.version>5.5.8</spring.security.version>-->
				<!-- Spring Security 5.6.x -->
				<!--<spring.security.version>5.6.12</spring.security.version>-->
				<!-- Spring Security 5.7.x -->
				<!--<spring.security.version>5.7.11</spring.security.version>-->
				<!-- Spring Security 5.8.x -->
				<spring.security.version>5.8.8</spring.security.version>
				<!-- Spring Security 6.0.x -->
				<!--<spring.security.version>6.0.8</spring.security.version>-->
				<!-- Spring Security 6.1.x -->
				<!--<spring.security.version>6.1.5</spring.security.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data 2.1.x -->
				<!--<spring.springframework.data.version>2.1.10.RELEASE</spring.springframework.data.version>-->
				<!--<spring.springframework.data.version>2.1.21.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.2.x -->
				<!--<spring.springframework.data.version>2.2.13.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.3.x -->
				<!--<spring.springframework.data.version>2.3.9.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.4.x -->
				<!--<spring.springframework.data.version>2.4.15</spring.springframework.data.version>-->
				<!-- Spring Data 2.5.x -->
				<!--<spring.springframework.data.version>2.5.12</spring.springframework.data.version>-->
				<!-- Spring Data 2.6.x -->
				<!--<spring.springframework.data.version>2.6.10</spring.springframework.data.version>-->
				<!-- Spring Data 2.7.x -->
				<spring.springframework.data.version>2.7.17</spring.springframework.data.version>
				<!-- Spring Data 3.0.x -->
				<!--<spring.springframework.data.version>3.0.11</spring.springframework.data.version>-->
				<!-- Spring Data 3.1.x -->
				<!--<spring.springframework.data.version>3.1.5</spring.springframework.data.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data Mongo -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data Mongo 2.1.x -->
				<!--<spring.springframework.data.mongo.version>2.1.10.RELEASE</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 3.3.x -->
				<!--<spring.springframework.data.mongo.version>3.3.10</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 3.4.x -->
				<spring.springframework.data.mongo.version>3.4.17</spring.springframework.data.mongo.version>
				<!-- Spring Data Mongo 4.0.x -->
				<!--<spring.springframework.data.mongo.version>4.0.11</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 4.1.x -->
				<!--<spring.springframework.data.mongo.version>4.1.5</spring.springframework.data.mongo.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring websocket depencencies (javax/jakarta websocket-api) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.0.x (javax) -->
				<!--<javax.websocket.groupId>javax.websocket</javax.websocket.groupId>
				<javax.websocket.artifactId>javax.websocket-api</javax.websocket.artifactId>-->
				<!--<javax.websocket.version>1.0</javax.websocket.version>-->
				<!-- 1.1.x (javax) -->
				<!--<javax.websocket.version>1.1</javax.websocket.version>-->
				<!-- 1.1.x (jakarta) -->
				<javax.websocket.groupId>jakarta.websocket</javax.websocket.groupId>
				<javax.websocket.artifactId>jakarta.websocket-api</javax.websocket.artifactId>
				<!--<javax.websocket.version>1.1.2</javax.websocket.version>-->
				<!-- 2.0.x (jakarta - JDK8+) -->
				<javax.websocket.version>2.0.0</javax.websocket.version>
				<!-- 2.1.x (jakarta - JDK11+) -->
				<!--<javax.websocket.version>2.1.0</javax.websocket.version>-->
				<!--<javax.websocket.version>2.1.1</javax.websocket.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Apache HTTP Components (CORE) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- JDK8/11 -->
				<http.core.groupId>org.apache.httpcomponents</http.core.groupId>
				<http.core.artifactId>httpcore</http.core.artifactId>
				<http.core.version>4.4.5</http.core.version>
		
				<!-- JDK17+ (HTTP/1.1) -->
				<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
				<http.core.artifactId>httpcore5</http.core.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.core.version>5.0.4</http.core.version>-->
				<!-- 5.1.x -->
				<!--<http.core.version>5.1.5</http.core.version>-->
				<!-- 5.2.x -->
				<!--<http.core.version>5.2.1</http.core.version>-->
				<!--<http.core.version>5.2.2</http.core.version>-->
				<!--<http.core.version>5.2.3</http.core.version>-->
		
				<!-- JDK17+ (HTTP/2) -->
				<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
				<http.core.artifactId>httpcore5-h2</http.core.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.core.version>5.0.4</http.core.version>-->
				<!-- 5.1.x -->
				<!--<http.core.version>5.1.5</http.core.version>-->
				<!-- 5.2.x -->
				<!--<http.core.version>5.2.1</http.core.version>-->
				<!--<http.core.version>5.2.2</http.core.version>-->
				<!--<http.core.version>5.2.3</http.core.version>-->
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Apache HTTP Components (CLIENT) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- JDK8/11 -->
				<http.client.groupId>org.apache.httpcomponents</http.client.groupId>
				<http.client.artifactId>httpclient</http.client.artifactId>
				<http.client.version>4.5.2</http.client.version>
		
				<!-- JDK17+ -->
				<!--<http.client.groupId>org.apache.httpcomponents.client5</http.client.groupId>
				<http.client.artifactId>httpclient5</http.client.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.client.version>5.0.4</http.client.version>-->
				<!-- 5.1.x -->
				<!--<http.client.version>5.1.5</http.client.version>-->
				<!-- 5.2.x -->
				<!--<http.client.version>5.2.1</http.client.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 Nimbus - Spring Security JWT Authentication
					 	Version			JDK
					 	9.15.x-			8+
					 	9.20.x+			11+
			 	-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 3.8.x -->
				<!--<com.nimbusds.jose.jwt.version>3.8</com.nimbusds.jose.jwt.version>-->
				<!--<com.nimbusds.jose.jwt.version>3.8.2</com.nimbusds.jose.jwt.version>-->
				<!-- 7.9.x -->
				<!--<com.nimbusds.jose.jwt.version>7.9</com.nimbusds.jose.jwt.version>-->
				<!-- 9.15.x (JDK8+) -->
				<com.nimbusds.jose.jwt.version>9.15.2</com.nimbusds.jose.jwt.version>
				<!-- 9.31.x (JDK11+) -->
				<!--<com.nimbusds.jose.jwt.version>9.31</com.nimbusds.jose.jwt.version>-->
				<!-- 9.37.x (JDK11+) -->
				<!--<com.nimbusds.jose.jwt.version>9.37</com.nimbusds.jose.jwt.version>-->
				<!--<com.nimbusds.jose.jwt.version>9.37.1</com.nimbusds.jose.jwt.version>-->
				
				<!--
				Servlet Spec	JSP Spec	EL Spec		WebSocket Spec		Authentication (JASPIC) Spec	Apache Tomcat Version	Latest Released Version		Supported Java Versions
				6.1				4.0			6.0			TBD					TBD								11.0.x					11.0.0-M13 (alpha)			21+
				6.0				3.1			5.0			2.1					3.0								10.1.x					10.1.16						11+
				5.0				3.0			4.0			2.0					2.0								10.0.x (superseded)		10.0.27 (superseded)		8+
				4.0				2.3			3.0			1.1					1.1								9.0.x					9.0.82						8+
				3.1				2.3			3.0			1.1					1.1								8.5.x					8.5.96						7+
				3.1				2.3			3.0			1.1					N/A								8.0.x (superseded)		8.0.53 (superseded)			7+
				3.0				2.2			2.2			1.1					N/A								7.0.x (archived)		7.0.109 (archived)			6+ (7+ for WebSocket)
				2.5				2.1			2.1			N/A					N/A								6.0.x (archived)		6.0.53 (archived)			5+
				2.4				2.0			N/A			N/A					N/A								5.5.x (archived)		5.5.36 (archived)			1.4+
				2.3				1.2			N/A			N/A					N/A								4.1.x (archived)		4.1.40 (archived)			1.3+
				2.2				1.1			N/A			N/A					N/A								3.3.x (archived)		3.3.2 (archived)			1.1+
				-->
				<!-- Spring websocket depencencies -->
				<!-- Tomcat 7.0.x (JDK6/7+ - 7 and later for WebSocket) -->
				<!-- <org.apache.tomcat.version>7.0.52</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>7.0.109</org.apache.tomcat.version> -->
				<!-- Tomcat 8.0.x (JDK7+) -->
				<org.apache.tomcat.version>8.0.41</org.apache.tomcat.version>
				<!-- <org.apache.tomcat.version>8.0.53</org.apache.tomcat.version> -->
				<!-- Tomcat 8.5.x (JDK7+) -->
				<!-- <org.apache.tomcat.version>8.5.11</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>8.5.95</org.apache.tomcat.version> -->
				<!-- Tomcat 9.0.x (JDK8+) -->
				<!-- <org.apache.tomcat.version>9.0.0.M17</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>9.0.82</org.apache.tomcat.version> -->
				<!-- Tomcat 10.0.x (JDK8+) -->
				<!-- <org.apache.tomcat.version>10.0.27</org.apache.tomcat.version> -->
				<!-- Tomcat 10.1.x (JDK11+) -->
				<!-- <org.apache.tomcat.version>10.1.15</org.apache.tomcat.version> -->
				<!-- Tomcat 11.0.x (JDK21+) -->
				<!-- <org.apache.tomcat.version>11.0.0-M13</org.apache.tomcat.version> -->
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- DATABASE -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- SQL Server -->
				<sqlserver.groupId>com.microsoft.sqlserver</sqlserver.groupId>
				<sqlserver.artifactId>mssql-jdbc</sqlserver.artifactId>
				<sqlserver.version>11.2.3.jre8</sqlserver.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- SLF4J -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.7.x -->
				<!--<org.slf4j.version>1.7.12</org.slf4j.version>-->
				<org.slf4j.version>1.7.36</org.slf4j.version>
				<!-- 2.0.x -->
				<!--<org.slf4j.version>2.0.9</org.slf4j.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 LOGBACK
					 https://logback.qos.ch/dependencies.html
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.1.x (JDK8) -->
				<!--<logback.version>1.1.7</logback.version>-->
				<!-- 1.2.x (JDK8) -->
				<logback.version>1.2.11</logback.version>
				<!--<logback.version>1.2.12</logback.version>-->
				<!-- 1.3.x (JDK11+) -->
				<!--<logback.version>1.3.11</logback.version>-->
				<!-- 1.4.x (JDK11+) -->
				<!--<logback.version>1.4.11</logback.version>-->
			</properties>
			<build>
				<!-- Plugins -->
				<pluginManagement>
					<plugins>
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!--
							 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
							 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
							 on static final field (non-constant) (static initializer block that has been generated by this plugin)
							 such as `static final Logger logger`
							 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
						-->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<plugin>
							<groupId>${maven.truelicense.groupId}</groupId>
							<artifactId>${maven.truelicense.artifactId}</artifactId>
							<version>${maven.truelicense.version}</version>
							<configuration>
								<!-- Avoid exceed maximum bytes while using aspectj -->
								<maxBytes>99999</maxBytes>
							</configuration>
							<executions>
								<execution>
									<id>generate-main-sources</id>
									<goals>
										<!-- The default life cycle phase of this goal is generate-sources. -->
										<goal>generate-main-sources</goal>
									</goals>
								</execution>
								<execution>
									<id>obfuscate-main-classes</id>
									<goals>
										<!-- The default life cycle phase of this goal is process-classes. -->
										<goal>obfuscate-main-classes</goal>
									</goals>
								</execution>
							</executions>
			            </plugin>

			            <!-- Proguard -->
			            <plugin>
							<groupId>${maven.proguard.groupId}</groupId>
							<artifactId>${maven.proguard.artifactId}</artifactId>
							<version>${maven.proguard.version}</version>
							<configuration>
								<!-- internal proguard -->
								<proguardVersion>${maven.proguard-base.version}</proguardVersion>

								<!--
								List external jars your application depends on
								(that not listed in maven dependencies).
								You probably depend on Java runtime (rt.jar).
								JCE stands for Java Cryptography Extension.
								You probably don't need it, but my application does.
								-->
								<libs> <!-- JDK8 -->
									<lib>${java.home}/lib/rt.jar</lib>
									<lib>${java.home}/lib/jce.jar</lib>
									<lib>${java.home}/lib/ext/sunjce_provider.jar</lib>
								</libs>
							</configuration>
							<dependencies>
								<dependency>
									<groupId>net.sf.proguard</groupId>
									<artifactId>proguard-base</artifactId>
									<version>${maven.proguard-base.version}</version>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!--
						 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
						 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
						 on static final field (non-constant) (static initializer block that has been generated by this plugin)
						 such as `static final Logger logger`
						 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
					-->
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<plugin>
						<groupId>${maven.truelicense.groupId}</groupId>
						<artifactId>${maven.truelicense.artifactId}</artifactId>
					</plugin>
				</plugins>
			</build>

			<!-- reporting plugins -->
			<reporting>
				<plugins>
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!--
						 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
						 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
						 on static final field (non-constant) (static initializer block that has been generated by this plugin)
						 such as `static final Logger logger`
						 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
					-->
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<plugin>
						<groupId>${maven.truelicense.groupId}</groupId>
						<artifactId>${maven.truelicense.artifactId}</artifactId>
					</plugin>
				</plugins>
			</reporting>

			<!-- Included Dependencies -->
			<dependencies>
				<!--
					 XML API
					 Due to Eclipse using jdk (java.xml) as module-path, it conflicts with this dependency;
					 so just including it in here profile `jdk8`
				-->
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</dependency>
			</dependencies>

			<!-- Modules -->
			<modules>
				<!-- Base -->
				<module>modules/utilities</module>
				<module>modules/core</module>
			</modules>
		</profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- JDK 11 -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>jdk11</id>
			<!-- The development profile is active by default -->
			<activation>
				<jdk>[1.9,16)</jdk>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- General -->
				<revision>1.0-jre11</revision>

				<!-- JDK -->
				<java.version>11</java.version>
				<jdk.toolchain>${root.basedir}/toolchains.xml</jdk.toolchain>

				<!-- Missing module for JDK11+ -->
				<javax.annotation.version>1.3.2</javax.annotation.version>
				<!-- WS-RS -->
				<javax.ws.rs.version>2.1.1</javax.ws.rs.version>
				
				<!-- m2e profiles -->
				<eclipse.maven.project.activated.profiles>dev,jdk11</eclipse.maven.project.activated.profiles>

				<!--
					FIXME Not using project reference due to
					Classpath entry xxxxxx will not be exported or published. Runtime ClassNotFoundExceptions may result.
				-->
				<maven.eclipse.use.project.references>false</maven.eclipse.use.project.references>
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Maven Plugins -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Eclipse project setup -->
				<eclipse.setup.skip>true</eclipse.setup.skip>

				<!--
					 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
					 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
					 on static final field (non-constant) (static initializer block that has been generated by this plugin)
					 such as `static final Logger logger`
					 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--<maven.truelicense.groupId>global.namespace.truelicense</maven.truelicense.groupId>
				<maven.truelicense.artifactId>truelicense-maven-plugin</maven.truelicense.artifactId>
				<maven.truelicense.version>4.0.3</maven.truelicense.version>-->
				<!--<maven.truelicense.groupId>net.java.truelicense</maven.truelicense.groupId>
				<maven.truelicense.artifactId>truelicense-maven-plugin</maven.truelicense.artifactId>
				<maven.truelicense.version>2.6.6</maven.truelicense.version>
				<maven.truelicense.asm.version>7.3.1</maven.truelicense.asm.version>-->
				<!--
				For:
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<name>proguard-maven-plugin</name>
				<version>2.6.0</version>
				-->
				<maven.proguard.groupId>com.github.wvengen</maven.proguard.groupId>
				<maven.proguard.artifactId>proguard-maven-plugin</maven.proguard.artifactId>
				<maven.proguard.version>2.6.0</maven.proguard.version>
				<maven.proguard-base.version>7.4.1</maven.proguard-base.version>
				<maven.proguard-core.version>9.1.0</maven.proguard-core.version>
				<!--
				For:
				<groupId>com.github.dingxin</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<name>Maven Plugin for ProGuard</name>
				<version>1.0.3</version>
				-->
				<!--<maven.proguard.groupId>com.github.dingxin</maven.proguard.groupId>
				<maven.proguard.artifactId>proguard-maven-plugin</maven.proguard.artifactId>
				<maven.proguard.version>1.0.3</maven.proguard.version>
				<maven.proguard-base.version>6.0.2</maven.proguard-base.version>-->
				
				<!-- Maven AspectJ ok with these 2 plugins -->
				<maven.aspectj.groupId>org.codehaus.mojo</maven.aspectj.groupId>
				<maven.aspectj.artifactId>aspectj-maven-plugin</maven.aspectj.artifactId>
				<maven.aspectj.version>1.14.0</maven.aspectj.version>
				<!--<maven.aspectj.groupId>com.nickwongdev</maven.aspectj.groupId>
				<maven.aspectj.artifactId>aspectj-maven-plugin</maven.aspectj.artifactId>
				<maven.aspectj.version>1.12.1</maven.aspectj.version>-->

				<!-- AspectJ -->
				<org.aspectj.version>1.9.7</org.aspectj.version>
				<org.aspectj.skip>false</org.aspectj.skip>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- jdeps plugin for supporting module-info -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<maven.toolchains.version>3.1.0</maven.toolchains.version>
				<maven.javahome.resolver.version>1.0.2</maven.javahome.resolver.version>
				<maven.jdeps.version>3.1.2</maven.jdeps.version>
				<maven.moditect.version>1.0.0.Final</maven.moditect.version>

				<!-- License password -->
				<license.alias>${module.groupId}</license.alias>
				<license.storepass>01101981</license.storepass>
				<license.keypass>01101981</license.keypass>

				<!-- JAR Signer -->
				<jarsigner.verbose>true</jarsigner.verbose>
				<jarsigner.keystore>${certificate.basedir}/jdk11/jdk11.${module.groupId}.keystore.jks</jarsigner.keystore>
				<jarsigner.cert>${certificate.basedir}/jdk11/jdk11.${module.groupId}.keystore.cer</jarsigner.cert>
				<jarsigner.alias>${license.alias}</jarsigner.alias>
				<jarsigner.storepass>${license.storepass}</jarsigner.storepass>
				<jarsigner.keypass>${license.keypass}</jarsigner.keypass>
				<jarsigner.storetype>JKS</jarsigner.storetype>

				<!-- Lombok (Many improvements for lombok's JDK10/11 support) -->
				<org.projectlombok.version>1.18.4</org.projectlombok.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Servlet -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 3.1.x (javax - JDK8) -->
				<!--<servlet-api.groupId>javax.servlet</servlet-api.groupId>
				<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
				<servlet-api.version>3.1.0</servlet-api.version>-->
				<!-- FIXME Due to code still use javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, etc. not jakarta -->
				<!-- 4.0.x (javax) -->
				<servlet-api.groupId>javax.servlet</servlet-api.groupId>
				<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
				<servlet-api.version>4.0.1</servlet-api.version>
				<!-- 4.0.x (jakarta) -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>4.0.4</servlet-api.version>-->
				<!-- 5.0.x (jakarta) -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>5.0.0</servlet-api.version>-->
				<!-- 6.0.x -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>6.0.0</servlet-api.version>-->

				<!-- TODO Deprepcated: Web API due to conflict other dependencies -->
				<!--<javaee-web-api.version>6.0</javaee-web-api.version>
				<javaee-web-api.version>7.0</javaee-web-api.version>
				<javaee-web-api.version>8.0</javaee-web-api.version>-->
				<!--<javaee-web-api.version>8.0.1</javaee-web-api.version>-->
		
				<!-- JSTL -->
				<jstl.groupId>javax.servlet</jstl.groupId>
				<jstl.artifactId>jstl</jstl.artifactId>
				<jstl.version>1.2</jstl.version>
				<!--<jstl.groupId>jakarta.servlet.jsp.jstl</jstl.groupId>
				<jstl.artifactId>jakarta.servlet.jsp.jstl-api</jstl.artifactId>-->
				<!--<jstl.version>1.2.7</jstl.version>
				<jstl.version>2.0.0</jstl.version>-->
				<!--<jstl.version>3.0.0</jstl.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Springframework -->
				<!--
					 https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions
					 + Supported Versions
						6.2.x		is the next planned feature branch (November 2024).
						6.1.x		is the upcoming feature branch (November 2023).
						6.0.x		is the main production line as of November 2022. This new generation of the framework comes with a JDK 17 and Jakarta EE 9 baseline.
						5.3.x		is the final feature branch of the 5th generation, with long-term support provided on JDK 8, JDK 11, JDK 17 and the Java EE 8 level.
						4.3.x		reached its official EOL (end-of-life) on December 31st, 2020. No further maintenance and security patches are planned in that line.
						3.2.x		reached its official EOL (end-of-life) on December 31st, 2016. No further maintenance and security patches are planned in that line.
					 + JDK Version Range:
						Spring Framework 6.2.x:		JDK 17-25 (expected)
						Spring Framework 6.1.x:		JDK 17-23
						Spring Framework 6.0.x:		JDK 17-21
						Spring Framework 5.3.x:		JDK 8-21 (as of 5.3.26)
					 + Java/Jakarta EE Versions
						Spring Framework 6.2.x:		Jakarta EE 9-11 (jakarta namespace)
						Spring Framework 6.1.x:		Jakarta EE 9-10 (jakarta namespace)
						Spring Framework 6.0.x:		Jakarta EE 9-10 (jakarta namespace)
						Spring Framework 5.3.x:		Java EE 7-8 (javax namespace)
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- <spring.framework.version>4.2.5.RELEASE</spring.framework.version> -->
				<!-- <spring.framework.version>4.0.6.RELEASE</spring.framework.version> -->
				<!-- FIXME New version to avoid SecurityException of Spring AOP and maven jar signer.
					Could not generate CGLIB subclass... Common causes of this problem include
					using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException:
					Cannot subclass final class... -->
				<!-- Spring 5.0.x -->
				<!--<spring.framework.version>5.0.4.RELEASE</spring.framework.version>-->
				<!--<spring.framework.version>5.0.20.RELEASE</spring.framework.version>-->
				<!-- Spring 5.1.x -->
				<!--<spring.framework.version>5.1.20.RELEASE</spring.framework.version>-->
				<!-- Spring 5.2.x -->
				<!--<spring.framework.version>5.2.25.RELEASE</spring.framework.version>-->
				<!-- Spring 5.3.x -->
				<spring.framework.version>5.3.30</spring.framework.version>
				<!-- Spring 6.0.x -->
				<!--<spring.framework.version>6.0.13</spring.framework.version>-->
				<!--<spring.framework.version>6.0.14</spring.framework.version>-->
				<!-- Spring 6.1.x -->
				<!--<spring.framework.version>6.1.0</spring.framework.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring LDAP -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring LDAP 2.0.x -->
				<!--<spring.ldap.core.version>2.0.4.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.1.x -->
				<!--<spring.ldap.core.version>2.1.0.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.2.x -->
				<!--<spring.ldap.core.version>2.2.1.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.3.x -->
				<!--<spring.ldap.core.version>2.3.8.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.4.x -->
				<spring.ldap.core.version>2.4.1</spring.ldap.core.version>
				<!-- Spring LDAP 3.0.x -->
				<!--<spring.ldap.core.version>3.0.6</spring.ldap.core.version>-->
				<!-- Spring LDAP 3.1.x -->
				<!--<spring.ldap.core.version>3.1.2</spring.ldap.core.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Security -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Security 3.2.x -->
				<!--<spring.security.version>3.2.9.RELEASE</spring.security.version>-->
				<!-- Spring Security 5.5.x -->
				<!--<spring.security.version>5.5.8</spring.security.version>-->
				<!-- Spring Security 5.6.x -->
				<!--<spring.security.version>5.6.12</spring.security.version>-->
				<!-- Spring Security 5.7.x -->
				<!--<spring.security.version>5.7.11</spring.security.version>-->
				<!-- Spring Security 5.8.x -->
				<spring.security.version>5.8.8</spring.security.version>
				<!-- Spring Security 6.0.x -->
				<!--<spring.security.version>6.0.8</spring.security.version>-->
				<!-- Spring Security 6.1.x -->
				<!--<spring.security.version>6.1.5</spring.security.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data 2.1.x -->
				<!--<spring.springframework.data.version>2.1.10.RELEASE</spring.springframework.data.version>-->
				<!--<spring.springframework.data.version>2.1.21.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.2.x -->
				<!--<spring.springframework.data.version>2.2.13.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.3.x -->
				<!--<spring.springframework.data.version>2.3.9.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.4.x -->
				<!--<spring.springframework.data.version>2.4.15</spring.springframework.data.version>-->
				<!-- Spring Data 2.5.x -->
				<!--<spring.springframework.data.version>2.5.12</spring.springframework.data.version>-->
				<!-- Spring Data 2.6.x -->
				<!--<spring.springframework.data.version>2.6.10</spring.springframework.data.version>-->
				<!-- Spring Data 2.7.x -->
				<spring.springframework.data.version>2.7.17</spring.springframework.data.version>
				<!-- Spring Data 3.0.x -->
				<!--<spring.springframework.data.version>3.0.11</spring.springframework.data.version>-->
				<!-- Spring Data 3.1.x -->
				<!--<spring.springframework.data.version>3.1.5</spring.springframework.data.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data Mongo -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data Mongo 2.1.x -->
				<!--<spring.springframework.data.mongo.version>2.1.10.RELEASE</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 3.3.x -->
				<!--<spring.springframework.data.mongo.version>3.3.10</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 3.4.x -->
				<spring.springframework.data.mongo.version>3.4.17</spring.springframework.data.mongo.version>
				<!-- Spring Data Mongo 4.0.x -->
				<!--<spring.springframework.data.mongo.version>4.0.11</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 4.1.x -->
				<!--<spring.springframework.data.mongo.version>4.1.5</spring.springframework.data.mongo.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring websocket depencencies (javax/jakarta websocket-api) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.0.x (javax) -->
				<!--<javax.websocket.groupId>javax.websocket</javax.websocket.groupId>
				<javax.websocket.artifactId>javax.websocket-api</javax.websocket.artifactId>-->
				<!--<javax.websocket.version>1.0</javax.websocket.version>-->
				<!-- 1.1.x (javax) -->
				<!--<javax.websocket.version>1.1</javax.websocket.version>-->
				<!-- 1.1.x (jakarta) -->
				<javax.websocket.groupId>jakarta.websocket</javax.websocket.groupId>
				<javax.websocket.artifactId>jakarta.websocket-api</javax.websocket.artifactId>
				<!--<javax.websocket.version>1.1.2</javax.websocket.version>-->
				<!-- 2.0.x (jakarta - JDK8+) -->
				<!--<javax.websocket.version>2.0.0</javax.websocket.version>-->
				<!-- 2.1.x (jakarta - JDK11+) -->
				<!--<javax.websocket.version>2.1.0</javax.websocket.version>-->
				<javax.websocket.version>2.1.1</javax.websocket.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Apache HTTP Components (CORE) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- JDK8/11 -->
				<http.core.groupId>org.apache.httpcomponents</http.core.groupId>
				<http.core.artifactId>httpcore</http.core.artifactId>
				<http.core.version>4.4.5</http.core.version>
		
				<!-- JDK17+ (HTTP/1.1) -->
				<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
				<http.core.artifactId>httpcore5</http.core.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.core.version>5.0.4</http.core.version>-->
				<!-- 5.1.x -->
				<!--<http.core.version>5.1.5</http.core.version>-->
				<!-- 5.2.x -->
				<!--<http.core.version>5.2.1</http.core.version>-->
				<!--<http.core.version>5.2.2</http.core.version>-->
				<!--<http.core.version>5.2.3</http.core.version>-->
		
				<!-- JDK17+ (HTTP/2) -->
				<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
				<http.core.artifactId>httpcore5-h2</http.core.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.core.version>5.0.4</http.core.version>-->
				<!-- 5.1.x -->
				<!--<http.core.version>5.1.5</http.core.version>-->
				<!-- 5.2.x -->
				<!--<http.core.version>5.2.1</http.core.version>-->
				<!--<http.core.version>5.2.2</http.core.version>-->
				<!--<http.core.version>5.2.3</http.core.version>-->
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Apache HTTP Components (CLIENT) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- JDK8/11 -->
				<http.client.groupId>org.apache.httpcomponents</http.client.groupId>
				<http.client.artifactId>httpclient</http.client.artifactId>
				<http.client.version>4.5.2</http.client.version>
		
				<!-- JDK17+ -->
				<!--<http.client.groupId>org.apache.httpcomponents.client5</http.client.groupId>
				<http.client.artifactId>httpclient5</http.client.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.client.version>5.0.4</http.client.version>-->
				<!-- 5.1.x -->
				<!--<http.client.version>5.1.5</http.client.version>-->
				<!-- 5.2.x -->
				<!--<http.client.version>5.2.1</http.client.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 Nimbus - Spring Security JWT Authentication
					 	Version			JDK
					 	9.15.x-			8+
					 	9.20.x+			11+
			 	-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 3.8.x -->
				<!--<com.nimbusds.jose.jwt.version>3.8</com.nimbusds.jose.jwt.version>-->
				<!--<com.nimbusds.jose.jwt.version>3.8.2</com.nimbusds.jose.jwt.version>-->
				<!-- 7.9.x -->
				<!--<com.nimbusds.jose.jwt.version>7.9</com.nimbusds.jose.jwt.version>-->
				<!-- 9.15.x (JDK8+) -->
				<!--<com.nimbusds.jose.jwt.version>9.15.2</com.nimbusds.jose.jwt.version>-->
				<!-- 9.31.x (JDK11+) -->
				<!--<com.nimbusds.jose.jwt.version>9.31</com.nimbusds.jose.jwt.version>-->
				<!-- 9.37.x (JDK11+) -->
				<com.nimbusds.jose.jwt.version>9.37</com.nimbusds.jose.jwt.version>
				<!--<com.nimbusds.jose.jwt.version>9.37.1</com.nimbusds.jose.jwt.version>-->
				
				<!--
				Servlet Spec	JSP Spec	EL Spec		WebSocket Spec		Authentication (JASPIC) Spec	Apache Tomcat Version	Latest Released Version		Supported Java Versions
				6.1				4.0			6.0			TBD					TBD								11.0.x					11.0.0-M13 (alpha)			21+
				6.0				3.1			5.0			2.1					3.0								10.1.x					10.1.16						11+
				5.0				3.0			4.0			2.0					2.0								10.0.x (superseded)		10.0.27 (superseded)		8+
				4.0				2.3			3.0			1.1					1.1								9.0.x					9.0.82						8+
				3.1				2.3			3.0			1.1					1.1								8.5.x					8.5.96						7+
				3.1				2.3			3.0			1.1					N/A								8.0.x (superseded)		8.0.53 (superseded)			7+
				3.0				2.2			2.2			1.1					N/A								7.0.x (archived)		7.0.109 (archived)			6+ (7+ for WebSocket)
				2.5				2.1			2.1			N/A					N/A								6.0.x (archived)		6.0.53 (archived)			5+
				2.4				2.0			N/A			N/A					N/A								5.5.x (archived)		5.5.36 (archived)			1.4+
				2.3				1.2			N/A			N/A					N/A								4.1.x (archived)		4.1.40 (archived)			1.3+
				2.2				1.1			N/A			N/A					N/A								3.3.x (archived)		3.3.2 (archived)			1.1+
				-->
				<!-- Spring websocket depencencies -->
				<!-- Tomcat 7.0.x (JDK6/7+ - 7 and later for WebSocket) -->
				<!-- <org.apache.tomcat.version>7.0.52</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>7.0.109</org.apache.tomcat.version> -->
				<!-- Tomcat 8.0.x (JDK7+) -->
				<!-- <org.apache.tomcat.version>8.0.41</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>8.0.53</org.apache.tomcat.version> -->
				<!-- Tomcat 8.5.x (JDK7+) -->
				<!-- <org.apache.tomcat.version>8.5.11</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>8.5.95</org.apache.tomcat.version> -->
				<!-- Tomcat 9.0.x (JDK8+) -->
				<!-- <org.apache.tomcat.version>9.0.0.M17</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>9.0.82</org.apache.tomcat.version> -->
				<!-- Tomcat 10.0.x (JDK8+) -->
				<!-- <org.apache.tomcat.version>10.0.27</org.apache.tomcat.version> -->
				<!-- Tomcat 10.1.x (JDK11+) -->
				<org.apache.tomcat.version>10.1.15</org.apache.tomcat.version>
				<!-- Tomcat 11.0.x (JDK21+) -->
				<!-- <org.apache.tomcat.version>11.0.0-M13</org.apache.tomcat.version> -->
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- DATABASE -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- SQL Server -->
				<sqlserver.groupId>com.microsoft.sqlserver</sqlserver.groupId>
				<sqlserver.artifactId>mssql-jdbc</sqlserver.artifactId>
				<sqlserver.version>11.2.3.jre11</sqlserver.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- SLF4J -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.7.x -->
				<!--<org.slf4j.version>1.7.12</org.slf4j.version>-->
				<!--<org.slf4j.version>1.7.36</org.slf4j.version>-->
				<!-- 2.0.x -->
				<org.slf4j.version>2.0.9</org.slf4j.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 LOGBACK
					 https://logback.qos.ch/dependencies.html
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.1.x (JDK8) -->
				<!--<logback.version>1.1.7</logback.version>-->
				<!-- 1.2.x (JDK8) -->
				<!--<logback.version>1.2.11</logback.version>-->
				<!--<logback.version>1.2.12</logback.version>-->
				<!-- 1.3.x (JDK8) -->
				<!--<logback.version>1.3.11</logback.version>-->
				<!-- 1.4.x (JDK11) -->
				<logback.version>1.4.11</logback.version>
			</properties>
			<build>
				<!-- Plugins -->
				<pluginManagement>
					<plugins>
						<!-- Groovy for supporting root directory -->
						<plugin>
							<groupId>org.codehaus.gmaven</groupId>
							<artifactId>groovy-maven-plugin</artifactId>
							<dependencies>
								<!-- For fixing `illegal-access=warn` from JDK11+ -->
								<dependency>
								    <groupId>org.apache.groovy</groupId>
								    <artifactId>groovy-all</artifactId>
								    <version>4.0.15</version>
								    <type>pom</type>
								</dependency>
							</dependencies>
						</plugin>

						<!-- Eclipse -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-eclipse-plugin</artifactId>
							<version>${maven.eclipse.version}</version>
							<configuration>
								<skip>${eclipse.setup.skip}</skip>
								<useProjectReferences>${maven.eclipse.use.project.references}</useProjectReferences>
								<jeeversion>6.0</jeeversion>
								<downloadSources>true</downloadSources>
								<downloadJavadocs>true</downloadJavadocs>
								<classpathContainers>
									<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
									<classpathContainer>org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
									<!--<classpathContainer>org.eclipse.jst.j2ee.internal.module.container</classpathContainer>-->
								</classpathContainers>
								<additionalProjectFacets>
									<jst.java>${java.version}</jst.java>
									<jst.utility>${project.facet.java.utility.version}</jst.utility>
								</additionalProjectFacets>
								<additionalBuildcommands>
									<buildCommand>
										<name>org.eclipse.jdt.core.javabuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.wst.common.project.facet.core.builder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.m2e.core.maven2Builder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.wst.validation.validationbuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
								</additionalBuildcommands>
								<additionalProjectnatures>
									<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
									<projectnature>org.eclipse.jdt.core.javanature</projectnature>
									<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
									<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
								</additionalProjectnatures>
								<additionalConfig>
									<file>
										<name>.settings/org.eclipse.m2e.core.prefs</name>
										<content>
<![CDATA[activeProfiles=${eclipse.maven.project.activated.profiles}
eclipse.perferences.version=1
resolveWorkspaceProjects=true
version=1]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.jdt.core.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
encoding/${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding/${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding/${maven.dependency.unpack.root.directory}=${project.build.sourceEncoding}
encoding/src/main/java=${project.build.sourceEncoding}
encoding/src/main/resources=${project.build.sourceEncoding}
encoding/src/test/java=${project.build.sourceEncoding}
encoding/src/test/resources=${project.build.sourceEncoding}
encoding/target/generated-test-sources/test-annotations=${project.build.sourceEncoding}
org.eclipse.jdt.core.compiler.codegen.targetPlatform=${java.version}
org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory=${org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory}
org.eclipse.jdt.core.compiler.compliance=${java.version}
org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled
org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore
org.eclipse.jdt.core.compiler.processAnnotations=${org.eclipse.jdt.core.compiler.processAnnotations}
org.eclipse.jdt.core.compiler.release=${org.eclipse.jdt.core.compiler.release}
org.eclipse.jdt.core.compiler.source=${java.version}]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.jdt.apt.core.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=${m2e.apt.aptEnabled}
org.eclipse.jdt.apt.genSrcDir=${org.projectlombok.generated.source}
org.eclipse.jdt.apt.genTestSrcDir=${org.projectlombok.generated.test-source}
org.eclipse.jdt.apt.processorOptions/sql.validation=true
org.eclipse.jdt.apt.reconcileEnabled=true]]>
										</content>
									</file>
									<file>
										<name>.settings/org.hibernate.eclipse.console.prefs</name>
										<content>
<![CDATA[default.configuration=${project.artifactId}
eclipse.preferences.version=1
hibernate3.enabled=true]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.wst.common.project.facet.core.xml</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<faceted-project>
	<fixed facet="jst.java"/>
	<fixed facet="jst.utility"/>
	<installed facet="jst.java" version="${java.version}"/>
	<installed facet="jst.utility" version="${project.facet.java.utility.version}"/>
</faceted-project>]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.core.resources.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
encoding//src/main/java=${project.build.sourceEncoding}
encoding//src/main/resources=${project.build.sourceEncoding}
encoding//src/test/java=${project.build.sourceEncoding}
encoding//src/test/resources=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.source.directory}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.resource.directory}=${project.build.sourceEncoding}
encoding/<project>=${project.build.sourceEncoding}]]>
										</content>
									</file>
									<file>
										<name>.factorypath</name>
										<content>
<![CDATA[<factorypath>
	<factorypathentry kind="PLUGIN" id="org.eclipse.jst.ws.annotations.core" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/projectlombok/lombok/${org.projectlombok.version}/lombok-${org.projectlombok.version}.jar" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/seasar/doma/doma/${doma.version}/doma-${doma.version}.jar" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/javax/annotation/javax.annotation-api/${javax.annotation.version}/javax.annotation-api-${javax.annotation.version}.jar" enabled="true" runInBatchMode="false"/>
</factorypath>]]>
										</content>
									</file>
									<file>
										<name>.project</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<projectDescription>
	<name>${project.artifactId}-${project.version}</name>
	<comment>${project.description}</comment>
	<projects/>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.project.facet.core.builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.m2e.core.maven2Builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.m2e.core.maven2Nature</nature>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
	</natures>
</projectDescription>]]>
										</content>
									</file>
									<!-- deployment assembly component -->
									<file>
										<name>.settings/org.eclipse.wst.common.component</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
	<project-modules id="moduleCoreId" project-version="1.5.0">
    <wb-module deploy-name="${project.artifactId}-${project.version}">
        <wb-resource deploy-path="/" source-path="/src/test/java"/>
        <wb-resource deploy-path="/" source-path="/src/test/resources"/>
        <wb-resource deploy-path="/" source-path="/src/main/java"/>
        <wb-resource deploy-path="/" source-path="/src/main/resources"/>
        <wb-resource deploy-path="/" source-path="/${org.projectlombok.generated.source}"/>
        <wb-resource deploy-path="/" source-path="/${org.projectlombok.generated.test-source}"/>
        <wb-resource deploy-path="/" source-path="/${maven.dependency.unpack.source.directory}"/>
        <wb-resource deploy-path="/" source-path="/${maven.dependency.unpack.resource.directory}"/>
    </wb-module>
</project-modules>]]>
										</content>
									</file>
								</additionalConfig>
							</configuration>
						</plugin>

						<!-- Compiler -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<configuration>
								<annotationProcessorPaths>
									<path>
										<groupId>org.projectlombok</groupId>
										<artifactId>lombok</artifactId>
										<version>${org.projectlombok.version}</version>
									</path>
									<path>
										<groupId>org.seasar.doma</groupId>
										<artifactId>doma</artifactId>
										<version>${doma.version}</version>
									</path>
									<!-- for JDK11+ -->
									<path>
										<groupId>javax.annotation</groupId>
									    <artifactId>javax.annotation-api</artifactId>
									    <version>${javax.annotation.version}</version>
									</path>
								</annotationProcessorPaths>
								<!-- for JDK11+ -->
								<jdkToolchain>
									<version>${java.version}</version>
								</jdkToolchain>
							</configuration>
						</plugin>

			            <!-- Proguard -->
			            <plugin>
							<groupId>${maven.proguard.groupId}</groupId>
							<artifactId>${maven.proguard.artifactId}</artifactId>
							<configuration>
								<!-- internal proguard -->
								<proguardVersion>${maven.proguard-base.version}</proguardVersion>

								<!--
								List external jars your application depends on
								(that not listed in maven dependencies).
								You probably depend on Java runtime (rt.jar).
								JCE stands for Java Cryptography Extension.
								You probably don't need it, but my application does.
								-->
								<libs> <!-- JDK11+ -->
									<lib>${java.home}/lib/jrt-fs.jar</lib>
				                    <lib>${java.home}/jmods/java.smartcardio.jmod</lib>
									<lib>${java.home}/jmods/java.sql.jmod</lib>
									<lib>${java.home}/jmods/java.sql.rowset.jmod</lib>
									<lib>${java.home}/jmods/java.transaction.xa.jmod</lib>
									<lib>${java.home}/jmods/java.xml.crypto.jmod</lib>
									<lib>${java.home}/jmods/java.xml.jmod</lib>
									<lib>${java.home}/jmods/jdk.accessibility.jmod</lib>
									<lib>${java.home}/jmods/jdk.attach.jmod</lib>
									<lib>${java.home}/jmods/jdk.compiler.jmod</lib>
									<lib>${java.home}/jmods/jdk.crypto.cryptoki.jmod</lib>
									<lib>${java.home}/jmods/jdk.crypto.ec.jmod</lib>
									<lib>${java.home}/jmods/jdk.crypto.mscapi.jmod</lib>
									<lib>${java.home}/jmods/jdk.charsets.jmod</lib>
									<lib>${java.home}/jmods/jdk.dynalink.jmod</lib>
									<lib>${java.home}/jmods/jdk.editpad.jmod</lib>
									<lib>${java.home}/jmods/jdk.hotspot.agent.jmod</lib>
									<lib>${java.home}/jmods/jdk.httpserver.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.ed.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.jvmstat.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.le.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.opt.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.vm.ci.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.vm.compiler.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.vm.compiler.management.jmod</lib>
									<lib>${java.home}/jmods/jdk.jartool.jmod</lib>
									<lib>${java.home}/jmods/jdk.javadoc.jmod</lib>
									<lib>${java.home}/jmods/jdk.jcmd.jmod</lib>
									<lib>${java.home}/jmods/jdk.jconsole.jmod</lib>
									<lib>${java.home}/jmods/jdk.jdeps.jmod</lib>
									<lib>${java.home}/jmods/jdk.jdi.jmod</lib>
									<lib>${java.home}/jmods/jdk.jdwp.agent.jmod</lib>
									<lib>${java.home}/jmods/jdk.jfr.jmod</lib>
									<lib>${java.home}/jmods/jdk.jlink.jmod</lib>
									<lib>${java.home}/jmods/jdk.jshell.jmod</lib>
									<lib>${java.home}/jmods/jdk.jsobject.jmod</lib>
									<lib>${java.home}/jmods/jdk.jstatd.jmod</lib>
									<lib>${java.home}/jmods/jdk.localedata.jmod</lib>
									<lib>${java.home}/jmods/jdk.management.agent.jmod</lib>
									<lib>${java.home}/jmods/jdk.management.jfr.jmod</lib>
									<lib>${java.home}/jmods/jdk.management.jmod</lib>
									<lib>${java.home}/jmods/jdk.naming.dns.jmod</lib>
									<lib>${java.home}/jmods/jdk.naming.ldap.jmod</lib>
									<lib>${java.home}/jmods/jdk.naming.rmi.jmod</lib>
									<lib>${java.home}/jmods/jdk.net.jmod</lib>
									<lib>${java.home}/jmods/jdk.pack.jmod</lib>
									<lib>${java.home}/jmods/jdk.rmic.jmod</lib>
									<lib>${java.home}/jmods/jdk.scripting.nashorn.jmod</lib>
									<lib>${java.home}/jmods/jdk.scripting.nashorn.shell.jmod</lib>
									<lib>${java.home}/jmods/jdk.sctp.jmod</lib>
									<lib>${java.home}/jmods/jdk.security.auth.jmod</lib>
									<lib>${java.home}/jmods/jdk.security.jgss.jmod</lib>
									<lib>${java.home}/jmods/jdk.unsupported.desktop.jmod</lib>
									<lib>${java.home}/jmods/jdk.unsupported.jmod</lib>
									<lib>${java.home}/jmods/jdk.xml.dom.jmod</lib>
									<lib>${java.home}/jmods/jdk.zipfs.jmod</lib>
									<lib>${java.home}/jmods/java.base.jmod</lib>
									<lib>${java.home}/jmods/java.compiler.jmod</lib>
									<lib>${java.home}/jmods/java.datatransfer.jmod</lib>
									<lib>${java.home}/jmods/java.desktop.jmod</lib>
									<lib>${java.home}/jmods/java.instrument.jmod</lib>
									<lib>${java.home}/jmods/java.logging.jmod</lib>
									<lib>${java.home}/jmods/java.management.jmod</lib>
									<lib>${java.home}/jmods/java.management.rmi.jmod</lib>
									<lib>${java.home}/jmods/java.naming.jmod</lib>
									<lib>${java.home}/jmods/java.net.http.jmod</lib>
									<lib>${java.home}/jmods/java.prefs.jmod</lib>
									<lib>${java.home}/jmods/java.rmi.jmod</lib>
									<lib>${java.home}/jmods/java.scripting.jmod</lib>
									<lib>${java.home}/jmods/java.se.jmod</lib>
									<lib>${java.home}/jmods/java.security.jgss.jmod</lib>
									<lib>${java.home}/jmods/java.security.sasl.jmod</lib>
								</libs>
							</configuration>
							<dependencies>
								<!--
								For:
								<groupId>com.github.wvengen</groupId>
								<artifactId>proguard-maven-plugin</artifactId>
								<name>proguard-maven-plugin</name>
								<version>2.6.0</version>
								-->
								<dependency>
									<groupId>com.guardsquare</groupId>
									<artifactId>proguard-base</artifactId>
									<version>${maven.proguard-base.version}</version>
								</dependency>
								<dependency>
									<groupId>com.guardsquare</groupId>
									<artifactId>proguard-core</artifactId>
									<version>${maven.proguard-core.version}</version>
								</dependency>

								<!--
								For:
								<groupId>com.github.dingxin</groupId>
								<artifactId>proguard-maven-plugin</artifactId>
								<name>Maven Plugin for ProGuard</name>
								<version>1.0.3</version>
								-->
								<!--<dependency>
									<groupId>net.sf.proguard</groupId>
									<artifactId>proguard-base</artifactId>
									<version>${maven.proguard-base.version}</version>
								</dependency>-->
							</dependencies>
						</plugin>
						
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- jdeps plugin for supporting module-info -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- toolchains -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${maven.toolchains.version}</version>
							<configuration>
								<toolchains>
									<jdk>
										<version>${java.version}</version>
									</jdk>
								</toolchains>
							</configuration>
							<executions>
								<execution>
							    	<goals>
										<goal>toolchain</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<!-- support for exporting JAVA_HOME path to `javaHome` maven property -->
						<plugin>
							<groupId>com.diamondq.maven</groupId>
							<artifactId>javahome-resolver-maven-plugin</artifactId>
							<version>${maven.javahome.resolver.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>resolve</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
		    			<!--<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jdeps-plugin</artifactId>
							<version>${maven.jdeps.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>jdkinternals</goal>
									</goals>
								</execution>
							</executions>
		    			</plugin>
						<plugin>
						    <groupId>org.moditect</groupId>
						    <artifactId>moditect-maven-plugin</artifactId>
						    <version>${maven.moditect.version}</version>
						    <executions>
								<execution>
						            <id>generate-module-info</id>
						            <phase>generate-sources</phase>
						            <goals>
						                <goal>generate-module-info</goal>
						            </goals>
						            <configuration>
									    <modules>
									        <module>
									            <moduleInfo>
									                <name>${project.groupId}</name>
									                <exports>
														*;
													</exports>
									            </moduleInfo>
									        </module>
									    </modules>
									</configuration>
								</execution>
						    </executions>
						</plugin>-->
					</plugins>
				</pluginManagement>
				<plugins>
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- jdeps plugin for supporting module-info -->
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- toolchains -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
					</plugin>
					<!-- support for exporting JAVA_HOME path to `javaHome` maven property -->
					<plugin>
						<groupId>com.diamondq.maven</groupId>
						<artifactId>javahome-resolver-maven-plugin</artifactId>
					</plugin>
	    			<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
	    			</plugin>
					<plugin>
						<groupId>org.moditect</groupId>
					    <artifactId>moditect-maven-plugin</artifactId>
					</plugin>-->
				</plugins>
			</build>
			
			<!-- reporting plugins -->
			<reporting>
				<plugins>
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- jdeps plugin for supporting module-info -->
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- toolchains -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
					</plugin>
					<!-- support for exporting JAVA_HOME path to `javaHome` maven property -->
					<plugin>
						<groupId>com.diamondq.maven</groupId>
						<artifactId>javahome-resolver-maven-plugin</artifactId>
					</plugin>
	    			<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
	    			</plugin>
					<plugin>
						<groupId>org.moditect</groupId>
					    <artifactId>moditect-maven-plugin</artifactId>
					</plugin>-->
				</plugins>
			</reporting>

			<!-- Dependencies -->
			<dependencyManagement>
				<dependencies>
					<dependency>
					    <groupId>javax.annotation</groupId>
					    <artifactId>javax.annotation-api</artifactId>
					    <version>${javax.annotation.version}</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
				    <groupId>javax.annotation</groupId>
				    <artifactId>javax.annotation-api</artifactId>
				</dependency>
			</dependencies>

			<!-- Modules -->
			<modules>
				<!-- Base -->
				<module>modules/utilities</module>
				<module>modules/core</module>
			</modules>
		</profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- JDK 17 -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>jdk17</id>
			<!-- The development profile is active by default -->
			<activation>
				<jdk>[17,)</jdk>
			</activation>
			<properties>
				<!-- General -->
				<revision>1.0-jre17</revision>

				<!-- JDK -->
				<java.version>17</java.version>
				<jdk.toolchain>${root.basedir}/toolchains.xml</jdk.toolchain>

				<!-- Missing module for JDK17+ -->
				<jakarta.annotation.version>2.1.1</jakarta.annotation.version>
				<!-- WS-RS -->
				<javax.ws.rs.version>2.1.1</javax.ws.rs.version>
				
				<!-- m2e profiles -->
				<eclipse.maven.project.activated.profiles>dev,jdk17</eclipse.maven.project.activated.profiles>

				<!--
					FIXME Trouble with APT Annotation Processor:
					https://github.com/redhat-developer/vscode-java/issues/580#issuecomment-443302372
					- add <m2e.apt.activation>disabled</m2e.apt.activation> to your pom <properties> section
					- set org.eclipse.jdt.core.compiler.processAnnotations=disabled in .settings/org.eclipse.jdt.core.prefs
					- set org.eclipse.jdt.apt.aptEnabled=false in .settings/org.eclipse.jdt.apt.core.prefs
					- execute the Update project configuration command from the pom.xml context menu
				-->
				<!-- automatically run annotation processors within the incremental compilation -->
				<m2e.apt.activation>disabled</m2e.apt.activation>
				<m2e.apt.aptEnabled>false</m2e.apt.aptEnabled>
				<org.eclipse.jdt.core.compiler.processAnnotations>disabled</org.eclipse.jdt.core.compiler.processAnnotations>
				<org.eclipse.jdt.core.compiler.release>disabled</org.eclipse.jdt.core.compiler.release>
				<org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory>disabled</org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory>
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Maven Plugins -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Eclipse project setup -->
				<eclipse.setup.skip>true</eclipse.setup.skip>
				<!--
					FIXME Not using project reference due to
					Classpath entry xxxxxx will not be exported or published. Runtime ClassNotFoundExceptions may result.
				-->
				<maven.eclipse.use.project.references>false</maven.eclipse.use.project.references>

				<!--
					 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
					 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
					 on static final field (non-constant) (static initializer block that has been generated by this plugin)
					 such as `static final Logger logger`
					 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--<maven.truelicense.groupId>global.namespace.truelicense</maven.truelicense.groupId>
				<maven.truelicense.artifactId>truelicense-maven-plugin</maven.truelicense.artifactId>
				<maven.truelicense.version>4.0.3</maven.truelicense.version>-->
				<!--<maven.truelicense.groupId>net.java.truelicense</maven.truelicense.groupId>
				<maven.truelicense.artifactId>truelicense-maven-plugin</maven.truelicense.artifactId>
				<maven.truelicense.version>2.6.6</maven.truelicense.version>
				<maven.truelicense.asm.version>9.6</maven.truelicense.asm.version>-->
				<!--
				For:
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<name>proguard-maven-plugin</name>
				<version>2.6.0</version>
				-->
				<maven.proguard.groupId>com.github.wvengen</maven.proguard.groupId>
				<maven.proguard.artifactId>proguard-maven-plugin</maven.proguard.artifactId>
				<maven.proguard.version>2.6.0</maven.proguard.version>
				<maven.proguard-base.version>7.4.1</maven.proguard-base.version>
				<maven.proguard-core.version>9.1.0</maven.proguard-core.version>
				<!--
				For:
				<groupId>com.github.dingxin</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<name>Maven Plugin for ProGuard</name>
				<version>1.0.3</version>
				-->
				<!--<maven.proguard.groupId>com.github.dingxin</maven.proguard.groupId>
				<maven.proguard.artifactId>proguard-maven-plugin</maven.proguard.artifactId>
				<maven.proguard.version>1.0.3</maven.proguard.version>
				<maven.proguard-base.version>6.0.2</maven.proguard-base.version>-->
				
				<!-- Maven AspectJ ok with these 2 plugins -->
				<maven.aspectj.groupId>org.codehaus.mojo</maven.aspectj.groupId>
				<maven.aspectj.artifactId>aspectj-maven-plugin</maven.aspectj.artifactId>
				<maven.aspectj.version>1.14.0</maven.aspectj.version>
				<!--<maven.aspectj.groupId>com.nickwongdev</maven.aspectj.groupId>
				<maven.aspectj.artifactId>aspectj-maven-plugin</maven.aspectj.artifactId>
				<maven.aspectj.version>1.12.1</maven.aspectj.version>-->
				
				<!-- AspectJ -->
				<org.aspectj.version>1.9.20.1</org.aspectj.version>
				<org.aspectj.skip>false</org.aspectj.skip>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- jdeps plugin for supporting module-info -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<maven.toolchains.version>3.1.0</maven.toolchains.version>
				<maven.javahome.resolver.version>1.0.2</maven.javahome.resolver.version>
				<maven.jdeps.version>3.1.2</maven.jdeps.version>
				<maven.jdeps.version>3.1.2</maven.jdeps.version>

				<!-- License password -->
				<license.alias>${module.groupId}</license.alias>
				<license.storepass>01101981</license.storepass>
				<license.keypass>01101981</license.keypass>

				<!-- JAR Signer -->
				<jarsigner.verbose>true</jarsigner.verbose>
				<jarsigner.keystore>${certificate.basedir}/jdk17/jdk17.${module.groupId}.keystore.jks</jarsigner.keystore>
				<jarsigner.cert>${certificate.basedir}/jdk17/jdk17.${module.groupId}.keystore.cer</jarsigner.cert>
				<jarsigner.alias>${license.alias}</jarsigner.alias>
				<jarsigner.storepass>${license.storepass}</jarsigner.storepass>
				<jarsigner.keypass>${license.keypass}</jarsigner.keypass>
				<jarsigner.storetype>JKS</jarsigner.storetype>

				<!-- Lombok (Many improvements for lombok's JDK10/11 support) -->
				<org.projectlombok.version>1.18.20</org.projectlombok.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Servlet -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 3.1.x (javax - JDK8) -->
				<!--<servlet-api.groupId>javax.servlet</servlet-api.groupId>
				<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
				<servlet-api.version>3.1.0</servlet-api.version>-->
				<!-- 4.0.x (javax) -->
				<!--<servlet-api.groupId>javax.servlet</servlet-api.groupId>
				<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
				<servlet-api.version>4.0.0</servlet-api.version>-->
				<!--<servlet-api.version>4.0.1</servlet-api.version>-->
				<!-- 4.0.x (jakarta) -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>4.0.4</servlet-api.version>-->
				<!-- 5.0.x (jakarta) -->
				<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>5.0.0</servlet-api.version>-->
				<!-- 6.0.x -->
				<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
				<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
				<servlet-api.version>6.0.0</servlet-api.version>

				<!-- TODO Deprepcated: Web API due to conflict other dependencies -->
				<!--<javaee-web-api.version>6.0</javaee-web-api.version>
				<javaee-web-api.version>7.0</javaee-web-api.version>
				<javaee-web-api.version>8.0</javaee-web-api.version>-->
				<!--<javaee-web-api.version>8.0.1</javaee-web-api.version>-->
		
				<!-- JSTL -->
				<!--<jstl.groupId>javax.servlet</jstl.groupId>
				<jstl.artifactId>jstl</jstl.artifactId>
				<jstl.version>1.2</jstl.version>-->
				<jstl.groupId>jakarta.servlet.jsp.jstl</jstl.groupId>
				<jstl.artifactId>jakarta.servlet.jsp.jstl-api</jstl.artifactId>
				<!--<jstl.version>1.2.7</jstl.version>
				<jstl.version>2.0.0</jstl.version>-->
				<jstl.version>3.0.0</jstl.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Springframework -->
				<!--
					 https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions
					 + Supported Versions
						6.2.x		is the next planned feature branch (November 2024).
						6.1.x		is the upcoming feature branch (November 2023).
						6.0.x		is the main production line as of November 2022. This new generation of the framework comes with a JDK 17 and Jakarta EE 9 baseline.
						5.3.x		is the final feature branch of the 5th generation, with long-term support provided on JDK 8, JDK 11, JDK 17 and the Java EE 8 level.
						4.3.x		reached its official EOL (end-of-life) on December 31st, 2020. No further maintenance and security patches are planned in that line.
						3.2.x		reached its official EOL (end-of-life) on December 31st, 2016. No further maintenance and security patches are planned in that line.
					 + JDK Version Range:
						Spring Framework 6.2.x:		JDK 17-25 (expected)
						Spring Framework 6.1.x:		JDK 17-23
						Spring Framework 6.0.x:		JDK 17-21
						Spring Framework 5.3.x:		JDK 8-21 (as of 5.3.26)
					 + Java/Jakarta EE Versions
						Spring Framework 6.2.x:		Jakarta EE 9-11 (jakarta namespace)
						Spring Framework 6.1.x:		Jakarta EE 9-10 (jakarta namespace)
						Spring Framework 6.0.x:		Jakarta EE 9-10 (jakarta namespace)
						Spring Framework 5.3.x:		Java EE 7-8 (javax namespace)
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- <spring.framework.version>4.2.5.RELEASE</spring.framework.version> -->
				<!-- <spring.framework.version>4.0.6.RELEASE</spring.framework.version> -->
				<!-- FIXME New version to avoid SecurityException of Spring AOP and maven jar signer.
					Could not generate CGLIB subclass... Common causes of this problem include
					using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException:
					Cannot subclass final class... -->
				<!-- Spring 5.0.x -->
				<!--<spring.framework.version>5.0.4.RELEASE</spring.framework.version>-->
				<!--<spring.framework.version>5.0.20.RELEASE</spring.framework.version>-->
				<!-- Spring 5.1.x -->
				<!--<spring.framework.version>5.1.20.RELEASE</spring.framework.version>-->
				<!-- Spring 5.2.x -->
				<!--<spring.framework.version>5.2.25.RELEASE</spring.framework.version>-->
				<!-- Spring 5.3.x -->
				<!--<spring.framework.version>5.3.30</spring.framework.version>-->
				<!-- Spring 6.0.x -->
				<spring.framework.version>6.0.13</spring.framework.version>
				<!--<spring.framework.version>6.0.14</spring.framework.version>-->
				<!-- Spring 6.1.x -->
				<!--<spring.framework.version>6.1.0</spring.framework.version>-->

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring LDAP -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring LDAP 2.0.x -->
				<!--<spring.ldap.core.version>2.0.4.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.1.x -->
				<!--<spring.ldap.core.version>2.1.0.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.2.x -->
				<!--<spring.ldap.core.version>2.2.1.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.3.x -->
				<!--<spring.ldap.core.version>2.3.8.RELEASE</spring.ldap.core.version>-->
				<!-- Spring LDAP 2.4.x -->
				<!--<spring.ldap.core.version>2.4.1</spring.ldap.core.version>-->
				<!-- Spring LDAP 3.0.x -->
				<!--<spring.ldap.core.version>3.0.6</spring.ldap.core.version>-->
				<!-- Spring LDAP 3.1.x -->
				<spring.ldap.core.version>3.1.2</spring.ldap.core.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Security -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Security 3.2.x -->
				<!--<spring.security.version>3.2.9.RELEASE</spring.security.version>-->
				<!-- Spring Security 5.5.x -->
				<!--<spring.security.version>5.5.8</spring.security.version>-->
				<!-- Spring Security 5.6.x -->
				<!--<spring.security.version>5.6.12</spring.security.version>-->
				<!-- Spring Security 5.7.x -->
				<!--<spring.security.version>5.7.11</spring.security.version>-->
				<!-- Spring Security 5.8.x -->
				<!--<spring.security.version>5.8.8</spring.security.version>-->
				<!-- Spring Security 6.0.x -->
				<!--<spring.security.version>6.0.8</spring.security.version>-->
				<!-- Spring Security 6.1.x -->
				<spring.security.version>6.1.5</spring.security.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data 2.1.x -->
				<!--<spring.springframework.data.version>2.1.10.RELEASE</spring.springframework.data.version>-->
				<!--<spring.springframework.data.version>2.1.21.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.2.x -->
				<!--<spring.springframework.data.version>2.2.13.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.3.x -->
				<!--<spring.springframework.data.version>2.3.9.RELEASE</spring.springframework.data.version>-->
				<!-- Spring Data 2.4.x -->
				<!--<spring.springframework.data.version>2.4.15</spring.springframework.data.version>-->
				<!-- Spring Data 2.5.x -->
				<!--<spring.springframework.data.version>2.5.12</spring.springframework.data.version>-->
				<!-- Spring Data 2.6.x -->
				<!--<spring.springframework.data.version>2.6.10</spring.springframework.data.version>-->
				<!-- Spring Data 2.7.x -->
				<!--<spring.springframework.data.version>2.7.17</spring.springframework.data.version>-->
				<!-- Spring Data 3.0.x -->
				<!--<spring.springframework.data.version>3.0.11</spring.springframework.data.version>-->
				<!-- Spring Data 3.1.x -->
				<spring.springframework.data.version>3.1.5</spring.springframework.data.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data Mongo -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring Data Mongo 2.1.x -->
				<!--<spring.springframework.data.mongo.version>2.1.10.RELEASE</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 3.3.x -->
				<!--<spring.springframework.data.mongo.version>3.3.10</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 3.4.x -->
				<!--<spring.springframework.data.mongo.version>3.4.17</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 4.0.x -->
				<!--<spring.springframework.data.mongo.version>4.0.11</spring.springframework.data.mongo.version>-->
				<!-- Spring Data Mongo 4.1.x -->
				<spring.springframework.data.mongo.version>4.1.5</spring.springframework.data.mongo.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Spring websocket depencencies (javax/jakarta websocket-api) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.0.x (javax) -->
				<!--<javax.websocket.groupId>javax.websocket</javax.websocket.groupId>
				<javax.websocket.artifactId>javax.websocket-api</javax.websocket.artifactId>-->
				<!--<javax.websocket.version>1.0</javax.websocket.version>-->
				<!-- 1.1.x (javax) -->
				<!--<javax.websocket.version>1.1</javax.websocket.version>-->
				<!-- 1.1.x (jakarta) -->
				<javax.websocket.groupId>jakarta.websocket</javax.websocket.groupId>
				<javax.websocket.artifactId>jakarta.websocket-api</javax.websocket.artifactId>
				<!--<javax.websocket.version>1.1.2</javax.websocket.version>-->
				<!-- 2.0.x (jakarta - JDK8+) -->
				<!--<javax.websocket.version>2.0.0</javax.websocket.version>-->
				<!-- 2.1.x (jakarta - JDK11+) -->
				<!--<javax.websocket.version>2.1.0</javax.websocket.version>-->
				<javax.websocket.version>2.1.1</javax.websocket.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Apache HTTP Components (CORE) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- JDK8/11 -->
				<!--<http.core.groupId>org.apache.httpcomponents</http.core.groupId>
				<http.core.artifactId>httpcore</http.core.artifactId>
				<http.core.version>4.4.5</http.core.version>-->
		
				<!-- JDK17+ (HTTP/1.1) -->
				<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
				<http.core.artifactId>httpcore5</http.core.artifactId>
				<!-- 5.0.x -->
				<!--<http.core.version>5.0.4</http.core.version>-->
				<!-- 5.1.x -->
				<!--<http.core.version>5.1.5</http.core.version>-->
				<!-- 5.2.x -->
				<!--<http.core.version>5.2.1</http.core.version>-->
				<!--<http.core.version>5.2.2</http.core.version>-->
				<http.core.version>5.2.3</http.core.version>
		
				<!-- JDK17+ (HTTP/2) -->
				<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
				<http.core.artifactId>httpcore5-h2</http.core.artifactId>-->
				<!-- 5.0.x -->
				<!--<http.core.version>5.0.4</http.core.version>-->
				<!-- 5.1.x -->
				<!--<http.core.version>5.1.5</http.core.version>-->
				<!-- 5.2.x -->
				<!--<http.core.version>5.2.1</http.core.version>-->
				<!--<http.core.version>5.2.2</http.core.version>-->
				<!--<http.core.version>5.2.3</http.core.version>-->
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Apache HTTP Components (CLIENT) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- JDK8/11 -->
				<!--<http.client.groupId>org.apache.httpcomponents</http.client.groupId>
				<http.client.artifactId>httpclient</http.client.artifactId>
				<http.client.version>4.5.2</http.client.version>-->
		
				<!-- JDK17+ -->
				<http.client.groupId>org.apache.httpcomponents.client5</http.client.groupId>
				<http.client.artifactId>httpclient5</http.client.artifactId>
				<!-- 5.0.x -->
				<!--<http.client.version>5.0.4</http.client.version>-->
				<!-- 5.1.x -->
				<!--<http.client.version>5.1.5</http.client.version>-->
				<!-- 5.2.x -->
				<http.client.version>5.2.1</http.client.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 Nimbus - Spring Security JWT Authentication
					 	Version			JDK
					 	9.15.x-			8+
					 	9.20.x+			11+
			 	-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 3.8.x -->
				<!--<com.nimbusds.jose.jwt.version>3.8</com.nimbusds.jose.jwt.version>-->
				<!--<com.nimbusds.jose.jwt.version>3.8.2</com.nimbusds.jose.jwt.version>-->
				<!-- 7.9.x -->
				<!--<com.nimbusds.jose.jwt.version>7.9</com.nimbusds.jose.jwt.version>-->
				<!-- 9.15.x (JDK8+) -->
				<!--<com.nimbusds.jose.jwt.version>9.15.2</com.nimbusds.jose.jwt.version>-->
				<!-- 9.31.x (JDK11+) -->
				<!--<com.nimbusds.jose.jwt.version>9.31</com.nimbusds.jose.jwt.version>-->
				<!-- 9.37.x (JDK11+) -->
				<com.nimbusds.jose.jwt.version>9.37</com.nimbusds.jose.jwt.version>
				<!--<com.nimbusds.jose.jwt.version>9.37.1</com.nimbusds.jose.jwt.version>-->
				
				<!--
				Servlet Spec	JSP Spec	EL Spec		WebSocket Spec		Authentication (JASPIC) Spec	Apache Tomcat Version	Latest Released Version		Supported Java Versions
				6.1				4.0			6.0			TBD					TBD								11.0.x					11.0.0-M13 (alpha)			21+
				6.0				3.1			5.0			2.1					3.0								10.1.x					10.1.16						11+
				5.0				3.0			4.0			2.0					2.0								10.0.x (superseded)		10.0.27 (superseded)		8+
				4.0				2.3			3.0			1.1					1.1								9.0.x					9.0.82						8+
				3.1				2.3			3.0			1.1					1.1								8.5.x					8.5.96						7+
				3.1				2.3			3.0			1.1					N/A								8.0.x (superseded)		8.0.53 (superseded)			7+
				3.0				2.2			2.2			1.1					N/A								7.0.x (archived)		7.0.109 (archived)			6+ (7+ for WebSocket)
				2.5				2.1			2.1			N/A					N/A								6.0.x (archived)		6.0.53 (archived)			5+
				2.4				2.0			N/A			N/A					N/A								5.5.x (archived)		5.5.36 (archived)			1.4+
				2.3				1.2			N/A			N/A					N/A								4.1.x (archived)		4.1.40 (archived)			1.3+
				2.2				1.1			N/A			N/A					N/A								3.3.x (archived)		3.3.2 (archived)			1.1+
				-->
				<!-- Spring websocket depencencies -->
				<!-- Tomcat 7.0.x (JDK6/7+ - 7 and later for WebSocket) -->
				<!-- <org.apache.tomcat.version>7.0.52</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>7.0.109</org.apache.tomcat.version> -->
				<!-- Tomcat 8.0.x (JDK7+) -->
				<!-- <org.apache.tomcat.version>8.0.41</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>8.0.53</org.apache.tomcat.version> -->
				<!-- Tomcat 8.5.x (JDK7+) -->
				<!-- <org.apache.tomcat.version>8.5.11</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>8.5.95</org.apache.tomcat.version> -->
				<!-- Tomcat 9.0.x (JDK8+) -->
				<!-- <org.apache.tomcat.version>9.0.0.M17</org.apache.tomcat.version> -->
				<!-- <org.apache.tomcat.version>9.0.82</org.apache.tomcat.version> -->
				<!-- Tomcat 10.0.x (JDK8+) -->
				<!-- <org.apache.tomcat.version>10.0.27</org.apache.tomcat.version> -->
				<!-- Tomcat 10.1.x (JDK11+) -->
				<org.apache.tomcat.version>10.1.15</org.apache.tomcat.version>
				<!-- Tomcat 11.0.x (JDK21+) -->
				<!-- <org.apache.tomcat.version>11.0.0-M13</org.apache.tomcat.version> -->
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- DATABASE -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- SQL Server -->
				<sqlserver.groupId>com.microsoft.sqlserver</sqlserver.groupId>
				<sqlserver.artifactId>mssql-jdbc</sqlserver.artifactId>
				<sqlserver.version>11.2.3.jre17</sqlserver.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- SLF4J -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.7.x -->
				<!--<org.slf4j.version>1.7.12</org.slf4j.version>-->
				<!--<org.slf4j.version>1.7.36</org.slf4j.version>-->
				<!-- 2.0.x -->
				<org.slf4j.version>2.0.9</org.slf4j.version>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 LOGBACK
					 https://logback.qos.ch/dependencies.html
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- 1.1.x (JDK8) -->
				<!--<logback.version>1.1.7</logback.version>-->
				<!-- 1.2.x (JDK8) -->
				<!--<logback.version>1.2.11</logback.version>-->
				<!--<logback.version>1.2.12</logback.version>-->
				<!-- 1.3.x (JDK8) -->
				<!--<logback.version>1.3.11</logback.version>-->
				<!-- 1.4.x (JDK11) -->
				<logback.version>1.4.11</logback.version>
			</properties>
			<build>
				<!-- Plugins -->
				<pluginManagement>
					<plugins>
						<!-- Groovy for supporting root directory -->
						<plugin>
							<groupId>org.codehaus.gmaven</groupId>
							<artifactId>groovy-maven-plugin</artifactId>
							<dependencies>
								<!-- For fixing `illegal-access=warn` from JDK11+ -->
								<dependency>
								    <groupId>org.apache.groovy</groupId>
								    <artifactId>groovy-all</artifactId>
								    <version>4.0.15</version>
								    <type>pom</type>
								</dependency>
							</dependencies>
						</plugin>

						<!-- Eclipse -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-eclipse-plugin</artifactId>
							<version>${maven.eclipse.version}</version>
							<configuration>
								<skip>${eclipse.setup.skip}</skip>
								<useProjectReferences>${maven.eclipse.use.project.references}</useProjectReferences>
								<jeeversion>6.0</jeeversion>
								<downloadSources>true</downloadSources>
								<downloadJavadocs>true</downloadJavadocs>
								<classpathContainers>
									<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
									<classpathContainer>org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
									<!--<classpathContainer>org.eclipse.jst.j2ee.internal.module.container</classpathContainer>-->
								</classpathContainers>
								<additionalProjectFacets>
									<jst.java>${java.version}</jst.java>
									<jst.utility>${project.facet.java.utility.version}</jst.utility>
								</additionalProjectFacets>
								<additionalBuildcommands>
									<buildCommand>
										<name>org.eclipse.jdt.core.javabuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.wst.common.project.facet.core.builder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.m2e.core.maven2Builder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.wst.validation.validationbuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
								</additionalBuildcommands>
								<additionalProjectnatures>
									<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
									<projectnature>org.eclipse.jdt.core.javanature</projectnature>
									<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
									<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
								</additionalProjectnatures>
								<additionalConfig>
									<file>
										<name>.settings/org.eclipse.m2e.core.prefs</name>
										<content>
<![CDATA[activeProfiles=${eclipse.maven.project.activated.profiles}
eclipse.perferences.version=1
resolveWorkspaceProjects=true
version=1]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.jdt.core.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
encoding/${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding/${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding/${maven.dependency.unpack.root.directory}=${project.build.sourceEncoding}
encoding/src/main/java=${project.build.sourceEncoding}
encoding/src/main/resources=${project.build.sourceEncoding}
encoding/src/test/java=${project.build.sourceEncoding}
encoding/src/test/resources=${project.build.sourceEncoding}
encoding/target/generated-test-sources/test-annotations=${project.build.sourceEncoding}
org.eclipse.jdt.core.compiler.codegen.targetPlatform=${java.version}
org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory=${org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory}
org.eclipse.jdt.core.compiler.compliance=${java.version}
org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled
org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore
org.eclipse.jdt.core.compiler.processAnnotations=${org.eclipse.jdt.core.compiler.processAnnotations}
org.eclipse.jdt.core.compiler.release=${org.eclipse.jdt.core.compiler.release}
org.eclipse.jdt.core.compiler.source=${java.version}]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.jdt.apt.core.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=${m2e.apt.aptEnabled}
org.eclipse.jdt.apt.genSrcDir=${org.projectlombok.generated.source}
org.eclipse.jdt.apt.genTestSrcDir=${org.projectlombok.generated.test-source}
org.eclipse.jdt.apt.processorOptions/sql.validation=true
org.eclipse.jdt.apt.reconcileEnabled=true]]>
										</content>
									</file>
									<file>
										<name>.settings/org.hibernate.eclipse.console.prefs</name>
										<content>
<![CDATA[default.configuration=${project.artifactId}
eclipse.preferences.version=1
hibernate3.enabled=true]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.wst.common.project.facet.core.xml</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<faceted-project>
	<fixed facet="jst.java"/>
	<fixed facet="jst.utility"/>
	<installed facet="jst.java" version="${java.version}"/>
	<installed facet="jst.utility" version="${project.facet.java.utility.version}"/>
</faceted-project>]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.core.resources.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
encoding//src/main/java=${project.build.sourceEncoding}
encoding//src/main/resources=${project.build.sourceEncoding}
encoding//src/test/java=${project.build.sourceEncoding}
encoding//src/test/resources=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.source.directory}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.resource.directory}=${project.build.sourceEncoding}
encoding/<project>=${project.build.sourceEncoding}]]>
										</content>
									</file>
									<file>
										<name>.factorypath</name>
										<content>
<![CDATA[<factorypath>
	<factorypathentry kind="PLUGIN" id="org.eclipse.jst.ws.annotations.core" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/projectlombok/lombok/${org.projectlombok.version}/lombok-${org.projectlombok.version}.jar" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/seasar/doma/doma/${doma.version}/doma-${doma.version}.jar" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/jakarta/annotation/jakarta.annotation-api/${jakarta.annotation.version}/jakarta.annotation-api-${jakarta.annotation.version}.jar" enabled="true" runInBatchMode="false"/>
</factorypath>]]>
										</content>
									</file>
									<file>
										<name>.project</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<projectDescription>
	<name>${project.artifactId}-${project.version}</name>
	<comment>${project.description}</comment>
	<projects/>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.project.facet.core.builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.m2e.core.maven2Builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.m2e.core.maven2Nature</nature>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
	</natures>
</projectDescription>]]>
										</content>
									</file>
									<!-- deployment assembly component -->
									<file>
										<name>.settings/org.eclipse.wst.common.component</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
	<project-modules id="moduleCoreId" project-version="1.5.0">
    <wb-module deploy-name="${project.artifactId}-${project.version}">
        <wb-resource deploy-path="/" source-path="/src/test/java"/>
        <wb-resource deploy-path="/" source-path="/src/test/resources"/>
        <wb-resource deploy-path="/" source-path="/src/main/java"/>
        <wb-resource deploy-path="/" source-path="/src/main/resources"/>
        <wb-resource deploy-path="/" source-path="/${org.projectlombok.generated.source}"/>
        <wb-resource deploy-path="/" source-path="/${org.projectlombok.generated.test-source}"/>
        <wb-resource deploy-path="/" source-path="/${maven.dependency.unpack.source.directory}"/>
        <wb-resource deploy-path="/" source-path="/${maven.dependency.unpack.resource.directory}"/>
    </wb-module>
</project-modules>]]>
										</content>
									</file>
								</additionalConfig>
							</configuration>
						</plugin>

						<!-- Compiler -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<configuration>
								<compilerArgs>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
						            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
						        </compilerArgs>
								<annotationProcessorPaths>
									<path>
										<groupId>org.projectlombok</groupId>
										<artifactId>lombok</artifactId>
										<version>${org.projectlombok.version}</version>
									</path>
									<path>
										<groupId>org.seasar.doma</groupId>
										<artifactId>doma</artifactId>
										<version>${doma.version}</version>
									</path>
									<!-- for JDK17+ -->
									<path>
										<groupId>jakarta.annotation</groupId>
									    <artifactId>jakarta.annotation-api</artifactId>
									    <version>${jakarta.annotation.version}</version>
									</path>
								</annotationProcessorPaths>
								<!-- for JDK17+ -->
								<jdkToolchain>
									<version>${java.version}</version>
								</jdkToolchain>
							</configuration>
						</plugin>

			            <!-- Proguard -->
			            <plugin>
							<groupId>${maven.proguard.groupId}</groupId>
							<artifactId>${maven.proguard.artifactId}</artifactId>
							<configuration>
								<!-- internal proguard -->
								<proguardVersion>${maven.proguard-base.version}</proguardVersion>

								<!--
								List external jars your application depends on
								(that not listed in maven dependencies).
								You probably depend on Java runtime (rt.jar).
								JCE stands for Java Cryptography Extension.
								You probably don't need it, but my application does.
								-->
								<libs> <!-- JDK11+ -->
									<lib>${java.home}/lib/jrt-fs.jar</lib>
				                    <lib>${java.home}/jmods/jdk.compiler.jmod</lib>
									<lib>${java.home}/jmods/jdk.crypto.cryptoki.jmod</lib>
									<lib>${java.home}/jmods/jdk.crypto.ec.jmod</lib>
									<lib>${java.home}/jmods/jdk.crypto.mscapi.jmod</lib>
									<lib>${java.home}/jmods/jdk.charsets.jmod</lib>
									<lib>${java.home}/jmods/jdk.dynalink.jmod</lib>
									<lib>${java.home}/jmods/jdk.editpad.jmod</lib>
									<lib>${java.home}/jmods/jdk.hotspot.agent.jmod</lib>
									<lib>${java.home}/jmods/jdk.httpserver.jmod</lib>
									<lib>${java.home}/jmods/jdk.incubator.foreign.jmod</lib>
									<lib>${java.home}/jmods/jdk.incubator.vector.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.ed.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.jvmstat.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.le.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.opt.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.vm.ci.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.vm.compiler.jmod</lib>
									<lib>${java.home}/jmods/jdk.internal.vm.compiler.management.jmod</lib>
									<lib>${java.home}/jmods/jdk.jartool.jmod</lib>
									<lib>${java.home}/jmods/jdk.javadoc.jmod</lib>
									<lib>${java.home}/jmods/jdk.jcmd.jmod</lib>
									<lib>${java.home}/jmods/jdk.jconsole.jmod</lib>
									<lib>${java.home}/jmods/jdk.jdeps.jmod</lib>
									<lib>${java.home}/jmods/jdk.jdi.jmod</lib>
									<lib>${java.home}/jmods/jdk.jdwp.agent.jmod</lib>
									<lib>${java.home}/jmods/jdk.jfr.jmod</lib>
									<lib>${java.home}/jmods/jdk.jlink.jmod</lib>
									<lib>${java.home}/jmods/jdk.jpackage.jmod</lib>
									<lib>${java.home}/jmods/jdk.jshell.jmod</lib>
									<lib>${java.home}/jmods/jdk.jsobject.jmod</lib>
									<lib>${java.home}/jmods/jdk.jstatd.jmod</lib>
									<lib>${java.home}/jmods/jdk.localedata.jmod</lib>
									<lib>${java.home}/jmods/jdk.management.agent.jmod</lib>
									<lib>${java.home}/jmods/jdk.management.jfr.jmod</lib>
									<lib>${java.home}/jmods/jdk.management.jmod</lib>
									<lib>${java.home}/jmods/jdk.naming.dns.jmod</lib>
									<lib>${java.home}/jmods/jdk.naming.rmi.jmod</lib>
									<lib>${java.home}/jmods/jdk.net.jmod</lib>
									<lib>${java.home}/jmods/jdk.nio.mapmode.jmod</lib>
									<lib>${java.home}/jmods/jdk.random.jmod</lib>
									<lib>${java.home}/jmods/jdk.sctp.jmod</lib>
									<lib>${java.home}/jmods/jdk.security.auth.jmod</lib>
									<lib>${java.home}/jmods/jdk.security.jgss.jmod</lib>
									<lib>${java.home}/jmods/jdk.unsupported.desktop.jmod</lib>
									<lib>${java.home}/jmods/jdk.unsupported.jmod</lib>
									<lib>${java.home}/jmods/jdk.xml.dom.jmod</lib>
									<lib>${java.home}/jmods/jdk.zipfs.jmod</lib>
									<lib>${java.home}/jmods/java.base.jmod</lib>
									<lib>${java.home}/jmods/java.compiler.jmod</lib>
									<lib>${java.home}/jmods/java.datatransfer.jmod</lib>
									<lib>${java.home}/jmods/java.desktop.jmod</lib>
									<lib>${java.home}/jmods/java.instrument.jmod</lib>
									<lib>${java.home}/jmods/java.logging.jmod</lib>
									<lib>${java.home}/jmods/java.management.jmod</lib>
									<lib>${java.home}/jmods/java.management.rmi.jmod</lib>
									<lib>${java.home}/jmods/java.naming.jmod</lib>
									<lib>${java.home}/jmods/java.net.http.jmod</lib>
									<lib>${java.home}/jmods/java.prefs.jmod</lib>
									<lib>${java.home}/jmods/java.rmi.jmod</lib>
									<lib>${java.home}/jmods/java.scripting.jmod</lib>
									<lib>${java.home}/jmods/java.se.jmod</lib>
									<lib>${java.home}/jmods/java.security.jgss.jmod</lib>
									<lib>${java.home}/jmods/java.security.sasl.jmod</lib>
									<lib>${java.home}/jmods/java.smartcardio.jmod</lib>
									<lib>${java.home}/jmods/java.sql.jmod</lib>
									<lib>${java.home}/jmods/java.sql.rowset.jmod</lib>
									<lib>${java.home}/jmods/java.transaction.xa.jmod</lib>
									<lib>${java.home}/jmods/java.xml.crypto.jmod</lib>
									<lib>${java.home}/jmods/java.xml.jmod</lib>
									<lib>${java.home}/jmods/jdk.accessibility.jmod</lib>
									<lib>${java.home}/jmods/jdk.attach.jmod</lib>
								</libs>
							</configuration>
							<dependencies>
								<!--
								For:
								<groupId>com.github.wvengen</groupId>
								<artifactId>proguard-maven-plugin</artifactId>
								<name>proguard-maven-plugin</name>
								<version>2.6.0</version>
								-->
								<dependency>
									<groupId>com.guardsquare</groupId>
									<artifactId>proguard-base</artifactId>
									<version>${maven.proguard-base.version}</version>
								</dependency>
								<dependency>
									<groupId>com.guardsquare</groupId>
									<artifactId>proguard-core</artifactId>
									<version>${maven.proguard-core.version}</version>
								</dependency>

								<!--
								For:
								<groupId>com.github.dingxin</groupId>
								<artifactId>proguard-maven-plugin</artifactId>
								<name>Maven Plugin for ProGuard</name>
								<version>1.0.3</version>
								-->
								<!--<dependency>
									<groupId>net.sf.proguard</groupId>
									<artifactId>proguard-base</artifactId>
									<version>${maven.proguard-base.version}</version>
								</dependency>-->
							</dependencies>
						</plugin>
						
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- jdeps plugin for supporting module-info -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- toolchains -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${maven.toolchains.version}</version>
							<configuration>
								<toolchains>
									<jdk>
										<version>${java.version}</version>
									</jdk>
								</toolchains>
							</configuration>
							<executions>
								<execution>
							    	<goals>
										<goal>toolchain</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<!-- support for exporting JAVA_HOME path to `javaHome` maven property -->
						<plugin>
							<groupId>com.diamondq.maven</groupId>
							<artifactId>javahome-resolver-maven-plugin</artifactId>
							<version>${maven.javahome.resolver.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>resolve</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
		    			<!--<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jdeps-plugin</artifactId>
							<version>${maven.jdeps.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>jdkinternals</goal>
									</goals>
								</execution>
							</executions>
		    			</plugin>
						<plugin>
						    <groupId>org.moditect</groupId>
						    <artifactId>moditect-maven-plugin</artifactId>
						    <version>1.0.0.Final</version>
						    <executions>
								<execution>
						            <id>generate-module-info</id>
						            <phase>generate-sources</phase>
						            <goals>
						                <goal>generate-module-info</goal>
						            </goals>
						            <configuration>
									    <modules>
									        <module>
									            <moduleInfo>
									                <name>${project.groupId}</name>
									                <exports>
														*;
													</exports>
									            </moduleInfo>
									        </module>
									    </modules>
									</configuration>
								</execution>
						    </executions>
						</plugin>-->
					</plugins>
				</pluginManagement>
				<plugins>
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- jdeps plugin for supporting module-info -->
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- toolchains -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
					</plugin>
					<!-- support for exporting JAVA_HOME path to `javaHome` maven property -->
					<plugin>
						<groupId>com.diamondq.maven</groupId>
						<artifactId>javahome-resolver-maven-plugin</artifactId>
					</plugin>
	    			<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
	    			</plugin>
					<plugin>
						<groupId>org.moditect</groupId>
					    <artifactId>moditect-maven-plugin</artifactId>
					</plugin>-->
				</plugins>
			</build>
			
			<!-- reporting pulugins -->
			<reporting>
				<plugins>
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- jdeps plugin for supporting module-info -->
					<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
					<!-- toolchains -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
					</plugin>
					<!-- support for exporting JAVA_HOME path to `javaHome` maven property -->
					<plugin>
						<groupId>com.diamondq.maven</groupId>
						<artifactId>javahome-resolver-maven-plugin</artifactId>
					</plugin>
	    			<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
	    			</plugin>
					<plugin>
						<groupId>org.moditect</groupId>
					    <artifactId>moditect-maven-plugin</artifactId>
					</plugin>-->
				</plugins>
			</reporting>

			<!-- Dependencies -->
			<dependencyManagement>
				<dependencies>
					<dependency>
					    <groupId>jakarta.annotation</groupId>
					    <artifactId>jakarta.annotation-api</artifactId>
					    <version>${jakarta.annotation.version}</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
				    <groupId>jakarta.annotation</groupId>
				    <artifactId>jakarta.annotation-api</artifactId>
				</dependency>
			</dependencies>

			<!-- Modules -->
			<modules>
				<!-- Base -->
				<module>modules/utilities-jdk17</module>
				<module>modules/core-jdk17</module>
			</modules>
		</profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Quality Check -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
        <profile>
            <id>qualityCheck</id>
            <properties>
				<maven.enforcer.skip>false</maven.enforcer.skip>
			</properties>
            <build>
                <plugins>
                	<!-- Check javadocs -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>test-javadocs</id>
                                <goals>
                                    <goal>test-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                	<!-- Check cycleclic -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>de.andrena.tools.nopackagecycles</groupId>
                                <artifactId>no-package-cycles-enforcer-rule</artifactId>
                                <version>1.0.9</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>enforce-maven</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
									<skip>${maven.enforcer.skip}</skip>
									<fail>true</fail>
									<failFast>true</failFast>
									<ignoreCache>true</ignoreCache>
                                    <rules>
                                        <requireMavenVersion>
                                            <version>3.1</version>
                                        </requireMavenVersion>
                                    </rules>
                                </configuration>
                            </execution>
                            <execution>
                                <id>enforce-no-package-cycles</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
									<skip>${maven.enforcer.skip}</skip>
									<fail>true</fail>
									<failFast>true</failFast>
									<ignoreCache>true</ignoreCache>
                                    <rules>
                                        <NoPackageCyclesRule implementation="de.andrena.tools.nopackagecycles.NoPackageCyclesRule">
                                            <includeTests>false</includeTests>
                                            <excludedPackages>
                                                <excludedPackage>org.dom4j</excludedPackage>
                                                <excludedPackage>${project.groupId}</excludedPackage>
                                            </excludedPackages>
                                        </NoPackageCyclesRule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- To deploy to GITHUB repository -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>github-packages-repository</id>
			<properties>
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					NLH4J GITHUB Repository SITE plugin:
					https://github.com/github/maven-plugins#readme
					https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
					+ For Site in repository of maven settings.xml:
						- URL: https://github.com/<username>/<repo-name>.git
					+ For Packages in repository of maven settings.xml:
						- URL: https://maven.pkg.github.com/<username>
					+ Maven Settings (settings.xml):
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						+ GITHUB Packages Respository
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						- Server for GITHUB Packages Repository:
							<server>
								<id>nlh4j_packages_github_repo</id>
								<username>hainguyen81</username>
								<password>{{PERSONAL ACCESS TOKEN}}</password>
								<configuration>
									<httpConfiguration>
										<all>
											<connectionTimeout>360000</connectionTimeout>
											<readTimeout>360000</readTimeout>
										</all>
									</httpConfiguration>
								</configuration>
							</server>
						- Profile for GITHUB Packages repository:
							<profile>
								<id>nlh4j.packages.github</id>
								<repositories>
									<repository>
										<id>nlh4j_packages_github_repo</id>
										<name>NLH4J Packages GitHub Repository</name>
										<url>https://maven.pkg.github.com/hainguyen81</url>
									</repository>
								</repositories>
								<pluginRepositories>
									<pluginRepository>
										<id>nlh4j_packages_github_repo</id>
										<name>NLH4J Packages GitHub Repository</name>
										<url>https://maven.pkg.github.com/hainguyen81</url>
										<layout>default</layout>
										<snapshots>
											<enabled>true</enabled>
										</snapshots>
										<releases>
											<updatePolicy>always</updatePolicy>
										</releases>
									</pluginRepository>
								</pluginRepositories>
						    </profile>
		
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						+ GITHUB SITE Respository
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						- Server for GITHUB SITE Repository:
							<server>
								<id>nlh4j_site_github_repo</id>
								<username>hainguyen81</username>
								<password>{{PERSONAL ACCESS TOKEN}}</password>
								<configuration>
									<httpConfiguration>
										<all>
											<connectionTimeout>360000</connectionTimeout>
											<readTimeout>360000</readTimeout>
										</all>
									</httpConfiguration>
								</configuration>
							</server>
						- Profile for GITHUB SITE repository:
							<profile>
								<id>nlh4j.site.github</id>
								<repositories>
									<repository>
										<id>nlh4j_site_github_repo</id>
										<name>NLH4J SITE GitHub Repository</name>
										<url>https://github.com/hainguyen81/nlh4j-repo.git</url>
										<snapshots>
											<enabled>true</enabled>
											<updatePolicy>always</updatePolicy>
										</snapshots>
									</repository>
								</repositories>
								<pluginRepositories>
									<pluginRepository>
										<id>nlh4j_site_github_repo</id>
										<name>NLH4J SITE GitHub Packages Repository</name>
										<url>https://github.com/hainguyen81/nlh4j-repo.git</url>
										<snapshots>
											<enabled>true</enabled>
										</snapshots>
										<releases>
											<updatePolicy>always</updatePolicy>
										</releases>
									</pluginRepository>
								</pluginRepositories>
						    </profile>
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: Server Configuration -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Server configuration from maven settings.xml -->
				<github.global.server>nlh4j_packages_github_repo</github.global.server>
				<!--<github.global.repo.name>nlh4j-repo</github.global.repo.name>
				<github.global.repo.owner>hainguyen81</github.global.repo.owner>-->
				<!-- site plugin -->
				<!--<maven.github.repo.deployment>${root.basedir}/.github-repo/${revision}</maven.github.repo.deployment>
				<maven.github.repo.branch>refs/heads/${revision}</maven.github.repo.branch>
				<maven.github.repo.path>nlh4j/${revision}</maven.github.repo.path>
				<maven.github.site.force>true</maven.github.site.force>
				<maven.github.site.merge>true</maven.github.site.merge>-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--<maven.github.site.version>0.12</maven.github.site.version>
				<maven.github.site.skip>true</maven.github.site.skip>-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: From 2019 (use github packages as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<maven.deploy.version>3.1.1</maven.deploy.version>
				<maven.deploy.skip>false</maven.deploy.skip>
			</properties>
			<!-- Repositories for deployment: GITHUB repository -->
			<distributionManagement>
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--<repository>
			        <id>nlh4j.github.repo</id>
			        <name>NLH4J GITHUB Site Repository</name>
			        <url>file://${maven.github.repo.deployment}</url>
			    </repository>-->
			    <!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: From 2019 (use github site as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			    <repository>
					<id>${github.global.server}</id>
					<name>NLH4J GitHub Repository</name>
					<url>https://maven.pkg.github.com/${github.global.repo.owner}/${github.global.repo.name}</url>
				</repository>
		
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- TODO Deprecated: Nexus Staging Repository -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			    <!--<snapshotRepository>
					<id>${maven.nexus.staging.serverId}</id>
					<url>${maven.nexus.staging.nexusUrl}</url>
				</snapshotRepository>-->
			</distributionManagement>
		</profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- To deploy to GITHUB site (using as repository) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>github-site-repository</id>
			<properties>
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					NLH4J GITHUB Repository SITE plugin:
					https://github.com/github/maven-plugins#readme
					https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
					+ For Site in repository of maven settings.xml:
						- URL: https://github.com/<username>/<repo-name>.git
					+ For Packages in repository of maven settings.xml:
						- URL: https://maven.pkg.github.com/<username>
					+ Maven Settings (settings.xml):
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						+ GITHUB Packages Respository
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						- Server for GITHUB Packages Repository:
							<server>
								<id>nlh4j_packages_github_repo</id>
								<username>hainguyen81</username>
								<password>{{PERSONAL ACCESS TOKEN}}</password>
								<configuration>
									<httpConfiguration>
										<all>
											<connectionTimeout>360000</connectionTimeout>
											<readTimeout>360000</readTimeout>
										</all>
									</httpConfiguration>
								</configuration>
							</server>
						- Profile for GITHUB Packages repository:
							<profile>
								<id>nlh4j.packages.github</id>
								<repositories>
									<repository>
										<id>nlh4j_packages_github_repo</id>
										<name>NLH4J Packages GitHub Repository</name>
										<url>https://maven.pkg.github.com/hainguyen81</url>
									</repository>
								</repositories>
								<pluginRepositories>
									<pluginRepository>
										<id>nlh4j_packages_github_repo</id>
										<name>NLH4J Packages GitHub Repository</name>
										<url>https://maven.pkg.github.com/hainguyen81</url>
										<layout>default</layout>
										<snapshots>
											<enabled>true</enabled>
										</snapshots>
										<releases>
											<updatePolicy>always</updatePolicy>
										</releases>
									</pluginRepository>
								</pluginRepositories>
						    </profile>
		
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						+ GITHUB SITE Respository
						+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
						- Server for GITHUB SITE Repository:
							<server>
								<id>nlh4j_site_github_repo</id>
								<username>hainguyen81</username>
								<password>{{PERSONAL ACCESS TOKEN}}</password>
								<configuration>
									<httpConfiguration>
										<all>
											<connectionTimeout>360000</connectionTimeout>
											<readTimeout>360000</readTimeout>
										</all>
									</httpConfiguration>
								</configuration>
							</server>
						- Profile for GITHUB SITE repository:
							<profile>
								<id>nlh4j.site.github</id>
								<repositories>
									<repository>
										<id>nlh4j_site_github_repo</id>
										<name>NLH4J SITE GitHub Repository</name>
										<url>https://github.com/hainguyen81/nlh4j-repo.git</url>
										<snapshots>
											<enabled>true</enabled>
											<updatePolicy>always</updatePolicy>
										</snapshots>
									</repository>
								</repositories>
								<pluginRepositories>
									<pluginRepository>
										<id>nlh4j_site_github_repo</id>
										<name>NLH4J SITE GitHub Packages Repository</name>
										<url>https://github.com/hainguyen81/nlh4j-repo.git</url>
										<snapshots>
											<enabled>true</enabled>
										</snapshots>
										<releases>
											<updatePolicy>always</updatePolicy>
										</releases>
									</pluginRepository>
								</pluginRepositories>
						    </profile>
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: Server Configuration -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Server configuration from maven settings.xml -->
				<github.global.server>nlh4j_site_github_repo</github.global.server>
				<!--<github.global.repo.name>nlh4j-repo</github.global.repo.name>
				<github.global.repo.owner>hainguyen81</github.global.repo.owner>-->
				<!-- site plugin -->
				<!--<maven.github.repo.deployment>${root.basedir}/.github-repo/${revision}</maven.github.repo.deployment>
				<maven.github.repo.branch>refs/heads/${revision}</maven.github.repo.branch>
				<maven.github.repo.path>nlh4j/${revision}</maven.github.repo.path>
				<maven.github.site.force>true</maven.github.site.force>
				<maven.github.site.merge>true</maven.github.site.merge>-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<maven.github.site.version>0.12</maven.github.site.version>
				<maven.github.site.skip>false</maven.github.site.skip>
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: From 2019 (use github packages as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<maven.deploy.version>3.1.1</maven.deploy.version>
				<maven.deploy.skip>false</maven.deploy.skip>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Deploy to NLH4J GITHUB Repository SITE (From 2019: use github packages as repository) -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<configuration>
								<!--
									 NLH4J GITHUB Repository: Before 2019 (use github site as repository)
									 Deploy to local repository before publishing to github site
								-->
								<altDeploymentRepository>nlh4j.github.local.repo::default::file://${maven.github.repo.deployment}</altDeploymentRepository>
							</configuration>
		    			</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<!-- Repositories for deployment: GITHUB repository -->
			<distributionManagement>
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<repository>
			        <id>nlh4j.github.local.repo</id>
			        <name>NLH4J GITHUB Site Local Repository</name>
			        <url>file://${maven.github.repo.deployment}</url>
			    </repository>
			    <!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- NLH4J GITHUB Repository: From 2019 (use github packages as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			    <!--<repository>
					<id>${github.global.server}</id>
					<name>NLH4J GitHub Repository</name>
					<url>https://maven.pkg.github.com/${github.global.repo.owner}/${github.global.repo.name}</url>
				</repository>-->
		
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- TODO Deprecated: Nexus Staging Repository -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			    <!--<snapshotRepository>
					<id>${maven.nexus.staging.serverId}</id>
					<url>${maven.nexus.staging.nexusUrl}</url>
				</snapshotRepository>-->
			</distributionManagement>
		</profile>
		
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Dynamic Web Module (configuration for dynamic web application) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>dynamicWebModule</id>
			<!-- only activating this profile on WAR project -->
			<activation>
				<file>
					<exists>${basedir}/src/main/webapp/WEB-INF/web.xml</exists>
				</file>
			</activation>
			<properties>
				<!-- Project settings -->
				<project.facet.jst.web.version>3.0</project.facet.jst.web.version>
				<project.facet.jst.jaxrs.version>1.1</project.facet.jst.jaxrs.version>

				<!-- Eclipse project setup -->
				<eclipse.setup.skip>false</eclipse.setup.skip>
				<!--
					FIXME Not using project reference due to
					Classpath entry xxxxxx will not be exported or published. Runtime ClassNotFoundExceptions may result.
				-->
				<maven.eclipse.use.project.references>false</maven.eclipse.use.project.references>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Eclipse -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-eclipse-plugin</artifactId>
							<version>${maven.eclipse.version}</version>
							<configuration>
								<skip>${eclipse.setup.skip}</skip>
								<useProjectReferences>${maven.eclipse.use.project.references}</useProjectReferences>
								<wtpContextName>ROOT</wtpContextName>
			                    <wtpversion>2.0</wtpversion>
								<jeeversion>6.0</jeeversion>
								<downloadSources>true</downloadSources>
								<downloadJavadocs>true</downloadJavadocs>
								<classpathContainers>
									<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
									<classpathContainer>org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
									<!--<classpathContainer>org.eclipse.jst.j2ee.internal.module.container</classpathContainer>
									<classpathContainer>org.eclipse.jst.j2ee.internal.web.container</classpathContainer>-->
								</classpathContainers>
								<additionalProjectFacets>
									<jst.java>${java.version}</jst.java>
									<!--<jst.utility>${project.facet.java.utility.version}</jst.utility>-->
                        			<jst.web>${project.facet.jst.web.version}</jst.web>
                        			<jst.jaxrs>${project.facet.jst.jaxrs.version}</jst.jaxrs>
								</additionalProjectFacets>
								<additionalBuildcommands>
			                        <buildCommand>
										<name>org.eclipse.jdt.core.javabuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.wst.common.project.facet.core.builder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.m2e.core.maven2Builder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.eclipse.wst.validation.validationbuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.jboss.tools.jst.web.kb.kbbuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
									<buildCommand>
										<name>org.jboss.tools.ws.jaxrs.metamodelBuilder</name>
										<arguments>
										</arguments>
									</buildCommand>
			                    </additionalBuildcommands>
								<additionalProjectnatures>
			                        <projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
									<projectnature>org.eclipse.jdt.core.javanature</projectnature>
									<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
									<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
									<projectnature>org.jboss.tools.jst.web.kb.kbnature</projectnature>
									<projectnature>org.jboss.tools.ws.jaxrs.nature</projectnature>
			                    </additionalProjectnatures>
								<additionalConfig>
									<file>
										<name>.settings/org.eclipse.m2e.core.prefs</name>
										<content>
<![CDATA[activeProfiles=${eclipse.maven.project.activated.profiles}
eclipse.perferences.version=1
resolveWorkspaceProjects=true
version=1]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.jdt.core.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
encoding/${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding/${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding/${maven.dependency.unpack.root.directory}=${project.build.sourceEncoding}
encoding/src/main/java=${project.build.sourceEncoding}
encoding/src/main/resources=${project.build.sourceEncoding}
encoding/src/test/java=${project.build.sourceEncoding}
encoding/src/test/resources=${project.build.sourceEncoding}
encoding/target/generated-test-sources/test-annotations=${project.build.sourceEncoding}
org.eclipse.jdt.core.compiler.codegen.targetPlatform=${java.version}
org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory=${org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory}
org.eclipse.jdt.core.compiler.compliance=${java.version}
org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled
org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore
org.eclipse.jdt.core.compiler.processAnnotations=${org.eclipse.jdt.core.compiler.processAnnotations}
org.eclipse.jdt.core.compiler.release=${org.eclipse.jdt.core.compiler.release}
org.eclipse.jdt.core.compiler.source=${java.version}]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.jdt.apt.core.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=${m2e.apt.aptEnabled}
org.eclipse.jdt.apt.genSrcDir=${org.projectlombok.generated.source}
org.eclipse.jdt.apt.genTestSrcDir=${org.projectlombok.generated.test-source}
org.eclipse.jdt.apt.processorOptions/sql.validation=true
org.eclipse.jdt.apt.reconcileEnabled=true]]>
										</content>
									</file>
									<file>
										<name>.settings/org.hibernate.eclipse.console.prefs</name>
										<content>
<![CDATA[default.configuration=${project.artifactId}
eclipse.preferences.version=1
hibernate3.enabled=true]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.wst.common.project.facet.core.xml</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<faceted-project>
	<fixed facet="jst.java"/>
	<fixed facet="jst.web"/>
	<fixed facet="jst.jaxrs"/>
	<installed facet="jst.java" version="${java.version}"/>
	<installed facet="jst.web" version="${project.facet.jst.web.version}"/>
	<installed facet="jst.jaxrs" version="${project.facet.jst.jaxrs.version}"/>
</faceted-project>]]>
										</content>
									</file>
									<file>
										<name>.settings/org.eclipse.core.resources.prefs</name>
										<content>
<![CDATA[eclipse.preferences.version=1
encoding//src/main/java=${project.build.sourceEncoding}
encoding//src/main/resources=${project.build.sourceEncoding}
encoding//src/test/java=${project.build.sourceEncoding}
encoding//src/test/resources=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.source.directory}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.resource.directory}=${project.build.sourceEncoding}
encoding/<project>=${project.build.sourceEncoding}]]>
										</content>
									</file>
									<file>
										<name>.factorypath</name>
										<content>
<![CDATA[<factorypath>
	<factorypathentry kind="PLUGIN" id="org.eclipse.jst.ws.annotations.core" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/projectlombok/lombok/${org.projectlombok.version}/lombok-${org.projectlombok.version}.jar" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/seasar/doma/doma/${doma.version}/doma-${doma.version}.jar" enabled="true" runInBatchMode="false"/>
</factorypath>]]>
										</content>
									</file>
									<file>
										<name>.project</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<projectDescription>
	<name>${project.artifactId}-${project.version}</name>
	<comment>${project.description}</comment>
	<projects/>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.project.facet.core.builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.m2e.core.maven2Builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.jboss.tools.jst.web.kb.kbbuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.jboss.tools.ws.jaxrs.metamodelBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.m2e.core.maven2Nature</nature>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
		<nature>org.jboss.tools.jst.web.kb.kbnature</nature>
		<nature>org.jboss.tools.ws.jaxrs.nature</nature>
	</natures>
</projectDescription>]]>
										</content>
									</file>
									<!-- dynamic web module component -->
									<file>
										<name>.settings/org.eclipse.wst.common.component</name>
										<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<project-modules id="moduleCoreId" project-version="1.5.0">
	<wb-module deploy-name="${project.artifactId}-${project.version}">
	    <wb-resource deploy-path="/" source-path="/src/main/webapp" tag="defaultRootSource"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/test/java"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/test/resources"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/java"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/resources"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/${org.projectlombok.generated.source}"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/${org.projectlombok.generated.test-source}"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/${maven.dependency.unpack.source.directory}"/>
	    <wb-resource deploy-path="/WEB-INF/classes" source-path="/${maven.dependency.unpack.resource.directory}"/>
	</wb-module>
</project-modules>]]>
										</content>
									</file>
								</additionalConfig>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Eclipse Project Setup -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<profile>
			<id>eclipseSetup</id>
			<properties>
				<!-- Project settings -->
				<project.facet.jst.web.version>3.0</project.facet.jst.web.version>
				<project.facet.jst.jaxrs.version>1.1</project.facet.jst.jaxrs.version>

				<!-- Eclipse project setup -->
				<eclipse.setup.skip>false</eclipse.setup.skip>
			</properties>
		</profile>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Support for issued dependencies -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!--
			 Unzip the classes/sources zipped of dependencies from `.docker` folder to project target/classes,
			 one of them is `com.googlecode:openbeans:1.0:jar`, or `com.artofsolving:jodconverter-core:3.0-alfresco-patched-20141024:jar`
		-->
		<profile>
			<id>issuedDep</id>
			<properties>
				<!-- Use project.basedir due to belonging to dependency of every module -->
				<zipped.dependencies.directory.path>${project.basedir}/.docker</zipped.dependencies.directory.path>
				<zipped.class.dependencies.directory.path>${zipped.dependencies.directory.path}/classes</zipped.class.dependencies.directory.path>
				<zipped.source.dependencies.directory.path>${zipped.dependencies.directory.path}/sources</zipped.source.dependencies.directory.path>
			</properties>
			<build>
				<plugins>
					<!--
						FIXME Due to `com.googlecode:openbeans:1.0:jar`, or `com.artofsolving:jodconverter-core:3.0-alfresco-patched-20141024:jar` zip(jar) END header not found issue on docker.
						Then extracting its classes/sources to target/classes as project classes for compiling and packaging.
						And it already was extracted in utilities package. So no need to import it as dependency anymore.
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<!--
								 Unzip all dependency classes to project target/extracted-class-dependencies,
								 one of them is `com.googlecode:openbeans:1.0:jar`,
								 or `com.artofsolving:jodconverter-core:3.0-alfresco-patched-20141024:jar`
							-->
							<execution>
								<id>unzip-class-dependencies</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="unzip-class-dependencies">
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>

										<if>
											<available file="${zipped.class.dependencies.directory.path}" type="dir"/>
											<then>
												<!-- extract all classes from class-dependencies -->
												<mkdir dir="${project.build.directory}/extracted-class-dependencies" />
												<unzip dest="${project.build.directory}/extracted-class-dependencies">
													<patternset>
														<exclude name="META-INF/MANIFEST.MF"/>
														<exclude name="META-INF/*"/>
														<exclude name="**/Test*.class"/>
													</patternset>
													<fileset dir="${zipped.class.dependencies.directory.path}">
														<include name="**/*.zip"/>
													</fileset>
												</unzip>

												<!-- create extracted-class-dependencies.jar for using in classpath -->
												<if>
													<length length="0" when="greater">
														<fileset dir="${project.build.directory}/extracted-class-dependencies" followsymlinks="false"/>
													</length>
													<then>
														<jar destfile="${project.build.directory}/extracted-class-dependencies/extracted-class-dependencies.jar">
															<fileset dir="${project.build.directory}/extracted-class-dependencies">
																<include name="**/**" />
															</fileset>
														</jar>
	                 								</then>
            									</if>
											</then>
										</if>
									</target>
								</configuration>
							</execution>

							<!--
								 Unzip all dependency sources to project target/extracted-class-dependencies,
								 one of them is `com.googlecode:openbeans:1.0:jar`,
								 or `com.artofsolving:jodconverter-core:3.0-alfresco-patched-20141024:jar`
							-->
							<execution>
								<id>unzip-source-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="unzip-source-dependencies">
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>

										<if>
											<available file="${zipped.class.dependencies.directory.path}" type="dir"/>
											<then>
												<!-- extract all sources from source-dependencies -->
												<mkdir dir="${project.build.directory}/extracted-source-dependencies" />
												<unzip dest="${project.build.directory}/extracted-source-dependencies">
													<patternset>
														<exclude name="META-INF/MANIFEST.MF"/>
														<exclude name="META-INF/*"/>
														<exclude name="**/Test*.java"/>
													</patternset>
													<fileset dir="${zipped.source.dependencies.directory.path}">
														<include name="**/*.zip"/>
													</fileset>
												</unzip>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Attach more extracted sources folder -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<!-- add extracted sources folder -->
							<execution>
								<id>add-extracted-source-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${project.build.directory}/extracted-source-dependencies</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}.${project.artifactId}</groupId>
					<artifactId>extracted-issued-dependencies</artifactId>
					<version>${project.version}</version>
					<scope>system</scope>
					<systemPath>${project.build.directory}/extracted-class-dependencies/extracted-class-dependencies.jar</systemPath>
					<!-- use optional due to it could be not existed -->
					<optional>true</optional>
				</dependency>
			</dependencies>
		</profile>
		
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Profiles -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- The configuration of the development profile -->
		<profile>
			<id>dev</id>
			<!-- The development profile is active by default -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than
					the name of the directory that contains the profile specific configuration
					file. Because the name of the directory that contains the configuration file
					of the development profile is dev, we must set the value of the build.profile.id
					property to dev. -->
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
		<!-- The configuration of the production profile -->
		<profile>
			<id>prod</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than
					the name of the directory that contains the profile specific configuration
					file. Because the name of the directory that contains the configuration file
					of the production profile is prod, we must set the value of the build.profile.id
					property to prod. -->
				<build.profile.id>prod</build.profile.id>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- [for PRODUCTION relase] -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Progurad configuration -->
				<proguard.skip>false</proguard.skip>

				<!-- JAR Signer -->
				<jarsigner.skip>false</jarsigner.skip>
			</properties>
		</profile>
		<!-- The configuration of the testing profile -->
		<profile>
			<id>test</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than
					the name of the directory that contains the profile specific configuration
					file. Because the name of the directory that contains the configuration file
					of the testing profile is test, we must set the value of the build.profile.id
					property to test. -->
				<build.profile.id>test</build.profile.id>
			</properties>
		</profile>
	</profiles>

	<!-- Properties -->
	<properties>
		<!-- Package properties -->
		<root.basedir>${maven.multiModuleProjectDirectory}</root.basedir> <!-- require maven 3.3.1 or greater  -->
		<!-- <root.basedir>E:/Java.Working/20.eclispe.2023-09/nlh4j</root.basedir>
		<maven.multiModuleProjectDirectory>${root.basedir}</maven.multiModuleProjectDirectory> -->
		<root.artifactId>nlh4j</root.artifactId>
		<module.groupId>org.nlh4j</module.groupId>

		<!-- Maven build timestamp -->
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

		<!-- Project settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<project.facet.java.utility.version>1.0</project.facet.java.utility.version>
		
		<!-- Certificate -->
		<certificate.basedir.name>.certificate</certificate.basedir.name>
		<certificate.basedir>${root.basedir}/${certificate.basedir.name}</certificate.basedir>
		<certificate.proguard.configuration>${certificate.basedir}/proguard.cnf</certificate.proguard.configuration>
		
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- [for PRODUCTION relase] -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Progurad configuration -->
		<proguard.skip>true</proguard.skip>

		<!-- JAR Signer -->
		<jarsigner.skip>true</jarsigner.skip>
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->

		<!-- Profile properties file -->
		<build.profile.id>dev</build.profile.id> <!-- default profile -->
		<profile.configuration>config.properties</profile.configuration>
		<profile.configuration.path>.profiles/${build.profile.id}</profile.configuration.path>
		<root.profile.configuration>${root.basedir}/${profile.configuration.path}/${profile.configuration}</root.profile.configuration>
		<module.profile.configuration.path>${project.build.directory}/${profile.configuration.path}</module.profile.configuration.path>
		<module.profile.configuration>${module.profile.configuration.path}/${profile.configuration}</module.profile.configuration>

		<!-- automatically run annotation processors within the incremental compilation -->
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<m2e.apt.aptEnabled>true</m2e.apt.aptEnabled>
		<org.eclipse.jdt.core.compiler.processAnnotations>enabled</org.eclipse.jdt.core.compiler.processAnnotations>
		<org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory>disabled</org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory>
		<org.eclipse.jdt.core.compiler.release>disabled</org.eclipse.jdt.core.compiler.release>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Maven Plugins -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<maven.m2e.lifecycle.mapping.version>1.0.0</maven.m2e.lifecycle.mapping.version>
		<maven.findbugs.version>3.0.5</maven.findbugs.version>
		<maven.findbugs.skip>true</maven.findbugs.skip>
		<maven.findbugs.output.xml>${root.basedir}/fb.report-${revision}.xml</maven.findbugs.output.xml>
		<maven.groovy.version>2.1.1</maven.groovy.version>
		<maven.enforcer.version>3.4.1</maven.enforcer.version>
		<maven.enforcer.skip>true</maven.enforcer.skip>
		<maven.versions.version>2.16.1</maven.versions.version>
		<maven.properties.version>1.2.1</maven.properties.version>
		<maven.release.version>3.0.1</maven.release.version>
		<maven.build.helper.version>3.4.0</maven.build.helper.version>
		<maven.resources.version>3.3.1</maven.resources.version>
		<maven.compiler.version>3.11.0</maven.compiler.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
    	<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.source.version>3.3.0</maven.source.version>
		<maven.javadoc.version>3.6.2</maven.javadoc.version>
		<maven.jar.version>3.3.0</maven.jar.version>
		<maven.war.version>3.4.0</maven.war.version>
		<maven.jarsigner.version>3.0.0</maven.jarsigner.version>
		<maven.surefire.version>3.2.2</maven.surefire.version>
		<maven.directory.version>0.1</maven.directory.version>
		<maven.antrun.version>3.1.0</maven.antrun.version>
		<maven.yuicompressor.version>1.5.1</maven.yuicompressor.version>
		<maven.yuicompressor.skip>false</maven.yuicompressor.skip>

		<!-- Maven Assembly for building license tool -->
		<maven.assembly.version>3.6.0</maven.assembly.version>
		<maven.assembly.skip>true</maven.assembly.skip>
		<license.tool.directory>.license</license.tool.directory>
		<license.tool.directory.path>${root.basedir}/${license.tool.directory}</license.tool.directory.path>
		<license.tool.name>LicenseTool</license.tool.name>
		<license.tool.main.class>org.nlh4j.license.LicenseTool</license.tool.main.class>
		<license.tool.descriptor.ref>jar-with-dependencies</license.tool.descriptor.ref>

		<!-- Eclipse project setup -->
		<maven.eclipse.version>2.10</maven.eclipse.version>
		<maven.eclipse.use.project.references>true</maven.eclipse.use.project.references>
		<eclipse.setup.skip>true</eclipse.setup.skip>
		<eclipse.template.directory>.eclipse</eclipse.template.directory>
		<eclipse.template.directory.path>${root.basedir}/${eclipse.template.directory}</eclipse.template.directory.path>
		<eclipse.template.packaging.directory.path>${eclipse.template.directory.path}/${project.packaging}</eclipse.template.packaging.directory.path>
		<project.eclipse.template.directory.path>${project.basedir}/${eclipse.template.directory}</project.eclipse.template.directory.path>
		
		<!-- Maven Dependency Plugin for customizing -->
		<maven.dependency.version>3.6.1</maven.dependency.version>
		<maven.dependency.copy.directory>${root.basedir}/.dependencies/${revision}/${project.artifactId}</maven.dependency.copy.directory>
		<maven.dependency.copy.skip>true</maven.dependency.copy.skip>
		<maven.dependency.unpack.root.directory>.mpt_generated</maven.dependency.unpack.root.directory>
		<maven.dependency.unpack.source.directory>${maven.dependency.unpack.root.directory}/src/main/java</maven.dependency.unpack.source.directory>
		<maven.dependency.unpack.resource.directory>${maven.dependency.unpack.root.directory}/src/main/resources</maven.dependency.unpack.resource.directory>
		<maven.dependency.unpack.root.directory.path>${project.basedir}/${maven.dependency.unpack.root.directory}</maven.dependency.unpack.root.directory.path>
		<maven.dependency.unpack.source.directory.path>${project.basedir}/${maven.dependency.unpack.source.directory}</maven.dependency.unpack.source.directory.path>
		<maven.dependency.unpack.resource.directory.path>${project.basedir}/${maven.dependency.unpack.resource.directory}</maven.dependency.unpack.resource.directory.path>
		<!--<maven.dependency.unpack.include.groupIds>${project.groupId}</maven.dependency.unpack.include.groupIds>
		<maven.dependency.unpack.include.artifactIds>${project.artifactId}</maven.dependency.unpack.include.artifactIds>-->
        <maven.dependency.unpack.groupId>${project.groupId}</maven.dependency.unpack.groupId>
        <maven.dependency.unpack.artifactId>${project.artifactId}</maven.dependency.unpack.artifactId>
		<maven.dependency.unpack.version></maven.dependency.unpack.version>
		<maven.dependency.unpack.source.includes>org/nlh4j/*.java,org/nlh4j/**/*.java</maven.dependency.unpack.source.includes>
		<maven.dependency.unpack.resource.excludes>org/nlh4j/*.java,org/nlh4j/**/*.java,META-INF/MANIFEST.MF,META-INF/*.RSA,META-INF/*.SF,META-INF/maven,META-INF/maven/*</maven.dependency.unpack.resource.excludes>
		<maven.dependency.unpack.skip>true</maven.dependency.unpack.skip>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!--
			NLH4J GITHUB Repository SITE plugin:
			https://github.com/github/maven-plugins#readme
			https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
			+ For Site in repository of maven settings.xml:
				- URL: https://github.com/<username>/<repo-name>.git
			+ For Packages in repository of maven settings.xml:
				- URL: https://maven.pkg.github.com/<username>
			+ Maven Settings (settings.xml):
				+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
				+ GITHUB Packages Respository
				+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
				- Server for GITHUB Packages Repository:
					<server>
						<id>nlh4j_packages_github_repo</id>
						<username>hainguyen81</username>
						<password>{{PERSONAL ACCESS TOKEN}}</password>
						<configuration>
							<httpConfiguration>
								<all>
									<connectionTimeout>360000</connectionTimeout>
									<readTimeout>360000</readTimeout>
								</all>
							</httpConfiguration>
						</configuration>
					</server>
				- Profile for GITHUB Packages repository:
					<profile>
						<id>nlh4j.packages.github</id>
						<repositories>
							<repository>
								<id>nlh4j_packages_github_repo</id>
								<name>NLH4J Packages GitHub Repository</name>
								<url>https://maven.pkg.github.com/hainguyen81</url>
							</repository>
						</repositories>
						<pluginRepositories>
							<pluginRepository>
								<id>nlh4j_packages_github_repo</id>
								<name>NLH4J Packages GitHub Repository</name>
								<url>https://maven.pkg.github.com/hainguyen81</url>
								<layout>default</layout>
								<snapshots>
									<enabled>true</enabled>
								</snapshots>
								<releases>
									<updatePolicy>always</updatePolicy>
								</releases>
							</pluginRepository>
						</pluginRepositories>
				    </profile>

				+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
				+ GITHUB SITE Respository
				+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
				- Server for GITHUB SITE Repository:
					<server>
						<id>nlh4j_site_github_repo</id>
						<username>hainguyen81</username>
						<password>{{PERSONAL ACCESS TOKEN}}</password>
						<configuration>
							<httpConfiguration>
								<all>
									<connectionTimeout>360000</connectionTimeout>
									<readTimeout>360000</readTimeout>
								</all>
							</httpConfiguration>
						</configuration>
					</server>
				- Profile for GITHUB SITE repository:
					<profile>
						<id>nlh4j.site.github</id>
						<repositories>
							<repository>
								<id>nlh4j_site_github_repo</id>
								<name>NLH4J SITE GitHub Repository</name>
								<url>https://github.com/hainguyen81/nlh4j-repo.git</url>
								<snapshots>
									<enabled>true</enabled>
									<updatePolicy>always</updatePolicy>
								</snapshots>
							</repository>
						</repositories>
						<pluginRepositories>
							<pluginRepository>
								<id>nlh4j_site_github_repo</id>
								<name>NLH4J SITE GitHub Packages Repository</name>
								<url>https://github.com/hainguyen81/nlh4j-repo.git</url>
								<snapshots>
									<enabled>true</enabled>
								</snapshots>
								<releases>
									<updatePolicy>always</updatePolicy>
								</releases>
							</pluginRepository>
						</pluginRepositories>
				    </profile>
		-->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- NLH4J GITHUB Repository: Server Configuration -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Server configuration from maven settings.xml -->
		<github.global.server>nlh4j_github_repo</github.global.server>
		<github.global.repo.name>nlh4j-repo</github.global.repo.name>
		<github.global.repo.owner>hainguyen81</github.global.repo.owner>
		<!-- site plugin -->
		<maven.github.repo.deployment>${root.basedir}/.github-repo/${revision}</maven.github.repo.deployment>
		<maven.github.repo.branch>refs/heads/${revision}</maven.github.repo.branch>
		<maven.github.repo.path>nlh4j/${revision}</maven.github.repo.path>
		<maven.github.site.force>true</maven.github.site.force>
		<maven.github.site.merge>true</maven.github.site.merge>
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<maven.github.site.version>0.12</maven.github.site.version>
		<maven.github.site.skip>true</maven.github.site.skip>
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- NLH4J GITHUB Repository: From 2019 (use github packages as repository) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<maven.deploy.version>3.1.1</maven.deploy.version>
		<maven.deploy.skip>true</maven.deploy.skip>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- TODO Deprecated: Deploy using maven nexus staging plugin -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!--<maven.nexus.staging.version>1.6.13</maven.nexus.staging.version>
		<maven.nexus.staging.serverId>${maven.github.repo.settings.name}</maven.nexus.staging.serverId>
		<maven.nexus.staging.nexusUrl>https://github.com/hainguyen81/nlh4j-repo.git</maven.nexus.staging.nexusUrl>-->
		
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Lombok -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<maven.lombok.version>${org.projectlombok.version}.0</maven.lombok.version>
		<maven.lombok.skip>true</maven.lombok.skip>
		<org.projectlombok.delombok>.delombok</org.projectlombok.delombok>
		<org.projectlombok.delombok.directory>${project.basedir}/${org.projectlombok.delombok}</org.projectlombok.delombok.directory>
		<org.projectlombok.delombok.source>src</org.projectlombok.delombok.source>
		<org.projectlombok.delombok.test-source>test</org.projectlombok.delombok.test-source>
		<org.projectlombok.delombok.source.directory>${org.projectlombok.delombok.directory}/${org.projectlombok.delombok.source}</org.projectlombok.delombok.source.directory>
		<org.projectlombok.delombok.test-source.directory>${org.projectlombok.delombok.directory}/${org.projectlombok.delombok.test-source}</org.projectlombok.delombok.test-source.directory>
		<org.projectlombok.generated.source>.apt_generated</org.projectlombok.generated.source>
		<org.projectlombok.generated.test-source>.apt_generated_tests</org.projectlombok.generated.test-source>
		<org.projectlombok.generated.source.directory>${project.basedir}/${org.projectlombok.generated.source}</org.projectlombok.generated.source.directory>
		<org.projectlombok.generated.test-source.directory>${project.basedir}/${org.projectlombok.generated.test-source}</org.projectlombok.generated.test-source.directory>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Servlet -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- 3.1.x (javax - JDK8) -->
		<!--<servlet-api.groupId>javax.servlet</servlet-api.groupId>
		<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
		<servlet-api.version>3.1.0</servlet-api.version>-->
		<!-- 4.0.x (javax) -->
		<!--<servlet-api.groupId>javax.servlet</servlet-api.groupId>
		<servlet-api.artifactId>javax.servlet-api</servlet-api.artifactId>
		<servlet-api.version>4.0.1</servlet-api.version>-->
		<!-- 4.0.x (jakarta) -->
		<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
		<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
		<servlet-api.version>4.0.4</servlet-api.version>-->
		<!-- 5.0.x (jakarta) -->
		<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
		<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
		<servlet-api.version>5.0.0</servlet-api.version>-->
		<!-- 6.0.x -->
		<!--<servlet-api.groupId>jakarta.servlet</servlet-api.groupId>
		<servlet-api.artifactId>jakarta.servlet-api</servlet-api.artifactId>
		<servlet-api.version>6.0.0</servlet-api.version>-->

		<!-- TODO Deprepcated: Web API due to conflict other dependencies -->
		<!--<javaee-web-api.version>6.0</javaee-web-api.version>-->
		<!--<javaee-web-api.version>7.0</javaee-web-api.version>-->
		<!--<javaee-web-api.version>8.0</javaee-web-api.version>-->
		<!--<javaee-web-api.version>8.0.1</javaee-web-api.version>-->

		<!-- JSTL -->
		<!--<jstl.groupId>javax.servlet</jstl.groupId>
		<jstl.artifactId>jstl</jstl.artifactId>-->
		<!--<jstl.groupId>jakarta.servlet.jsp.jstl</jstl.groupId>
		<jstl.artifactId>jakarta.servlet.jsp.jstl-api</jstl.artifactId>-->
		<!--<jstl.version>1.2</jstl.version>-->
		<!--<jstl.version>1.2.7</jstl.version>-->
		<!--<jstl.version>2.0.0</jstl.version>-->
		<!--<jstl.version>3.0.0</jstl.version>-->
		
		<!-- tag-libs -->
		<!--<taglibs.groupId>taglibs</taglibs.groupId>
		<taglibs.artifactId>standard</taglibs.artifactId>
		<taglibs.version>1.1.2</taglibs.version>-->
		<taglibs.groupId>org.apache.taglibs</taglibs.groupId>
		<taglibs.artifactId>taglibs-standard-impl</taglibs.artifactId>
		<taglibs.version>1.2.5</taglibs.version>

		<!-- Persistence/Inject/JSP -->
		<javax.inject.version>1</javax.inject.version>
		<javax.persistence.version>2.2</javax.persistence.version>
		<javax.servlet.jsp-api.version>2.3.3</javax.servlet.jsp-api.version>
		<!--<javax.ws.rs.version>2.1.1</javax.ws.rs.version>-->
		
		<!-- Response Compression -->
		<!--<com.github.ziplet.version>2.0.0</com.github.ziplet.version>-->
		<com.github.ziplet.version>2.4.1</com.github.ziplet.version>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Springframework -->
		<!--
			 https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions
			 + Supported Versions
				6.2.x		is the next planned feature branch (November 2024).
				6.1.x		is the upcoming feature branch (November 2023).
				6.0.x		is the main production line as of November 2022. This new generation of the framework comes with a JDK 17 and Jakarta EE 9 baseline.
				5.3.x		is the final feature branch of the 5th generation, with long-term support provided on JDK 8, JDK 11, JDK 17 and the Java EE 8 level.
				4.3.x		reached its official EOL (end-of-life) on December 31st, 2020. No further maintenance and security patches are planned in that line.
				3.2.x		reached its official EOL (end-of-life) on December 31st, 2016. No further maintenance and security patches are planned in that line.
			 + JDK Version Range:
				Spring Framework 6.2.x:		JDK 17-25 (expected)
				Spring Framework 6.1.x:		JDK 17-23
				Spring Framework 6.0.x:		JDK 17-21
				Spring Framework 5.3.x:		JDK 8-21 (as of 5.3.26)
			 + Java/Jakarta EE Versions
				Spring Framework 6.2.x:		Jakarta EE 9-11 (jakarta namespace)
				Spring Framework 6.1.x:		Jakarta EE 9-10 (jakarta namespace)
				Spring Framework 6.0.x:		Jakarta EE 9-10 (jakarta namespace)
				Spring Framework 5.3.x:		Java EE 7-8 (javax namespace)
		-->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- <spring.framework.version>4.2.5.RELEASE</spring.framework.version> -->
		<!-- <spring.framework.version>4.0.6.RELEASE</spring.framework.version> -->
		<!-- FIXME New version to avoid SecurityException of Spring AOP and maven jar signer.
			Could not generate CGLIB subclass... Common causes of this problem include
			using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException:
			Cannot subclass final class... -->
		<!-- Spring 5.0.x -->
		<!--<spring.framework.version>5.0.4.RELEASE</spring.framework.version>-->
		<!--<spring.framework.version>5.0.20.RELEASE</spring.framework.version>-->
		<!-- Spring 5.1.x -->
		<!--<spring.framework.version>5.1.20.RELEASE</spring.framework.version>-->
		<!-- Spring 5.2.x -->
		<!--<spring.framework.version>5.2.25.RELEASE</spring.framework.version>-->
		<!-- Spring 5.3.x -->
		<!--<spring.framework.version>5.3.30</spring.framework.version>-->
		<!-- Spring 6.0.x -->
		<!--<spring.framework.version>6.0.13</spring.framework.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring LDAP -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring LDAP 2.0.x -->
		<!--<spring.ldap.core.version>2.0.4.RELEASE</spring.ldap.core.version>-->
		<!-- Spring LDAP 2.1.x -->
		<!--<spring.ldap.core.version>2.1.0.RELEASE</spring.ldap.core.version>-->
		<!-- Spring LDAP 2.2.x -->
		<!--<spring.ldap.core.version>2.2.1.RELEASE</spring.ldap.core.version>-->
		<!-- Spring LDAP 2.3.x -->
		<!--<spring.ldap.core.version>2.3.8.RELEASE</spring.ldap.core.version>-->
		<!-- Spring LDAP 2.4.x -->
		<!--<spring.ldap.core.version>2.4.1</spring.ldap.core.version>-->
		<!-- Spring LDAP 3.0.x -->
		<!--<spring.ldap.core.version>3.0.6</spring.ldap.core.version>-->
		<!-- Spring LDAP 3.1.x -->
		<!--<spring.ldap.core.version>3.1.2</spring.ldap.core.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Security -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Security 3.2.x -->
		<!--<spring.security.version>3.2.9.RELEASE</spring.security.version>-->
		<!-- Spring Security 5.5.x -->
		<!--<spring.security.version>5.5.8</spring.security.version>-->
		<!-- Spring Security 5.6.x -->
		<!--<spring.security.version>5.6.12</spring.security.version>-->
		<!-- Spring Security 5.7.x -->
		<!--<spring.security.version>5.7.11</spring.security.version>-->
		<!-- Spring Security 5.8.x -->
		<!--<spring.security.version>5.8.8</spring.security.version>-->
		<!-- Spring Security 6.0.x -->
		<!--<spring.security.version>6.0.8</spring.security.version>-->
		<!-- Spring Security 6.1.x -->
		<!--<spring.security.version>6.1.5</spring.security.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data 2.1.x -->
		<!--<spring.springframework.data.version>2.1.10.RELEASE</spring.springframework.data.version>-->
		<!--<spring.springframework.data.version>2.1.21.RELEASE</spring.springframework.data.version>-->
		<!-- Spring Data 2.2.x -->
		<!--<spring.springframework.data.version>2.2.13.RELEASE</spring.springframework.data.version>-->
		<!-- Spring Data 2.3.x -->
		<!--<spring.springframework.data.version>2.3.9.RELEASE</spring.springframework.data.version>-->
		<!-- Spring Data 2.4.x -->
		<!--<spring.springframework.data.version>2.4.15</spring.springframework.data.version>-->
		<!-- Spring Data 2.5.x -->
		<!--<spring.springframework.data.version>2.5.12</spring.springframework.data.version>-->
		<!-- Spring Data 2.6.x -->
		<!--<spring.springframework.data.version>2.6.10</spring.springframework.data.version>-->
		<!-- Spring Data 2.7.x -->
		<!--<spring.springframework.data.version>2.7.17</spring.springframework.data.version>-->
		<!-- Spring Data 3.0.x -->
		<!--<spring.springframework.data.version>3.0.11</spring.springframework.data.version>-->
		<!-- Spring Data 3.1.x -->
		<!--<spring.springframework.data.version>3.1.5</spring.springframework.data.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data Mongo -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data Mongo 2.1.x -->
		<!--<spring.springframework.data.mongo.version>2.1.10.RELEASE</spring.springframework.data.mongo.version>-->
		<!-- Spring Data Mongo 3.3.x -->
		<!--<spring.springframework.data.mongo.version>3.3.10</spring.springframework.data.mongo.version>-->
		<!-- Spring Data Mongo 3.4.x -->
		<!--<spring.springframework.data.mongo.version>3.4.17</spring.springframework.data.mongo.version>-->
		<!-- Spring Data Mongo 4.0.x -->
		<!--<spring.springframework.data.mongo.version>4.0.11</spring.springframework.data.mongo.version>-->
		<!-- Spring Data Mongo 4.1.x -->
		<!--<spring.springframework.data.mongo.version>4.1.5</spring.springframework.data.mongo.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data Redis -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data Redis 2.1.x -->
		<!--<spring.springframework.data.redis.version>2.1.10.RELEASE</spring.springframework.data.redis.version>-->
		<!--<spring.springframework.data.redis.version>2.1.21.RELEASE</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 2.2.x -->
		<!--<spring.springframework.data.redis.version>2.2.13.RELEASE</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 2.3.x -->
		<!--<spring.springframework.data.redis.version>2.3.9.RELEASE</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 2.4.x -->
		<!--<spring.springframework.data.redis.version>2.4.15</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 2.5.x -->
		<!--<spring.springframework.data.redis.version>2.5.12</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 2.6.x -->
		<!--<spring.springframework.data.redis.version>2.6.10</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 2.7.x -->
		<!--<spring.springframework.data.redis.version>2.7.17</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 3.0.x -->
		<!--<spring.springframework.data.redis.version>3.0.11</spring.springframework.data.redis.version>-->
		<!-- Spring Data Redis 3.1.x -->
		<!--<spring.springframework.data.redis.version>3.1.5</spring.springframework.data.redis.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data ElasticSearch -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring Data ElasticSearch 3.1.x -->
		<!--<spring.springframework.data.elasticsearch.version>3.1.10.RELEASE</spring.springframework.data.elasticsearch.version>-->
		<!--<spring.springframework.data.elasticsearch.version>3.1.21.RELEASE</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 3.2.x -->
		<!--<spring.springframework.data.elasticsearch.version>3.2.13.RELEASE</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 4.0.x -->
		<!--<spring.springframework.data.elasticsearch.version>4.0.9.RELEASE</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 4.1.x -->
		<!--<spring.springframework.data.elasticsearch.version>4.1.15</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 4.2.x -->
		<!--<spring.springframework.data.elasticsearch.version>4.2.12</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 4.3.x -->
		<!--<spring.springframework.data.elasticsearch.version>4.3.10</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 4.4.x -->
		<!--<spring.springframework.data.elasticsearch.version>4.4.17</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 5.0.x -->
		<!--<spring.springframework.data.elasticsearch.version>5.0.11</spring.springframework.data.elasticsearch.version>-->
		<!-- Spring Data ElasticSearch 5.1.x -->
		<!--<spring.springframework.data.elasticsearch.version>5.1.5</spring.springframework.data.elasticsearch.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring websocket depencencies (javax/jakarta websocket-api) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- 1.0.x (javax) -->
		<!--<javax.websocket.groupId>javax.websocket</javax.websocket.groupId>
		<javax.websocket.artifactId>javax.websocket-api</javax.websocket.artifactId>-->
		<!--<javax.websocket.version>1.0</javax.websocket.version>-->
		<!-- 1.1.x (javax) -->
		<!--<javax.websocket.version>1.1</javax.websocket.version>-->
		<!-- 1.1.x (jakarta) -->
		<!--<javax.websocket.groupId>jakarta.websocket</javax.websocket.groupId>
		<javax.websocket.artifactId>jakarta.websocket-api</javax.websocket.artifactId>-->
		<!--<javax.websocket.version>1.1.2</javax.websocket.version>-->
		<!-- 2.0.x (jakarta) -->
		<!--<javax.websocket.version>2.0.0</javax.websocket.version>-->
		<!-- 2.1.x (jakarta) -->
		<!--<javax.websocket.version>2.1.0</javax.websocket.version>-->
		<!--<javax.websocket.version>2.1.1</javax.websocket.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Spring websocket depencencies (Reactor TCP Components - org/io) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- reactor-net (org.projectreactor) -->
		<!--<projectreactor.groupId>org.projectreactor</projectreactor.groupId>
		<projectreactor.artifactId>reactor-net</projectreactor.artifactId>
		<projectreactor.version>1.1.6.RELEASE</projectreactor.version>-->
		<!-- reactor-net (io.projectreactor) -->
		<!--<projectreactor.groupId>io.projectreactor</projectreactor.groupId>
		<projectreactor.artifactId>reactor-net</projectreactor.artifactId>
		<projectreactor.version>2.0.8.RELEASE</projectreactor.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Apache HTTP Components (CORE) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- JDK8/11 -->
		<!--<http.core.groupId>org.apache.httpcomponents</http.core.groupId>
		<http.core.artifactId>httpcore</http.core.artifactId>
		<http.core.version>4.4.5</http.core.version>-->

		<!-- JDK17+ (HTTP/1.1) -->
		<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
		<http.core.artifactId>httpcore5</http.core.artifactId>-->
		<!-- 5.0.x -->
		<!--<http.core.version>5.0.4</http.core.version>-->
		<!-- 5.1.x -->
		<!--<http.core.version>5.1.5</http.core.version>-->
		<!-- 5.2.x -->
		<!--<http.core.version>5.2.3</http.core.version>-->

		<!-- JDK17+ (HTTP/2) -->
		<!--<http.core.groupId>org.apache.httpcomponents.core5</http.core.groupId>
		<http.core.artifactId>httpcore5-h2</http.core.artifactId>-->
		<!-- 5.0.x -->
		<!--<http.core.version>5.0.4</http.core.version>-->
		<!-- 5.1.x -->
		<!--<http.core.version>5.1.5</http.core.version>-->
		<!-- 5.2.x -->
		<!--<http.core.version>5.2.3</http.core.version>-->
		
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Apache HTTP Components (CLIENT) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- JDK8/11 -->
		<!--<http.client.groupId>org.apache.httpcomponents</http.client.groupId>
		<http.client.artifactId>httpclient</http.client.artifactId>
		<http.client.version>4.5.2</http.client.version>-->

		<!-- JDK17+ -->
		<!--<http.client.groupId>org.apache.httpcomponents.client5</http.client.groupId>
		<http.client.artifactId>httpclient5</http.client.artifactId>-->
		<!-- 5.0.x -->
		<!--<http.client.version>5.0.4</http.client.version>-->
		<!-- 5.1.x -->
		<!--<http.client.version>5.1.5</http.client.version>-->
		<!-- 5.2.x -->
		<!--<http.client.version>5.2.3</http.client.version>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!--
			 Nimbus - Spring Security JWT Authentication
			 	Version			JDK
			 	9.15.x-			8+
			 	9.20.x+			11+
	 	-->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- 3.8.x -->
		<!--<com.nimbusds.jose.jwt.version>3.8</com.nimbusds.jose.jwt.version>-->
		<!--<com.nimbusds.jose.jwt.version>3.8.2</com.nimbusds.jose.jwt.version>-->
		<!-- 7.9.x -->
		<!--<com.nimbusds.jose.jwt.version>7.9</com.nimbusds.jose.jwt.version>-->
		<!-- 9.15.x (JDK8+) -->
		<!--<com.nimbusds.jose.jwt.version>9.15.2</com.nimbusds.jose.jwt.version>-->
		<!-- 9.31.x (JDK11+) -->
		<!--<com.nimbusds.jose.jwt.version>9.31</com.nimbusds.jose.jwt.version>-->
		<!-- 9.37.x (JDK11+) -->
		<!--<com.nimbusds.jose.jwt.version>9.37</com.nimbusds.jose.jwt.version>-->
		<!--<com.nimbusds.jose.jwt.version>9.37.1</com.nimbusds.jose.jwt.version>-->

		<!--
		Servlet Spec	JSP Spec	EL Spec		WebSocket Spec		Authentication (JASPIC) Spec	Apache Tomcat Version	Latest Released Version		Supported Java Versions
		6.1				4.0			6.0			TBD					TBD								11.0.x					11.0.0-M13 (alpha)			21+
		6.0				3.1			5.0			2.1					3.0								10.1.x					10.1.16						11+
		5.0				3.0			4.0			2.0					2.0								10.0.x (superseded)		10.0.27 (superseded)		8+
		4.0				2.3			3.0			1.1					1.1								9.0.x					9.0.82						8+
		3.1				2.3			3.0			1.1					1.1								8.5.x					8.5.96						7+
		3.1				2.3			3.0			1.1					N/A								8.0.x (superseded)		8.0.53 (superseded)			7+
		3.0				2.2			2.2			1.1					N/A								7.0.x (archived)		7.0.109 (archived)			6+ (7+ for WebSocket)
		2.5				2.1			2.1			N/A					N/A								6.0.x (archived)		6.0.53 (archived)			5+
		2.4				2.0			N/A			N/A					N/A								5.5.x (archived)		5.5.36 (archived)			1.4+
		2.3				1.2			N/A			N/A					N/A								4.1.x (archived)		4.1.40 (archived)			1.3+
		2.2				1.1			N/A			N/A					N/A								3.3.x (archived)		3.3.2 (archived)			1.1+
		-->
		<!-- Tomcat 7.0.x (JDK6/7+ - 7 and later for WebSocket) -->
		<!-- <org.apache.tomcat.version>7.0.52</org.apache.tomcat.version> -->
		<!-- <org.apache.tomcat.version>7.0.109</org.apache.tomcat.version> -->
		<!-- Tomcat 8.0.x (JDK7+) -->
		<!-- <org.apache.tomcat.version>8.0.41</org.apache.tomcat.version> -->
		<!-- <org.apache.tomcat.version>8.0.53</org.apache.tomcat.version> -->
		<!-- Tomcat 8.5.x (JDK7+) -->
		<!-- <org.apache.tomcat.version>8.5.11</org.apache.tomcat.version> -->
		<!-- <org.apache.tomcat.version>8.5.95</org.apache.tomcat.version> -->
		<!-- Tomcat 9.0.x (JDK8+) -->
		<!-- <org.apache.tomcat.version>9.0.0.M17</org.apache.tomcat.version> -->
		<!-- <org.apache.tomcat.version>9.0.82</org.apache.tomcat.version> -->
		<!-- Tomcat 10.0.x (JDK8+) -->
		<!-- <org.apache.tomcat.version>10.0.27</org.apache.tomcat.version> -->
		<!-- Tomcat 10.1.x (JDK11+) -->
		<!-- <org.apache.tomcat.version>10.1.15</org.apache.tomcat.version> -->
		<!-- Tomcat 11.0.x (JDK21+) -->
		<!-- <org.apache.tomcat.version>11.0.0-M13</org.apache.tomcat.version> -->

		<!-- Jackson Json -->
		<codehaus.jackson-core-asl.version>1.9.13</codehaus.jackson-core-asl.version>
		<codehaus.jackson-jaxrs.version>1.9.13</codehaus.jackson-jaxrs.version>
		<codehaus.jackson-mapper-asl.version>1.9.13</codehaus.jackson-mapper-asl.version>
		<codehaus.jackson-xc.version>1.9.13</codehaus.jackson-xc.version>

		<!-- Jackson XML -->
		<!-- <com.fasterxml.jackson.version>2.0.5</com.fasterxml.jackson.version> -->
		<!-- <com.fasterxml.jackson.version>2.8.3</com.fasterxml.jackson.version> -->
		<com.fasterxml.jackson.version>2.9.4</com.fasterxml.jackson.version>
		<com.fasterxml.woodstox.version>5.0.3</com.fasterxml.woodstox.version>
		<org.codehaus.woodstox.version>4.0.0</org.codehaus.woodstox.version>

		<!-- Jersey -->
		<jersey.json.version>1.19.2</jersey.json.version>
		<jersey.client.version>1.19.2</jersey.client.version>
		<jersey.multipart.version>1.19.2</jersey.multipart.version>
		<jersey.server.version>1.19.2</jersey.server.version>
		<jersey.spring.version>1.19.2</jersey.spring.version>

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- DATABASE -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- Datasource -->
		<com.mchange.c3p0.version>0.9.5.5</com.mchange.c3p0.version>
		<!-- PostgreSQL -->
		<!--<postgre.version>9.3-1102-jdbc4</postgre.version>-->
		<postgre.version>42.7.0</postgre.version>
		<!-- SQL Server -->
		<!--<sqlserver.groupId>com.hynnet</sqlserver.groupId>
		<sqlserver.artifactId></sqlserver.artifactId>
		<sqlserver.version>sqljdbc4-chs</sqlserver.version>-->
		<!-- Doma -->
		<!--<doma.version>1.38.0</doma.version>-->
		<doma.version>2.29.0</doma.version>
		<!-- Mongo -->
		<!-- <mongo.java.driver.version>3.3.0</mongo.java.driver.version> -->
		<!-- <mongo.java.driver.version>3.6.1</mongo.java.driver.version> -->
		<mongo.java.driver.version>3.8.0</mongo.java.driver.version>

		<!-- Quartz -->
		<quartz.version>2.3.2</quartz.version>

		<!-- Hibernate -->
		<!-- <org.hibernate.version>5.2.10.Final</org.hibernate.version>
		<org.hibernate.javax.persistence.version>1.0.0.Final</org.hibernate.javax.persistence.version>
		<org.hibernate.common-annotations.version>5.0.1.Final</org.hibernate.common-annotations.version> -->
		<org.hibernate.validator.version>5.1.0.Final</org.hibernate.validator.version>

		<!-- Mail -->
		<javax.mail.version>1.4.7</javax.mail.version>

		<!-- Freemarker -->
		<freemarker.version>2.3.22</freemarker.version>
		
		<!-- NoException -->
		<noexception.version>1.9.1</noexception.version>
		<noexception.slf4j.version>1.0.2</noexception.slf4j.version>

		<!-- jasperreports -->
		<net.sf.jasperreports.version>6.2.0</net.sf.jasperreports.version>
		<net.sourceforge.jexcelapi.version>2.6.10</net.sourceforge.jexcelapi.version>
		<net.sf.jasperreports.olap4j.version>1.2.0</net.sf.jasperreports.olap4j.version>
		<!-- FIXME Jasper reports 6.2.0 required 2.1.7.js4 but it has been deprecated -->
		<net.sf.jasperreports.itext.version>5.5.13.3</net.sf.jasperreports.itext.version>

		<!-- Joda Time -->
		<joda.time.version>2.7</joda.time.version>

		<!-- Apache POI -->
		<org.apache.poi.version>3.15</org.apache.poi.version>
		<org.apache.poi.ooxml.version>3.15</org.apache.poi.ooxml.version>
		<org.apache.poi-schemas.version>3.15</org.apache.poi-schemas.version>
		<org.apache.poi-scratchpad.version>3.15</org.apache.poi-scratchpad.version>

		<!-- Apache Commons Upload -->
		<commons.fileupload.version>1.3.1</commons.fileupload.version>

		<!-- Apache Tiles -->
		<tiles.version>3.0.5</tiles.version>

		<!-- Apache Commons DHCP -->
		<commons.dbcp2.version>2.0.1</commons.dbcp2.version>

		<!-- Apache Commons Utilities -->
		<commons.lang.version>2.6</commons.lang.version>
		<commons.lang3.version>3.3.2</commons.lang3.version>
		<commons.collections4.version>4.4</commons.collections4.version>
		<commons.io.version>1.3.2</commons.io.version>
		<commons.io.version>2.11.0</commons.io.version>
		<commons.beanutils.version>1.9.2</commons.beanutils.version>
		<commons.configuration.version>1.10</commons.configuration.version>
		<commons.validator.version>1.5.1</commons.validator.version>
		<commons.codec.version>1.16.0</commons.codec.version>
		<commons.logging.version>1.2</commons.logging.version>
		<commons.digester.version>2.1</commons.digester.version>
		
		<!-- XML API -->
		<xml-apis.version>2.0.2</xml-apis.version>

		<!-- HTML -->
		<net.sf.htmlcleaner.version>2.16</net.sf.htmlcleaner.version>
		<org.jsoup.version>1.9.1</org.jsoup.version>

		<!-- Browser -->
		<eu.bitwalker.version>1.21</eu.bitwalker.version>

		<!-- Beans -->
		<!-- Use openbeans (not using java.beans) for all Java and Android -->
		<com.google.openbeans.version>1.0</com.google.openbeans.version>

		<!-- Bean Validation -->
		<javax.validation.api.version>1.1.0.Final</javax.validation.api.version>

		<!-- Barcode4j Dependency -->
		<!-- <avalon-framework.version>4.2.0</avalon-framework.version>
		<avalon-framework-api.version>4.2.0</avalon-framework-api.version>
		<avalon-framework-impl.version>4.2.0</avalon-framework-impl.version> -->
		<avalon-framework-api.version>4.3.1</avalon-framework-api.version>
		<avalon-framework-impl.version>4.3.1</avalon-framework-impl.version>

		<!-- Barcode4j -->
		<net.sf.barcode4j.version>2.1</net.sf.barcode4j.version>

		<!-- Firebase -->
		<com.google.firebase.version>6.3.0</com.google.firebase.version>

		<!-- Test JUNIT -->
		<junit.version>4.11</junit.version>

		<!-- Other -->
		<hamcrest.version>1.3</hamcrest.version>

		<!-- Viber -->
		<com.viber.bot.version>1.0.9</com.viber.bot.version>

		<!-- Thumbnailer Libraries -->
		<com.artofsolving.jodconverter.version>2.2.1</com.artofsolving.jodconverter.version>
		<com.artofsolving.jodconverter-core.version>3.0-alfresco-patched-20141024</com.artofsolving.jodconverter-core.version>
		<com.drewnoakes.metadata-extractor.version>2.11.0</com.drewnoakes.metadata-extractor.version>
		<org.semweb4j.rdf2go.api.version>5.0.1</org.semweb4j.rdf2go.api.version>
		<org.apache.pdfbox.version>2.0.12</org.apache.pdfbox.version>
		<org.apache.pdfbox.fontbox.version>2.0.12</org.apache.pdfbox.fontbox.version>
		<!-- TODO Aperture Repo has been down.
		So need another third party libraries for generating office file(s) thumbnail -->
		<!-- <org.semanticdesktop.aperture.core.version>1.6.0</org.semanticdesktop.aperture.core.version> -->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -->
		<!-- ANDROID -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -->
		<!-- Spring Adnroid -->
		<spring.android.core.version>2.0.0.M3</spring.android.core.version>
		<spring.android.rest-template.version>2.0.0.M3</spring.android.rest-template.version>

		<!-- Android -->
		<com.google.android.version>4.1.1.4</com.google.android.version>
		<com.google.android.annotations.version>4.1.1.4</com.google.android.annotations.version>
		<com.google.android.multidex.version>1.0.1</com.google.android.multidex.version>
	</properties>

	<!-- Build settings -->
	<build>
		<finalName>${finalName}</finalName>
		<filters>
			<!-- Ensures that the config.properties file is always loaded from the
				configuration directory of the active Maven profile. -->
			<filter>${module.profile.configuration}</filter>
		</filters>
		<pluginManagement>
			<plugins>
				<!-- Find bugs -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${maven.findbugs.version}</version>
					<configuration>
						<skip>${maven.findbugs.skip}</skip>
						<debug>true</debug>
						<fork>true</fork>
						<!--
		                    Enables analysis which takes more memory but finds more bugs.
		                    If you run out of memory, changes the value of the effort element
		                    to 'low'.
		                -->
		                <effort>Low</effort>
		                <!-- Build doesn't fail if problems are found -->
		                <failOnError>false</failOnError>
		                <!-- Reports all bugs (other values are medium and max) -->
		                <threshold>Low</threshold>
						<xmlOutput>true</xmlOutput>
						<!-- Optional directory to put findbugs xdoc xml report -->
						<xmlOutputDirectory>${maven.findbugs.output.xml}</xmlOutputDirectory>
						<plugins>
				            <plugin>
				                <groupId>com.mebigfatguy.fb-contrib</groupId>
				                <artifactId>fb-contrib</artifactId>
				                <version>7.6.0</version>
				            </plugin>
				            <plugin>
		                        <groupId>com.h3xstream.findsecbugs</groupId>
		                        <artifactId>findsecbugs-plugin</artifactId>
		                        <version>1.12.0</version>
		                    </plugin>
				        </plugins>
					</configuration>
		            <executions>
		                <!-- 
		                    Ensures that FindBugs inspects source code when project is compiled. 
		                -->
		                <execution>
		                    <id>analyze-compile</id>
		                    <phase>compile</phase>
		                    <goals>
		                        <goal>check</goal>
		                    </goals>
		                </execution>
		            </executions>
				</plugin>
				<!-- Plugin for supporting root directory -->
				<plugin>
				    <groupId>org.commonjava.maven.plugins</groupId>
				    <artifactId>directory-maven-plugin</artifactId>
				    <version>${maven.directory.version}</version>
				    <executions>
				        <execution>
				            <id>directories</id>
				            <goals>
				                <goal>highest-basedir</goal>
				            </goals>
				            <phase>initialize</phase>
				            <configuration>
				                <property>root.basedir</property>
				            </configuration>
				        </execution>
				    </executions>
				</plugin>
				<!-- Groovy for supporting root directory -->
				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>groovy-maven-plugin</artifactId>
					<version>${maven.groovy.version}</version>
					<executions>
						<execution>
							<id>find-basepath</id>
							<phase>validate</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<source>
									<![CDATA[
										import java.io.File;
										log.info('Maven active profiles: {' + project.activeProfiles + '}');

										String p = "./pom.xml";
										File baseFile = null;
										if (p != null) {
											File f = new File(p);
											if (f.exists()) {
												do {
													if (f.getParentFile() != null && f.getParentFile().getParentFile() != null) {
														File parentFile = f.getParentFile();
														File grandFile = parentFile.getParentFile();
														f = new File( grandFile, p );
														if (!f.exists()) {
															baseFile = parentFile;
														}

													} else if (f.getParentFile() != null) {
														baseFile = f.getParentFile();
														break;
													}
												} while (baseFile == null || f == null || !f.exists());
											}
										}
										if (baseFile != null) {
											String basePath = baseFile.getCanonicalPath();
											if (basePath.lastIndexOf(File.separator) >= basePath.length() - 1) {
												basePath = basePath.substring( 0, basePath.lastIndexOf( File.separator ) );
											}
											basePath = basePath.replace( '\\' , '/' );
											if ( basePath == null || basePath.length() <= 0 ) {
												log.error( '(1) Could not find root directory!' );
												System.stop( 0 );

											} else {
												log.info( 'Root directory path {' + basePath + '}');
												project.properties[ 'root.basedir' ] = basePath;
												project.properties[ 'maven.multiModuleProjectDirectory' ] = basePath;
											}

										} else {
											log.error( '(2) Could not find root directory!' );
											System.stop( 0 );
										}
									]]>
								</source>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Initialization -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.version}</version>
					<configuration>
					    <exportAntProperties>false</exportAntProperties>
					</configuration>
					<executions>
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Pre-Clean (Run Once) -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<execution>
							<id>clean-folders</id>
							<phase>pre-clean</phase>
							<goals>
							    <goal>run</goal>
							</goals>
							<configuration>
							    <target name="clean-folders">
									<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>

							    	<!-- delete copied dependencies directory -->
									<delete includeEmptyDirs="true" verbose="false" quiet="true"
							        failonerror="false" performGCOnFailedDelete="false">
										<fileset dir="${maven.dependency.copy.directory}" includes="**/*"/>
									</delete>

									<!-- delete project target directory -->
							        <delete includeEmptyDirs="true" verbose="false" quiet="true"
							        failonerror="false" performGCOnFailedDelete="false">
										<fileset dir="${project.build.directory}" includes="**/*"/>
									</delete>

									<!-- delete lombok generated directories -->
							        <delete includeEmptyDirs="true" verbose="false" quiet="true"
							        failonerror="false" performGCOnFailedDelete="false">
										<fileset dir="${org.projectlombok.generated.source.directory}" includes="**/*"/>
										<fileset dir="${org.projectlombok.generated.test-source.directory}" includes="**/*"/>
									</delete>

									<!-- delete delombok directories -->
							        <delete includeEmptyDirs="true" verbose="false" quiet="true"
							        failonerror="false" performGCOnFailedDelete="false">
										<fileset dir="${org.projectlombok.delombok.directory}" includes="**/*"/>
									</delete>

									<!-- Eclipse Setup: delete .settings/.project/.classpath/.log directories -->
									<if>
										<equals arg1="${eclipse.setup.skip}" arg2="false" />
										<then>
											<if>
												<not>
													<equals arg1="${project.basedir}" arg2="${root.basedir}" />
												</not>
												<then>
													<delete includeEmptyDirs="true" verbose="false" quiet="true"
													failonerror="false" performGCOnFailedDelete="false">
														<fileset dir="${project.basedir}" includes="**/${eclipse.template.directory}/*"/>
														<fileset dir="${project.basedir}" includes="**/.settings/*"/>
														<fileset dir="${project.basedir}" includes="**/.project"/>
														<fileset dir="${project.basedir}" includes="**/.classpath"/>
														<fileset dir="${project.basedir}" includes="**/.factorypath"/>
														<fileset dir="${project.basedir}" includes="**/.log"/>
													</delete>
													<delete dir="${project.basedir}/.settings"
													includeEmptyDirs="true" verbose="false" quiet="true"
													failonerror="false" performGCOnFailedDelete="false"/>
												</then>
											</if>
										</then>
									</if>
							    </target>
							</configuration>
						</execution>
						
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Clean (called right after default maven clean phase) -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- ensure root requirement directories -->
						<execution>
							<id>ensure-root-requiment-directories</id>
							<phase>clean</phase>
							<goals>
							    <goal>run</goal>
							</goals>
							<configuration>
								<!-- ensure requiment directories -->
							    <target name="ensure-root-requiment-directories">
							        <!-- ensure copied dependencies directories -->
							        <mkdir dir="${maven.dependency.copy.directory}" />
							        <!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
							        <mkdir dir="${maven.github.repo.deployment}" />
							    </target>
							</configuration>
						</execution>
						
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Initialization -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- ensure module requirement directories -->
						<execution>
							<id>ensure-module-requiment-directories</id>
							<!-- borrow validate phase to initialize some requirement directories -->
							<phase>validate</phase>
							<goals>
							    <goal>run</goal>
							</goals>
							<configuration>
								<!-- ensure requiment directories -->
							    <target name="ensure-requirement-directories">
									<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>

									<!-- module source/test directories -->
							        <mkdir dir="${project.basedir}/src/main/java" />
							        <mkdir dir="${project.basedir}/src/main/resources" />
							        <mkdir dir="${project.basedir}/src/test/java" />
							        <mkdir dir="${project.basedir}/src/test/resources" />
							        <!-- ensure module profiles directory -->
							        <mkdir dir="${module.profile.configuration.path}" />
							        <copy file="${root.profile.configuration}" tofile="${module.profile.configuration}"/>
							        <!-- ensure generated lombok directories -->
							        <mkdir dir="${org.projectlombok.generated.source.directory}" />
							        <mkdir dir="${org.projectlombok.generated.test-source.directory}" />

							        <!-- ensure unpack dependency directories -->
							        <if>
										<equals arg1="${maven.dependency.unpack.skip}" arg2="false" />
										<then>
											<mkdir dir="${maven.dependency.unpack.source.directory.path}" />
											<mkdir dir="${maven.dependency.unpack.resource.directory.path}" />
										</then>
									</if>

							        <!-- ensure delombok directories -->
							        <if>
										<equals arg1="${maven.lombok.skip}" arg2="false" />
										<then>
											<mkdir dir="${org.projectlombok.delombok.source.directory}" />
											<mkdir dir="${org.projectlombok.delombok.test-source.directory}" />
										</then>
									</if>

									<!-- Eclipse Setup: copy all eclipse files/directories template -->
									<if>
										<equals arg1="${eclipse.setup.skip}" arg2="false" />
										<then>
											<if>
												<not>
													<equals arg1="${project.basedir}" arg2="${root.basedir}" />
												</not>
												<then>
													<if>
														<available file="${eclipse.template.packaging.directory.path}" type="dir"/>
														<then>
															<!-- copy all eclipse files/directories template -->
															<mkdir dir="${project.eclipse.template.directory.path}" />
															<copy todir="${project.eclipse.template.directory.path}"
															encoding="${project.build.sourceEncoding}" outputencoding="${project.build.sourceEncoding}"
															enablemultiplemappings="true"
															overwrite="true" includeEmptyDirs="true" force="true"
															quiet="false" verbose="true">  
																<fileset dir="${eclipse.template.packaging.directory.path}" includes="**/*" />  
															</copy>
														</then>
													</if>
												</then>
											</if>
										</then>
									</if>
							    </target>
							</configuration>
						</execution>
						
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- License Tool -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- copy files for making license -->
						<execution>
							<id>process-license-tool</id>
							<!-- use phase `install` after phase `package` when `maven-assembly-plugin` executed -->
							<phase>install</phase>
							<goals>
							    <goal>run</goal>
							</goals>
							<configuration>
								<!-- process license tool -->
							    <target name="process-license-tool-task" unless="${maven.assembly.skip}">
									<!-- delete all old files -->
									<delete includeEmptyDirs="true" verbose="false" quiet="true"
							        failonerror="false" performGCOnFailedDelete="false">
										<fileset dir="${license.tool.directory.path}" includes="**/*.jks"/>
										<fileset dir="${license.tool.directory.path}" includes="**/*.cer"/>
										<fileset dir="${license.tool.directory.path}" includes="**/*.jar"/>
										<fileset dir="${license.tool.directory.path}" includes="**/*.bat"/>
									</delete>
									<!-- create .license folder at root basedir -->
									<mkdir dir="${license.tool.directory.path}" />
									<!-- copy keystore/cert to .license folder -->
									<copy file="${jarsigner.keystore}" tofile="${license.tool.directory.path}/.keystore.jks" />
									<copy file="${jarsigner.cert}" tofile="${license.tool.directory.path}/.keystore.cer" />
									<!-- copy the packed JAR from license package after `maven-assembly-plugin` executed -->
									<copy file="${root.basedir}/modules/license/target/${license.tool.name}.jar" todir="${license.tool.directory.path}" />
									<!-- create license script to run license package JAR -->
									<echo file="${license.tool.directory.path}/${license.tool.name}.bat">
										@echo off${line.separator}${line.separator}${java.home}\bin\java -jar .\${license.tool.name}.jar -f .\licenseIn.lic -ks .\.keystore.jks -t JKS -p ${license.keypass} -s Serial.Key -a ${module.groupId}${line.separator}pause
									</echo>
								</target>
							</configuration>
						</execution>

						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Process sources -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Process unpack sources -->
						<execution>
							<id>ensure-dependencies-sources</id>
							<phase>process-sources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target name="remove-dependency-unpack-source-directories"
								unless="${maven.dependency.unpack.skip}">
									<!-- remove empty source/resource directories from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.source.directory.path}">
											<and>
												<size value="0" />
												<type type="dir" />
											</and>
										</fileset>
									</delete>

									<!-- remove empty source/resource directories from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.resource.directory.path}">
											<and>
												<size value="0" />
												<type type="dir" />
											</and>
										</fileset>
									</delete>

									<!-- remove duplicate sources/resources from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.source.directory.path}">
											<or>
												<present targetdir="${project.basedir}/src/main/java" />
												<present targetdir="${project.basedir}/src/main/resources" />
											</or>
										</fileset>
									</delete>

									<!-- remove duplicate sources/resources from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.resource.directory.path}">
											<or>
												<present targetdir="${project.basedir}/src/main/java" />
												<present targetdir="${project.basedir}/src/main/resources" />
											</or>
										</fileset>
									</delete>
								</target>
							</configuration>
						</execution>

						<!-- Eclipse Setup: Process eclipse project files template -->
						<execution>
							<id>process-eclipse-template</id>
							<phase>process-sources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target name="process-eclipse-template-files"
								unless="${eclipse.setup.skip}">
									<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>

									<!--
										 1. replace token holder by maven properties
										 2. copy replaced eclipse template to project basedir
									-->
									<if>
										<not>
											<equals arg1="${project.basedir}" arg2="${root.basedir}" />
										</not>
										<then>
											<if>
												<available file="${project.eclipse.template.directory.path}" type="dir"/>
												<then>
													<!-- 1. replace token holder by maven properties -->
													<replace dir="${project.eclipse.template.directory.path}" failOnNoReplacements="true"
													encoding="${project.build.sourceEncoding}">
														<!-- common tokens -->
														<replacefilter token="@java.version@" value="${java.version}" />
														<replacefilter token="@project.build.sourceEncoding@" value="${project.build.sourceEncoding}" />
														<replacefilter token="@org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory@" value="${org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory}" />
														<replacefilter token="@org.eclipse.jdt.core.compiler.processAnnotations@" value="${org.eclipse.jdt.core.compiler.processAnnotations}" />
														<replacefilter token="@org.eclipse.jdt.core.compiler.release@" value="${org.eclipse.jdt.core.compiler.release}" />
														<replacefilter token="@eclipse.maven.project.activated.profiles@" value="${eclipse.maven.project.activated.profiles}" />

														<!-- annotation processing tokens -->
														<replacefilter token="@m2e.apt.aptEnabled@" value="${m2e.apt.aptEnabled}" />
														<replacefilter token="@org.projectlombok.version@" value="${org.projectlombok.version}" />
														<replacefilter token="@doma.version@" value="${doma.version}" />

														<!-- project tokens -->
														<replacefilter token="@project.artifactId@" value="${project.artifactId}" />
														<replacefilter token="@project.version@" value="${project.version}" />
														<replacefilter token="@project.description@" value="${project.description}" />
														<replacefilter token="@project.facet.java.utility.version@" value="${project.facet.java.utility.version}" />
														<replacefilter token="@project.facet.jst.web.version@" value="${project.facet.jst.web.version}" />
														<replacefilter token="@project.facet.jst.jaxrs.version@" value="${project.facet.jst.jaxrs.version}" />

														<!-- source tokens -->
														<replacefilter token="@org.projectlombok.generated.source@" value="${org.projectlombok.generated.source}" />
														<replacefilter token="@org.projectlombok.generated.test-source@" value="${org.projectlombok.generated.test-source}" />
														<replacefilter token="@maven.dependency.unpack.source.directory@" value="${maven.dependency.unpack.source.directory}" />
														<replacefilter token="@maven.dependency.unpack.resource.directory@" value="${maven.dependency.unpack.resource.directory}" />
													</replace>

													<!-- 2. copy replaced eclipse template to project basedir -->
													<copy todir="${project.basedir}"
													encoding="${project.build.sourceEncoding}" outputencoding="${project.build.sourceEncoding}"
													enablemultiplemappings="true"
													overwrite="true" includeEmptyDirs="true" force="true"
													quiet="false" verbose="true">  
														<fileset dir="${project.eclipse.template.directory.path}" includes="**" />  
													</copy>
												</then>
											</if>
										</then>
									</if>
								</target>
							</configuration>
						</execution>

						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Process resources -->
						<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
						<!-- Process unpack resources -->
						<execution>
							<id>ensure-dependencies-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target name="remove-dependency-unpack-resource-directories"
								unless="${maven.dependency.unpack.skip}">
									<!-- remove empty source/resource directories from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.source.directory.path}">
											<and>
												<size value="0" />
												<type type="dir" />
											</and>
										</fileset>
									</delete>

									<!-- remove empty source/resource directories from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.resource.directory.path}">
											<and>
												<size value="0" />
												<type type="dir" />
											</and>
										</fileset>
									</delete>

									<!-- remove duplicate sources/resources from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.source.directory.path}">
											<or>
												<present targetdir="${project.basedir}/src/main/java" />
												<present targetdir="${project.basedir}/src/main/resources" />
											</or>
										</fileset>
									</delete>

									<!-- remove duplicate sources/resources from unpacked dependencies -->
									<delete quiet="true" includeEmptyDirs="true" failonerror="false" verbose="true">
										<fileset dir="${maven.dependency.unpack.resource.directory.path}">
											<or>
												<present targetdir="${project.basedir}/src/main/java" />
												<present targetdir="${project.basedir}/src/main/resources" />
											</or>
										</fileset>
									</delete>
								</target>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
				            <groupId>ant-contrib</groupId>
				            <artifactId>ant-contrib</artifactId>
				            <version>1.0b3</version>
		                    <exclusions>
		                        <exclusion>
		                            <groupId>ant</groupId>
		                            <artifactId>ant</artifactId>
		                        </exclusion>
		                    </exclusions>
				        </dependency>
						<dependency>
						    <groupId>org.apache.ant</groupId>
						    <artifactId>ant</artifactId>
						    <version>1.10.14</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- Enforce JDK version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.version}</version>
					<executions>
						<!-- ensure NOT duplicated classes -->
						<execution>
							<id>enforce-duplicated-classes</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<skip>${maven.enforcer.skip}</skip>
								<fail>true</fail>
								<failFast>true</failFast>
								<ignoreCache>true</ignoreCache>
								<rules>
							    	<banDuplicateClasses>
										<findAllDuplicates>true</findAllDuplicates>
										<ignoreWhenIdentical>true</ignoreWhenIdentical>
							    	</banDuplicateClasses>
								</rules>
							</configuration>
						</execution>
						<!-- ensure NOT duplicated dependencies -->
						<execution>
							<id>enforce-duplicated-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<skip>${maven.enforcer.skip}</skip>
								<fail>true</fail>
								<failFast>true</failFast>
								<ignoreCache>true</ignoreCache>
								<rules>
							    	<banDuplicatePomDependencyVersions/>
								</rules>
							</configuration>
						</execution>
						<!-- ensure NOT duplicated dependencies -->
						<execution>
							<id>enforce-dependency-covergence</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<skip>${maven.enforcer.skip}</skip>
								<fail>true</fail>
								<failFast>true</failFast>
								<ignoreCache>true</ignoreCache>
								<rules>
							    	<dependencyConvergence/>
								</rules>
							</configuration>
						</execution>
          				<!-- ensure JDK version -->
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<skip>${maven.enforcer.skip}</skip>
								<fail>true</fail>
								<failFast>true</failFast>
								<ignoreCache>true</ignoreCache>
								<rules>
									<requireJavaVersion>
										<version>${java.version}</version>
									</requireJavaVersion>
									<requireMavenVersion>
										<version>3.0</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Project properties -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${maven.properties.version}</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>${module.profile.configuration}</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Check new version of dependencies -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven.versions.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
						<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
						<outputFile>${root.basedir}/dependency_versions.log</outputFile>
						<verbose>true</verbose>
					</configuration>
					<executions>
						<execution>
							<id>display-dependency-updates</id>
							<goals>
								<goal>display-dependency-updates</goal>
							</goals>
						</execution>
						<execution>
							<id>display-plugin-updates</id>
							<goals>
								<goal>display-plugin-updates</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Dependency pugin support for un-packing dependencies to customize -->
				<plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.version}</version>
                    <configuration>
						<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
						<overWriteIfNewer>true</overWriteIfNewer>
                        <overWriteReleases>false</overWriteReleases>
                        <overWriteSnapshots>true</overWriteSnapshots>
                    </configuration>
                    <executions>
						<!-- Copy dependencies -->
						<execution>
							<id>copy-dependencies</id>
							<phase>install</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${maven.dependency.copy.directory}</outputDirectory>
								<includeScope>compile</includeScope>
								<skip>${maven.dependency.copy.skip}</skip>
							</configuration>
						</execution>
						<!-- Generate depdencies source -->
                        <execution>
                            <id>generate-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${maven.dependency.unpack.groupId}</groupId>
                                        <artifactId>${maven.dependency.unpack.artifactId}</artifactId>
                                        <version>${maven.dependency.unpack.version}</version>
                                        <type>jar</type>
                                        <classifier>sources</classifier>
                                        <overWrite>true</overWrite>
                                        <includes>${maven.dependency.unpack.source.includes}</includes>
                                        <outputDirectory>${maven.dependency.unpack.source.directory.path}</outputDirectory>
                                    </artifactItem>
                                </artifactItems>
                                <skip>${maven.dependency.unpack.skip}</skip>
                            </configuration>
                        </execution>
						<!-- Generate depdencies resource -->
                        <execution>
                            <id>generate-resource</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${maven.dependency.unpack.groupId}</groupId>
                                        <artifactId>${maven.dependency.unpack.artifactId}</artifactId>
                                        <version>${maven.dependency.unpack.version}</version>
                                        <type>jar</type>
                                        <classifier>sources</classifier>
                                        <overWrite>true</overWrite>
                                        <excludes>${maven.dependency.unpack.resource.excludes}</excludes>
                                        <outputDirectory>${maven.dependency.unpack.resource.directory.path}</outputDirectory>
                                    </artifactItem>
                                </artifactItems>
                                <skip>${maven.dependency.unpack.skip}</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
				<!-- This plugin is used to release a project with Maven, saving a lot of repetitive, manual work.
					Releasing a project is made in two steps: prepare and perform. -->
				<!-- <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.version}</version>
				</plugin> -->
				<!-- Attach more source folders -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${maven.build.helper.version}</version>
					<executions>
						<!-- add maven version -->
						<execution>
							<id>maven-version</id>
							<goals>
								<goal>maven-version</goal>
							</goals>
						</execution>
						<!-- add lombok generated source folder -->
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${org.projectlombok.generated.source.directory}</source>
								</sources>
							</configuration>
						</execution>
						<!-- add lombok generated test source folder -->
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${org.projectlombok.generated.test-source.directory}</source>
								</sources>
							</configuration>
						</execution>
						<!-- Process source -->
						<execution>
							<id>attach-source</id>
							<phase>process-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${maven.dependency.unpack.source.directory}</source>
								</sources>
							</configuration>
						</execution>
						<!-- Process resource -->
						<execution>
							<id>attach-resource</id>
							<phase>process-resources</phase>
							<goals>
								<goal>add-resource</goal>
							</goals>
							<configuration>
								<resources>
									<!-- include all resources from generated-sources folder except JAVA files -->
									<resource>
										<directory>${maven.dependency.unpack.source.directory}</directory>
										<includes>
											<include>**/*.xhtml</include>
										</includes>
										<excludes>
											<exclude>**/*.java</exclude>
										</excludes>
										<filtering>true</filtering>
									</resource>
									<!-- exclude all resources from generated-resources folder (present no need to keep current project configuration) -->
									<resource>
										<directory>${maven.dependency.unpack.resource.directory}</directory>
										<excludes>
											<exclude>**/*.java</exclude>
										</excludes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Copy resources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.version}</version>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- here the phase you need -->
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.outputDirectory}</outputDirectory>
								<encoding>${project.build.sourceEncoding}</encoding>
								<overwrite>true</overwrite>
								<supportMultiLineFiltering>true</supportMultiLineFiltering>
								<nonFilteredFileExtensions>
									<!-- excel template -->
									<nonFilteredFileExtension>*.xls</nonFilteredFileExtension>
									<nonFilteredFileExtension>*.xlsx</nonFilteredFileExtension>
									<!-- fonts -->
									<nonFilteredFileExtension>*.eot</nonFilteredFileExtension>
									<nonFilteredFileExtension>*.svg</nonFilteredFileExtension>
									<nonFilteredFileExtension>*.ttf</nonFilteredFileExtension>
									<nonFilteredFileExtension>*.woff</nonFilteredFileExtension>
									<nonFilteredFileExtension>*.woff2</nonFilteredFileExtension>
									<nonFilteredFileExtension>*.otf</nonFilteredFileExtension>
									<!-- file upload SWF -->
									<nonFilteredFileExtension>*.swf</nonFilteredFileExtension>
									<!-- Database backup if necessary -->
									<nonFilteredFileExtension>*.backup</nonFilteredFileExtension>
								</nonFilteredFileExtensions>
								<resources>
									<!-- Copy resource exclude JAVA, CLASSES to build target directory -->
									<resource>
										<filtering>true</filtering>
										<directory>src/main/resources</directory>
										<excludes>
											<exclude>*.java</exclude>
											<exclude>*.class</exclude>
											<exclude>*.bat</exclude>
											<exclude>*.jar</exclude>
											<!-- excel template -->
											<exclude>*.xls</exclude>
											<exclude>**/*.xls</exclude>
											<exclude>*.xlsx</exclude>
											<exclude>**/*.xlsx</exclude>
											<exclude>*.xlsm</exclude>
											<exclude>**/*.xlsm</exclude>
											<exclude>*.xlsb</exclude>
											<exclude>**/*.xlsb</exclude>
											<exclude>*.xltml</exclude>
											<exclude>**/*.xltm</exclude>
											<!-- fonts -->
											<exclude>*.eot</exclude>
											<exclude>**/*.eot</exclude>
											<exclude>*.svg</exclude>
											<exclude>**/*.svg</exclude>
											<exclude>*.ttf</exclude>
											<exclude>**/*.ttf</exclude>
											<exclude>*.woff</exclude>
											<exclude>**/*.woff</exclude>
											<exclude>*.woff2</exclude>
											<exclude>**/*.woff2</exclude>
											<exclude>*.otf</exclude>
											<exclude>**/*.otf</exclude>
											<!-- images -->
											<exclude>*.cur</exclude>
											<exclude>**/*.cur</exclude>
											<exclude>*.ico</exclude>
											<exclude>**/*.ico</exclude>
											<exclude>*.gif</exclude>
											<exclude>**/*.gif</exclude>
											<exclude>*.png</exclude>
											<exclude>**/*.png</exclude>
											<exclude>*.jpg</exclude>
											<exclude>**/*.jpg</exclude>
											<exclude>*.jpeg</exclude>
											<exclude>**/*.jpeg</exclude>
											<exclude>*.bmp</exclude>
											<exclude>**/*.bmp</exclude>
											<!-- sounds -->
											<exclude>*.wav</exclude>
											<exclude>**/*.wav</exclude>
											<!-- file upload SWF -->
											<exclude>*.swf</exclude>
											<exclude>**/*.swf</exclude>
											<!-- Database backup if necessary -->
											<exclude>*.backup</exclude>
											<exclude>**/*.backup</exclude>
										</excludes>
									</resource>
									<resource>
										<filtering>false</filtering>
										<directory>src/main/resources</directory>
										<includes>
											<!-- excel template -->
											<include>*.xls</include>
											<include>**/*.xls</include>
											<include>*.xlsx</include>
											<include>**/*.xlsx</include>
											<include>*.xlsm</include>
											<include>**/*.xlsm</include>
											<include>*.xlsb</include>
											<include>**/*.xlsb</include>
											<include>*.xltm</include>
											<include>**/*.xltm</include>
											<!-- fonts -->
											<include>*.eot</include>
											<include>**/*.eot</include>
											<include>*.svg</include>
											<include>**/*.svg</include>
											<include>*.ttf</include>
											<include>**/*.ttf</include>
											<include>*.woff</include>
											<include>**/*.woff</include>
											<include>*.woff2</include>
											<include>**/*.woff2</include>
											<include>*.otf</include>
											<include>**/*.otf</include>
											<!-- images -->
											<include>*.cur</include>
											<include>**/*.cur</include>
											<include>*.ico</include>
											<include>**/*.ico</include>
											<include>*.gif</include>
											<include>**/*.gif</include>
											<include>*.png</include>
											<include>**/*.png</include>
											<include>*.jpg</include>
											<include>**/*.jpg</include>
											<include>*.jpeg</include>
											<include>**/*.jpeg</include>
											<include>*.bmp</include>
											<include>**/*.bmp</include>
											<!-- sounds -->
											<include>*.wav</include>
											<include>**/*.wav</include>
											<!-- file upload SWF -->
											<include>*.swf</include>
											<include>**/*.swf</include>
											<!-- Database backup if necessary -->
											<include>*.backup</include>
											<include>**/*.backup</include>
										</includes>
										<excludes>
											<exclude>*.java</exclude>
											<exclude>*.class</exclude>
											<exclude>*.bat</exclude>
											<exclude>*.jar</exclude>
										</excludes>
									</resource>
									<!-- Copy DOMA SQL file to build target directory -->
									<resource>
										<filtering>true</filtering>
										<directory>src/main/java</directory>
										<excludes>
											<exclude>*.java</exclude>
											<exclude>*.class</exclude>
											<exclude>*.bat</exclude>
											<exclude>*.jar</exclude>
											<!-- excel template -->
											<exclude>*.xls</exclude>
											<exclude>**/*.xls</exclude>
											<exclude>*.xlsx</exclude>
											<exclude>**/*.xlsx</exclude>
											<exclude>*.xlsm</exclude>
											<exclude>**/*.xlsm</exclude>
											<exclude>*.xlsb</exclude>
											<exclude>**/*.xlsb</exclude>
											<exclude>*.xltml</exclude>
											<exclude>**/*.xltm</exclude>
											<!-- fonts -->
											<exclude>*.eot</exclude>
											<exclude>**/*.eot</exclude>
											<exclude>*.svg</exclude>
											<exclude>**/*.svg</exclude>
											<exclude>*.ttf</exclude>
											<exclude>**/*.ttf</exclude>
											<exclude>*.woff</exclude>
											<exclude>**/*.woff</exclude>
											<exclude>*.woff2</exclude>
											<exclude>**/*.woff2</exclude>
											<exclude>*.otf</exclude>
											<exclude>**/*.otf</exclude>
											<!-- images -->
											<exclude>*.cur</exclude>
											<exclude>**/*.cur</exclude>
											<exclude>*.ico</exclude>
											<exclude>**/*.ico</exclude>
											<exclude>*.gif</exclude>
											<exclude>**/*.gif</exclude>
											<exclude>*.png</exclude>
											<exclude>**/*.png</exclude>
											<exclude>*.jpg</exclude>
											<exclude>**/*.jpg</exclude>
											<exclude>*.jpeg</exclude>
											<exclude>**/*.jpeg</exclude>
											<exclude>*.bmp</exclude>
											<exclude>**/*.bmp</exclude>
											<!-- sounds -->
											<exclude>*.wav</exclude>
											<exclude>**/*.wav</exclude>
											<!-- file upload SWF -->
											<exclude>*.swf</exclude>
											<exclude>**/*.swf</exclude>
											<!-- Database backup if necessary -->
											<exclude>*.backup</exclude>
											<exclude>**/*.backup</exclude>
										</excludes>
									</resource>
									<resource>
										<filtering>false</filtering>
										<directory>src/main/java</directory>
										<includes>
											<!-- excel template -->
											<include>*.xls</include>
											<include>**/*.xls</include>
											<include>*.xlsx</include>
											<include>**/*.xlsx</include>
											<include>*.xlsm</include>
											<include>**/*.xlsm</include>
											<include>*.xlsb</include>
											<include>**/*.xlsb</include>
											<include>*.xltm</include>
											<include>**/*.xltm</include>
											<!-- fonts -->
											<include>*.eot</include>
											<include>**/*.eot</include>
											<include>*.svg</include>
											<include>**/*.svg</include>
											<include>*.ttf</include>
											<include>**/*.ttf</include>
											<include>*.woff</include>
											<include>**/*.woff</include>
											<include>*.woff2</include>
											<include>**/*.woff2</include>
											<include>*.otf</include>
											<include>**/*.otf</include>
											<!-- images -->
											<include>*.cur</include>
											<include>**/*.cur</include>
											<include>*.ico</include>
											<include>**/*.ico</include>
											<include>*.gif</include>
											<include>**/*.gif</include>
											<include>*.png</include>
											<include>**/*.png</include>
											<include>*.jpg</include>
											<include>**/*.jpg</include>
											<include>*.jpeg</include>
											<include>**/*.jpeg</include>
											<include>*.bmp</include>
											<include>**/*.bmp</include>
											<!-- sounds -->
											<include>*.wav</include>
											<include>**/*.wav</include>
											<!-- file upload SWF -->
											<include>*.swf</include>
											<include>**/*.swf</include>
											<!-- Database backup if necessary -->
											<include>*.backup</include>
											<include>**/*.backup</include>
										</includes>
										<excludes>
											<exclude>*.java</exclude>
											<exclude>*.class</exclude>
											<exclude>*.bat</exclude>
											<exclude>*.jar</exclude>
										</excludes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Eclipse -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.version}</version>
					<configuration>
						<skip>${eclipse.setup.skip}</skip>
						<useProjectReferences>${maven.eclipse.use.project.references}</useProjectReferences>
						<jeeversion>6.0</jeeversion>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<classpathContainers>
							<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
							<classpathContainer>org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
							<!--<classpathContainer>org.eclipse.jst.j2ee.internal.module.container</classpathContainer>-->
						</classpathContainers>
						<additionalProjectFacets>
							<jst.java>${java.version}</jst.java>
							<jst.utility>${project.facet.java.utility.version}</jst.utility>
						</additionalProjectFacets>
						<additionalBuildcommands>
							<buildCommand>
								<name>org.eclipse.jdt.core.javabuilder</name>
								<arguments>
								</arguments>
							</buildCommand>
							<buildCommand>
								<name>org.eclipse.wst.common.project.facet.core.builder</name>
								<arguments>
								</arguments>
							</buildCommand>
							<buildCommand>
								<name>org.eclipse.m2e.core.maven2Builder</name>
								<arguments>
								</arguments>
							</buildCommand>
							<buildCommand>
								<name>org.eclipse.wst.validation.validationbuilder</name>
								<arguments>
								</arguments>
							</buildCommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
							<projectnature>org.eclipse.jdt.core.javanature</projectnature>
							<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
							<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
						</additionalProjectnatures>
						<additionalConfig>
							<file>
								<name>.settings/org.eclipse.m2e.core.prefs</name>
								<content>
<![CDATA[activeProfiles=${eclipse.maven.project.activated.profiles}
eclipse.perferences.version=1
resolveWorkspaceProjects=true
version=1]]>
								</content>
							</file>
							<file>
								<name>.settings/org.eclipse.jdt.core.prefs</name>
								<content>
<![CDATA[eclipse.preferences.version=1
encoding/${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding/${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding/${maven.dependency.unpack.root.directory}=${project.build.sourceEncoding}
encoding/src/main/java=${project.build.sourceEncoding}
encoding/src/main/resources=${project.build.sourceEncoding}
encoding/src/test/java=${project.build.sourceEncoding}
encoding/src/test/resources=${project.build.sourceEncoding}
encoding/target/generated-test-sources/test-annotations=${project.build.sourceEncoding}
org.eclipse.jdt.core.compiler.codegen.targetPlatform=${java.version}
org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory=${org.eclipse.jdt.core.compiler.codegen.useStringConcatFactory}
org.eclipse.jdt.core.compiler.compliance=${java.version}
org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled
org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore
org.eclipse.jdt.core.compiler.processAnnotations=${org.eclipse.jdt.core.compiler.processAnnotations}
org.eclipse.jdt.core.compiler.release=${org.eclipse.jdt.core.compiler.release}
org.eclipse.jdt.core.compiler.source=${java.version}]]>
								</content>
							</file>
							<file>
								<name>.settings/org.eclipse.jdt.apt.core.prefs</name>
								<content>
<![CDATA[eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=${m2e.apt.aptEnabled}
org.eclipse.jdt.apt.genSrcDir=${org.projectlombok.generated.source}
org.eclipse.jdt.apt.genTestSrcDir=${org.projectlombok.generated.test-source}
org.eclipse.jdt.apt.processorOptions/sql.validation=true
org.eclipse.jdt.apt.reconcileEnabled=true]]>
								</content>
							</file>
							<file>
								<name>.settings/org.hibernate.eclipse.console.prefs</name>
								<content>
<![CDATA[default.configuration=${project.artifactId}
eclipse.preferences.version=1
hibernate3.enabled=true]]>
								</content>
							</file>
							<file>
								<name>.settings/org.eclipse.wst.common.project.facet.core.xml</name>
								<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<faceted-project>
	<fixed facet="jst.java"/>
	<fixed facet="jst.utility"/>
	<installed facet="jst.java" version="${java.version}"/>
	<installed facet="jst.utility" version="${project.facet.java.utility.version}"/>
</faceted-project>]]>
								</content>
							</file>
							<file>
								<name>.settings/org.eclipse.core.resources.prefs</name>
								<content>
<![CDATA[eclipse.preferences.version=1
encoding//src/main/java=${project.build.sourceEncoding}
encoding//src/main/resources=${project.build.sourceEncoding}
encoding//src/test/java=${project.build.sourceEncoding}
encoding//src/test/resources=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.source}=${project.build.sourceEncoding}
encoding//${org.projectlombok.generated.test-source}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.source.directory}=${project.build.sourceEncoding}
encoding//${maven.dependency.unpack.resource.directory}=${project.build.sourceEncoding}
encoding/<project>=${project.build.sourceEncoding}]]>
								</content>
							</file>
							<file>
								<name>.factorypath</name>
								<content>
<![CDATA[<factorypath>
	<factorypathentry kind="PLUGIN" id="org.eclipse.jst.ws.annotations.core" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/projectlombok/lombok/${org.projectlombok.version}/lombok-${org.projectlombok.version}.jar" enabled="true" runInBatchMode="false"/>
	<factorypathentry kind="VARJAR" id="M2_REPO/org/seasar/doma/doma/${doma.version}/doma-${doma.version}.jar" enabled="true" runInBatchMode="false"/>
</factorypath>]]>
								</content>
							</file>
							<file>
								<name>.project</name>
								<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<projectDescription>
	<name>${project.artifactId}-${project.version}</name>
	<comment>${project.description}</comment>
	<projects/>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.project.facet.core.builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.m2e.core.maven2Builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.m2e.core.maven2Nature</nature>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
	</natures>
</projectDescription>]]>
								</content>
							</file>
							<!-- deployment assembly component -->
							<file>
								<name>.settings/org.eclipse.wst.common.component</name>
								<content>
<![CDATA[<?xml version="1.0" encoding="${project.build.sourceEncoding}"?>
<project-modules id="moduleCoreId" project-version="1.5.0">
    <wb-module deploy-name="${project.artifactId}-${project.version}">
        <wb-resource deploy-path="/" source-path="/src/test/java"/>
        <wb-resource deploy-path="/" source-path="/src/test/resources"/>
        <wb-resource deploy-path="/" source-path="/src/main/java"/>
        <wb-resource deploy-path="/" source-path="/src/main/resources"/>
        <wb-resource deploy-path="/" source-path="/${org.projectlombok.generated.source}"/>
        <wb-resource deploy-path="/" source-path="/${org.projectlombok.generated.test-source}"/>
        <wb-resource deploy-path="/" source-path="/${maven.dependency.unpack.source.directory}"/>
        <wb-resource deploy-path="/" source-path="/${maven.dependency.unpack.resource.directory}"/>
    </wb-module>
</project-modules>]]>
								</content>
							</file>
						</additionalConfig>
					</configuration>
				</plugin>
	            <!-- Delombok -->
	            <plugin>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok-maven-plugin</artifactId>
					<version>${maven.lombok.version}</version>
					<executions>
						<execution>
							<id>delombok-sources</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>delombok</goal>
							</goals>
							<configuration>
								<skip>${maven.lombok.skip}</skip>
								<sourceDirectory>src/main/java</sourceDirectory>
								<outputDirectory>${org.projectlombok.delombok.source.directory}</outputDirectory>
								<addOutputDirectory>false</addOutputDirectory>
								<encoding>${project.build.sourceEncoding}</encoding>
							</configuration>
						</execution>
						<execution>
							<id>delombok-test-sources</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>testDelombok</goal>
							</goals>
							<configuration>
								<skip>${maven.lombok.skip}</skip>
								<sourceDirectory>src/main/java</sourceDirectory>
								<outputDirectory>${org.projectlombok.delombok.test-source.directory}</outputDirectory>
								<addOutputDirectory>false</addOutputDirectory>
								<encoding>${project.build.sourceEncoding}</encoding>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Compiler -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<release>${java.version}</release>
						<fork>true</fork>
						<failOnError>true</failOnError>
						<optimize>true</optimize>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
						<useIncrementalCompilation>true</useIncrementalCompilation>
						<verbose>true</verbose>
						<encoding>${project.build.sourceEncoding}</encoding>
						<generatedSourcesDirectory>${org.projectlombok.generated.source.directory}</generatedSourcesDirectory>
						<generatedTestSourcesDirectory>${org.projectlombok.generated.test-source.directory}</generatedTestSourcesDirectory>
						<compilerArgs>
							<arg>-Xlint:all</arg>
							<arg>-verbose</arg>
							<arg>-Asql.validation=true</arg>
						</compilerArgs>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${org.projectlombok.version}</version>
							</path>
							<path>
								<groupId>org.seasar.doma</groupId>
								<artifactId>doma</artifactId>
								<version>${doma.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<!-- AspectJ (AOP) -->
				<plugin>
					<groupId>${maven.aspectj.groupId}</groupId>
					<artifactId>${maven.aspectj.artifactId}</artifactId>
					<version>${maven.aspectj.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjrt</artifactId>
							<version>${org.aspectj.version}</version>
						</dependency>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${org.aspectj.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<skip>${org.aspectj.skip}</skip>
						<outxml>true</outxml>
						<XnoInline>true</XnoInline> <!-- Fix for JDK11+ - ClassCastException: ConstantUtf8 -->
						<XaddSerialVersionUID>false</XaddSerialVersionUID>
						<XserializableAspects>true</XserializableAspects>
						<showWeaveInfo/>
	                    <!-- START: for working with Lombok -->
	                    <forceAjcCompile>true</forceAjcCompile>
	                    <complianceLevel>${java.version}</complianceLevel>
	                    <sources/>
	                    <weaveDirectories>
	                        <weaveDirectory>${project.build.directory}/classes</weaveDirectory>
	                    </weaveDirectories>
	                    <!-- END: for working with Lombok -->
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<!-- Source package plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.version}</version>
					<configuration>
						<attach>true</attach>
						<forceCreation>true</forceCreation>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Javadocs package plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.version}</version>
					<configuration>
						<show>public</show>
						<attach>true</attach>
						<maxmemory>1024m</maxmemory>
						<failOnError>false</failOnError>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
						    <groupId>com.google.code.findbugs</groupId>
						    <artifactId>annotations</artifactId>
						    <version>3.0.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- For compressing/obfuscating javascript + CSS files -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>yuicompressor-maven-plugin</artifactId>
					<version>${maven.yuicompressor.version}</version>
					<configuration>
						<skip>${maven.yuicompressor.skip}</skip>
						<!-- [js only] disable all micro optimizations -->
						<disableOptimizations>false</disableOptimizations>
						<!-- Read the input file using "encoding" -->
						<encoding>${project.build.sourceEncoding}</encoding>
						<!-- define if plugin must stop/fail on warnings -->
						<failOnWarning>false</failOnWarning>
						<!-- force the compression of every files, else if compressed file already exists and is younger than source file, nothing is done -->
						<force>false</force>
						<!-- request to create a gzipped version of the yuicompressed/aggregation files -->
						<gzip>false</gzip>
						<!-- [js only] Display possible errors in the code -->
						<jswarn>true</jswarn>
						<!-- [js only] No compression -->
						<nocompress>false</nocompress>
						<!-- [js only] Minify only, do not obfuscate -->
						<nomunge>false</nomunge>
						<!-- If no "suffix" must be add to output filename (maven's configuration manage empty suffix like default) -->
						<nosuffix>false</nosuffix>
						<!-- show statistics (compression ratio) -->
						<statistics>true</statistics>
						<!-- The output filename suffix -->
						<suffix>.min</suffix>
						<!-- Use processed resources if available -->
						<useProcessedResources>true</useProcessedResources>
						<!-- use the input file as output when the compressed file is larger than the original -->
						<useSmallestFile>true</useSmallestFile>
						<!-- list of additional includes -->
						<includes>
							<include>*.js</include>
							<include>*.css</include>
							<include>**/*.js</include>
							<include>**/*.css</include>
						</includes>
					</configuration>
				</plugin>
				<!-- JAR package plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.version}</version>
					<configuration>
						<detail>true</detail>
						<forceCreation>true</forceCreation>
						<excludes>
							<exclude>*.java</exclude>
							<exclude>**/*.java</exclude>
						</excludes>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<compress>true</compress>
							<manifest>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<Maven-Version>${maven.version}</Maven-Version>
								<License>GNU Lesser General Public License (LGPL), Version 3</License>
								<Owner>Hai Nguyen, hainguyenjc@gmail.com</Owner>
								<Build>${revision}, ${timestamp}</Build>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<!-- WAR package plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.version}</version>
					<configuration>
						<warSourceExcludes>*.java,**/*.java</warSourceExcludes>
						<packagingExcludes>*.java,**/*.java</packagingExcludes>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<compress>true</compress>
							<manifest>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<Maven-Version>${maven.version}</Maven-Version>
								<License>GNU Lesser General Public License (LGPL), Version 3</License>
								<Owner>Hai Nguyen, hainguyenjc@gmail.com</Owner>
								<Build>${revision}, ${timestamp}</Build>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- TODO Deprecated: Nexus staging plugin -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${maven.nexus.staging.version}</version>
					<extensions>true</extensions>
					<configuration>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
						<serverId>${maven.nexus.staging.serverId}</serverId>
						<nexusUrl>${maven.nexus.staging.nexusUrl}</nexusUrl>
					</configuration>
				</plugin>-->
				<!-- FIXME Present, surefire, truelicense, proguard and jarsigner
					has VerifyError exception -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.version}</version>
					<configuration>
						<skipTests>true</skipTests>
						<argLine>
							--illegal-access=permit
						</argLine>
					</configuration>
				</plugin>
	            <!-- Proguard -->
	            <plugin>
					<groupId>${maven.proguard.groupId}</groupId>
					<artifactId>${maven.proguard.artifactId}</artifactId>
					<version>${maven.proguard.version}</version>
					<executions>
						<execution>
						    <phase>package</phase>
						    <goals>
						    	<goal>proguard</goal>
					    	</goals>
						</execution>
					</executions>
					<configuration>
						<!-- include module dependencies -->
						<includeDependency>true</includeDependency>
						<obfuscate>true</obfuscate>
						<addManifest>true</addManifest>
						<addMavenDescriptor>true</addMavenDescriptor>
						<silent>false</silent>
						<injarNotExistsSkip>true</injarNotExistsSkip>
						<skip>${proguard.skip}</skip>

						<!-- Filtering -->
						<inFilter>!**.jar,!module-info.class,!META-INF/maven/**</inFilter>
						<outFilter>!META-INF/maven/**</outFilter>

						<!--
							 TODO For fixing command line too long or too many injars, libraryjars broken command
							 FIXME Use temp directory for library jars could be thrown exception when deleting them
						-->
						<putLibraryJarsInTempDir>false</putLibraryJarsInTempDir>
						<generateTemporaryConfigurationFile>true</generateTemporaryConfigurationFile>

						<!-- Our application is so big that ProGuard had ran out of memory -->
						<maxMemory>1024m</maxMemory>

						<!-- File with proguard configuration -->
						<proguardInclude>${certificate.proguard.configuration}</proguardInclude>
						<!-- <proguardInclude>${root.basedir}/proguard.cnf</proguardInclude> -->

						<!-- Now exclude all modules that are embedded in the jar, so that
						ProGuard won't see a redefinition of each single class.
						You don't have to write down your main module. -->
						<!--
						<exclusions>
						    <exclusion>
						        <groupId>com.yourcompany</groupId>
						        <artifactId>data</artifactId>
						    </exclusion>
						</exclusions>
						-->
					</configuration>
				</plugin>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					NLH4J GITHUB Repository SITE plugin:
					https://github.com/github/maven-plugins#readme
					https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Before 2019 (use github site as repository) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- GITHUB site plugin - to push the NLH4J build to NLH4J GITHUB repository -->
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${maven.github.site.version}</version>
					<configuration>
						<skip>${maven.github.site.skip}</skip>
						<force>${maven.github.site.force}</force>
						<merge>${maven.github.site.merge}</merge>
						<!-- disable webpage processing -->
						<noJekyll>true</noJekyll>
						<!-- git commit message -->
						<message>Creating site for ${project.artifactId}-${project.version} (${revision}) on ${timestamp}</message>

						<!-- github repo (server name in maven settings.xml) -->
						<server>${github.global.server}</server>
						<repositoryName>${github.global.repo.name}</repositoryName>
						<repositoryOwner>${github.global.repo.owner}</repositoryOwner>
						<!-- remote branch name -->
						<branch>${maven.github.repo.branch}</branch>
						<path>${maven.github.repo.path}</path>
                		<includes><include>**/*</include></includes>
						<!-- disable webpage processing -->
						<noJekyll>true</noJekyll>
						<!-- matches distribution management repository url above -->
						<outputDirectory>${maven.github.repo.deployment}</outputDirectory>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
				</plugin>
				<!-- Deploy to NLH4J GITHUB Repository SITE (From 2019: use github packages as repository) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.version}</version>
					<configuration>
						<skip>${maven.deploy.skip}</skip>
						<!--
							 NLH4J GITHUB Repository: Before 2019 (use github site as repository)
							 Deploy to local repository before publishing to github site
						-->
						<!--<altDeploymentRepository>nlh4j.github.repo::default::file://${maven.github.repo.deployment}</altDeploymentRepository>-->
					</configuration>
    			</plugin>
    			
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- To sign packages (must after proguard plugin in POM build to avoid error: jarsigner verify SHA-256 digest error for class ...) -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jarsigner-plugin</artifactId>
					<version>${maven.jarsigner.version}</version>
					<executions>
						<!-- Sign package -->
						<execution>
							<id>sign</id>
							<goals>
								<goal>sign</goal>
							</goals>
							<configuration>
								<keystore>${jarsigner.keystore}</keystore>
								<storepass>${jarsigner.storepass}</storepass>
								<keypass>${jarsigner.keypass}</keypass>
								<alias>${jarsigner.alias}</alias>
								<storetype>${jarsigner.storetype}</storetype>
								<removeExistingSignatures>true</removeExistingSignatures>
								<maxMemory>1024m</maxMemory>
							</configuration>
						</execution>
						<!-- Verify signature -->
						<execution>
							<id>verify</id>
							<goals>
								<goal>verify</goal>
							</goals>
							<configuration>
								<skip>${jarsigner.skip}</skip>
								<verbose>true</verbose>
								<certs>true</certs>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!-- Maven Assembly for building license tool -->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.version}</version>
					<configuration>
						<skipAssembly>${maven.assembly.skip}</skipAssembly>
						<finalName>${license.tool.name}</finalName>
						<appendAssemblyId>false</appendAssemblyId>
						<encoding>${project.build.sourceEncoding}</encoding>
						<archive>
							<manifest>
								<mainClass>${license.tool.main.class}</mainClass>
							</manifest>
						</archive>
						<descriptorRefs>
							<descriptorRef>${license.tool.descriptor.ref}</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-license-tool</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<!--
					 This plugin's configuration is used to store Eclipse m2e settings only.
					 It has no influence on the Maven build itself.
				-->
				<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${maven.m2e.lifecycle.mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>global.namespace.truelicense</groupId>
										<artifactId>truelicense-maven-plugin</artifactId>
										<versionRange>[2.+,)</versionRange>
										<goals>
											<goal>generate-main-sources</goal>
											<goal>obfuscate-main-classes</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>net.java.truelicense</groupId>
										<artifactId>truelicense-maven-plugin</artifactId>
										<versionRange>[2.+,)</versionRange>
										<goals>
											<goal>generate-main-sources</goal>
											<goal>obfuscate-main-classes</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>${maven.aspectj.groupId}</groupId>
										<artifactId>${maven.aspectj.artifactId}</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-eclipse-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>eclipse</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-resources-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>copy-resources</goal>
											<goal>testResources</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
                    					<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-toolchains-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>toolchain</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.diamondq.maven</groupId>
										<artifactId>javahome-resolver-maven-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>resolve</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmaven</groupId>
										<artifactId>groovy-maven-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>findbugs-maven-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.commonjava.maven.plugins</groupId>
										<artifactId>directory-maven-plugin</artifactId>
										<versionRange>[0.+,)</versionRange>
										<goals>
											<goal>highest-basedir</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.projectlombok</groupId>
										<artifactId>lombok-maven-plugin</artifactId>
										<versionRange>[1.+,)</versionRange>
										<goals>
											<goal>delombok</goal>
											<goal>testDelombok</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[3.+,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action><ignore /></action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Plugin for supporting root directory -->
			<plugin>
			    <groupId>org.commonjava.maven.plugins</groupId>
			    <artifactId>directory-maven-plugin</artifactId>
			</plugin>
			<!-- Groovy for supporting root directory -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
			</plugin>
			<!-- Find bugs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<!-- Make some directories ensure existing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<!-- Enforce JDK version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<!-- Project properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
			</plugin>
			<!-- Check new version of dependencies -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>
			<!-- This plugin is used to release a project with Maven, saving a lot of repetitive, manual work.
				Releasing a project is made in two steps: prepare and perform. -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.version}</version>
			</plugin> -->
			<!-- Dependency pugin support for un-packing dependencies to customize -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<!-- Attach more source folders -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<!-- Copy resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- Eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
            <!-- Delombok -->
            <plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
            </plugin>
			<!-- Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- AspectJ (AOP) -->
			<plugin>
				<groupId>${maven.aspectj.groupId}</groupId>
				<artifactId>${maven.aspectj.artifactId}</artifactId>
			</plugin>
			<!-- Source package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!-- Javadocs package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<!-- For compressing/obfuscating javascript + CSS files -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
			</plugin>
			<!-- JAR package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- WAR package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- TODO Deprecated: Nexus staging plugin -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
			</plugin>-->
			<!-- FIXME Present, surefire, truelicense, proguard and jarsigner
				has VerifyError exception -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--
				 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
				 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
				 on static final field (non-constant) (static initializer block that has been generated by this plugin)
				 such as `static final Logger logger`
				 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
			-->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--<plugin>
				<groupId>${maven.truelicense.groupId}</groupId>
				<artifactId>${maven.truelicense.artifactId}</artifactId>
			</plugin>-->
			<!-- Proguard -->
			<plugin>
				<groupId>${maven.proguard.groupId}</groupId>
				<artifactId>${maven.proguard.artifactId}</artifactId>
			</plugin>
			<!-- To sign packages (must after proguard plugin in POM build to avoid error: jarsigner verify SHA-256 digest error for class ...) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
			</plugin>

			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--
				NLH4J GITHUB Repository SITE plugin:
				https://github.com/github/maven-plugins#readme
				https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
			-->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- Before 2019 (use github site as repository) -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- GITHUB site plugin - to push the NLH4J build to NLH4J GITHUB repository -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
			</plugin>
			<!-- Deploy to NLH4J GITHUB Repository SITE (From 2019: use github packages as repository) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- Maven Assembly for building license tool -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>

			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--
				 This plugin's configuration is used to store Eclipse m2e settings only.
				 It has no influence on the Maven build itself.
				 FIXME This only should exist in <pluginManagement />
			-->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
			</plugin>-->
		</plugins>
	</build>

	<!-- To use the report goals in your POM or parent POM -->
	<reporting>
		<plugins>
			<!-- Groovy for supporting root directory -->
			<!-- <plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
			</plugin> -->
			<!-- Find bugs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<!-- Make some directories ensure existing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<!-- Enforce JDK version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<!-- Project properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
			</plugin>
			<!-- Check new version of dependencies -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>
			<!-- This plugin is used to release a project with Maven, saving a lot of repetitive, manual work.
				Releasing a project is made in two steps: prepare and perform. -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.version}</version>
			</plugin> -->
			<!-- Dependency pugin support for un-packing dependencies to customize -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<!-- Attach more source folders -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<!-- Copy resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- Eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
            <!-- Delombok -->
            <plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
            </plugin>
			<!-- Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- AspectJ (AOP) -->
			<plugin>
				<groupId>${maven.aspectj.groupId}</groupId>
				<artifactId>${maven.aspectj.artifactId}</artifactId>
			</plugin>
			<!-- Source package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!-- Javadocs package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<!-- For compressing/obfuscating javascript + CSS files -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
			</plugin>
			<!-- JAR package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- WAR package plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- TODO Deprecated: Nexus staging plugin -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
			</plugin>-->
			<!-- FIXME Present, surefire, truelicense, proguard and jarsigner
				has VerifyError exception -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--
				 FIXME TrueLicense Obfuscation for obfuscating constants via sniplet `static final`:
				 + Only working on JDK8, from JDK9+, JDK11+, IllegalAccessError will be thrown
				 on static final field (non-constant) (static initializer block that has been generated by this plugin)
				 such as `static final Logger logger`
				 + So on JDK11+, only need to use proguard for obfuscating, it already included obfuscating constants
			-->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--<plugin>
				<groupId>${maven.truelicense.groupId}</groupId>
				<artifactId>${maven.truelicense.artifactId}</artifactId>
			</plugin>-->
			<!-- Proguard -->
			<plugin>
				<groupId>${maven.proguard.groupId}</groupId>
				<artifactId>${maven.proguard.artifactId}</artifactId>
			</plugin>
			<!-- To sign packages (must after proguard plugin in POM build to avoid error: jarsigner verify SHA-256 digest error for class ...) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
			</plugin>

			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--
				NLH4J GITHUB Repository SITE plugin:
				https://github.com/github/maven-plugins#readme
				https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
			-->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- Before 2019 (use github site as repository) -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- GITHUB site plugin - to push the NLH4J build to NLH4J GITHUB repository -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
			</plugin>
			<!-- Deploy to NLH4J GITHUB Repository SITE (From 2019: use github packages as repository) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!-- Maven Assembly for building license tool -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>

			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--
				 This plugin's configuration is used to store Eclipse m2e settings only.
				 It has no influence on the Maven build itself.
				 FIXME This only should exist in <pluginManagement />
			-->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
			<!--<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
			</plugin>-->
		</plugins>
	</reporting>

	<!-- Repositories -->
	<repositories>
		<!-- Common Maven Repository -->
		<repository> 
			<id>repository.org.maven.repo1.maven2</id> 
			<name>Maven 2 Repository 1</name> 
			<url>https://repo1.maven.org/maven2</url> 
		</repository>
		<!-- SPRING Repositories -->
		<repository> 
			<id>repository.spring.release</id> 
			<name>Spring GA Repository</name> 
			<url>https://repo.spring.io/release</url> 
		</repository>
		<repository> 
			<id>repository.spring.release.native</id> 
			<name>Spring GA Repository</name> 
			<url>https://repo.spring.io/ui/native/release</url> 
		</repository>
		<repository> 
			<id>repository.spring.milestone</id> 
			<name>Spring Milestone Repository</name> 
			<url>https://repo.spring.io/milestone</url> 
		</repository>
		<repository> 
			<id>repository.spring.milestone.native</id> 
			<name>Spring Milestone Repository</name> 
			<url>https://repo.spring.io/ui/native/milestone</url> 
		</repository>
		<repository> 
			<id>repository.spring.snapshot</id> 
			<name>Spring Snapshot Repository</name> 
			<url>https://repo.spring.io/snapshot</url> 
		</repository>
		<repository> 
			<id>repository.spring.snapshot.native</id> 
			<name>Spring Snapshot Repository</name> 
			<url>https://repo.spring.io/ui/native/snapshot</url> 
		</repository>
		<!-- AspectJ Repository -->
		<repository> 
			<id>repository.org.aspectj</id> 
			<name>ASpectJ Maven Repository</name> 
			<url>https://repo1.maven.org/maven2/org/aspectj</url> 
		</repository>
		<!-- SEASAR Repository -->
		<repository>
			<id>repository.org.seasar</id>
			<name>The Seasar Foundation Maven2 Repository</name>
			<url>https://maven.seasar.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- JBoss Repository -->
		<repository>
			<id>repository.org.jboss.public</id>
			<name>JBoss Developer repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- Nuiton Nexus Respository -->
		<repository>
			<id>repository.org.nuiton.nexus</id>
			<name>The Nuiton Maven Nexus Repository</name>
			<url>https://maven.nuiton.org/nexus/content/repositories</url>
		</repository>
		<!--<repository>
			<id>projectlombok.org</id>
			<url>http://projectlombok.org/mavenrepo</url>
		</repository>-->
		<!--<repository>
			<id>mvnrepository.com</id>
			<url>https://mvnrepository.com/artifact</url>
		</repository>-->
		<repository>
			<id>repository.org.apache.httpcomponents.httpclient</id>
			<url>https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient</url>
		</repository>
		<repository>
			<id>repository.org.apache.httpcomponents.core5</id>
			<url>https://mvnrepository.com/artifact/org.apache.httpcomponents.core5/httpcore5</url>
		</repository>
		<repository>
			<id>repository.org.apache.httpcomponents.core5-h2</id>
			<url>https://mvnrepository.com/artifact/org.apache.httpcomponents.core5/httpcore5-h2</url>
		</repository>
		<repository>
			<id>repository.org.apache.httpcomponents.client5</id>
			<url>https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5</url>
		</repository>
		<repository>
			<id>repository.com.atlassian.3rdparty</id>
			<url>https://maven.atlassian.com/3rdparty</url>
		</repository>
		<repository>
			<id>repository.avalon.framework</id>
			<url>https://mvnrepository.com/artifact/avalon-framework/avalon-framework</url>
		</repository>
		<repository>
			<id>repository.avalon.framework.api</id>
			<url>https://mvnrepository.com/artifact/avalon-framework/avalon-framework-api</url>
		</repository>
		<repository>
			<id>repository.avalon.framework.impl</id>
			<url>https://mvnrepository.com/artifact/avalon-framework/avalon-framework-impl</url>
		</repository>
		<!-- <repository>
			<id>org.apache.avalon.framework</id>
			<url>https://mvnrepository.com/artifact/org.apache.avalon.framework</url>
		</repository>
		<repository>
			<id>avalon-framework-api</id>
			<url>https://mvnrepository.com/artifact/org.apache.avalon.framework/avalon-framework-api</url>
		</repository>
		<repository>
			<id>avalon-framework-impl</id>
			<url>https://mvnrepository.com/artifact/org.apache.avalon.framework/avalon-framework-impl</url>
		</repository> -->
		<repository>
			<id>repository.net.sf.barcode4j</id>
			<url>https://mvnrepository.com/artifact/net.sf.barcode4j/barcode4j</url>
		</repository>
		<!-- <repository>
			<id>org.codehaus.gmaven</id>
			<url>https://mvnrepository.com/artifact/org.codehaus.gmaven/groovy-maven-plugin</url>
		</repository> -->
		<repository>
			<id>repository.com.redhat.ga</id>
			<url>https://maven.repository.redhat.com/ga/</url> <!-- require the slash symbol at the end -->
		</repository>
		<repository>
			<id>repository.com.google.android</id>
			<url>https://mvnrepository.com/artifact/com.google.android/android</url>
		</repository>
		<repository>
			<id>repository.com.google.android.support-v4</id>
			<url>https://mvnrepository.com/artifact/com.google.android/support-v4</url>
		</repository>
		<repository>
			<id>repository.com.alfresco.artifacts</id>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/public</url>
		</repository>
		<repository>
			<id>repository.com.alfresco.artifacts.thirdparty</id>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/thirdparty</url>
		</repository>
		<repository>
			<id>repository.org.xwiki.externals</id>
			<url>https://maven.xwiki.org/externals/</url>
		</repository>
		<repository>
			<id>repository.org.gluu.ox.maven</id>
			<url>https://ox.gluu.org/maven</url>
		</repository>
		<!-- <repository>
			<id>aperture.sourceforge.net</id>
			<url>http://aperture.sourceforge.net/maven</url>
		</repository> -->
	    <!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- NLH4J GITHUB Repository: From 2019 (use github packages as repository) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
	    <!--<repository>
			<id>${github.global.server}</id>
			<name>NLH4J GitHub Repository</name>
			<url>https://maven.pkg.github.com/${github.global.repo.owner}/${github.global.repo.name}</url>
		</repository>-->
	</repositories>

	<!-- Dependencies -->
	<dependencyManagement>
		<dependencies>
			<!-- Groovy for supporting root directory -->
			<!-- <dependency>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>${maven.groovy.version}</version>
			</dependency> -->

			<!-- Servlet -->
			<dependency>
				<groupId>${servlet-api.groupId}</groupId>
				<artifactId>${servlet-api.artifactId}</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax.inject.version}</version>
			</dependency>
			<dependency>
			    <groupId>javax.persistence</groupId>
			    <artifactId>javax.persistence-api</artifactId>
			    <version>${javax.persistence.version}</version>
			</dependency>
			<dependency>
			    <groupId>javax.servlet.jsp</groupId>
			    <artifactId>javax.servlet.jsp-api</artifactId>
			    <version>${javax.servlet.jsp-api.version}</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>javax.ws.rs</groupId>
			    <artifactId>javax.ws.rs-api</artifactId>
			    <version>${javax.ws.rs.version}</version>
			</dependency>
			<!-- TODO Deprepcated: Web API due to conflict other dependencies -->
			<!--<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-web-api</artifactId>
				<version>${javaee-web-api.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
				<exclusions>
					<exclusion>
						<groupId>javax.inject</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.validation</groupId>
						<artifactId>validation-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
            			<artifactId>javax.servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>${servlet-api.groupId}</groupId>
						<artifactId>${servlet-api.artifactId}</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.annotation</groupId>
            			<artifactId>javax.annotation-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.websocket</groupId>
            			<artifactId>javax.websocket-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>-->
			<dependency>
				<groupId>${jstl.groupId}</groupId>
				<artifactId>${jstl.artifactId}</artifactId>
				<version>${jstl.version}</version>
			</dependency>

			<!-- Ziplet response -->
			<dependency>
				<groupId>com.github.ziplet</groupId>
				<artifactId>ziplet</artifactId>
				<version>${com.github.ziplet.version}</version>
				<!-- Exclude for conflicting with current version
					of javax.servlet:javax.servlet-api:3.1.0 (for tomcat 8.x or greater) -->
				<exclusions>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Support JSP Other taglib -->
			<dependency>
				<groupId>${taglibs.groupId}</groupId>
				<artifactId>${taglibs.artifactId}</artifactId>
				<version>${taglibs.version}</version>
			</dependency>

			<!-- Spring Dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.framework.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-jcl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.framework.version}</version>
				<exclusions>
					<!-- Exclude Commons Logging in favor of SLF4j -->
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<!-- Spring MVC -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<!-- Spring JDBC -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<!-- Spring websocket -->
			<dependency> <!-- Websocket dependence -->
				<groupId>${javax.websocket.groupId}</groupId>
				<artifactId>${javax.websocket.artifactId}</artifactId>
				<version>${javax.websocket.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Websocket dependence -->
			<!--<dependency>
				<groupId>${projectreactor.groupId}</groupId>
				<artifactId>${projectreactor.artifactId}</artifactId>
				<version>${projectreactor.version}</version>
			</dependency>-->
			<dependency> <!-- Websocket dependence -->
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-websocket</artifactId>
				<version>${org.apache.tomcat.version}</version>
				<!-- provided for not conflicting with tomcat libraries -->
				<scope>provided</scope>
			</dependency>
			<dependency> <!-- Websocket dependence -->
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-coyote</artifactId>
				<version>${org.apache.tomcat.version}</version>
				<!-- provided for not conflicting with tomcat libraries -->
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-websocket</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-messaging</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<!-- Spring Security Dependencies -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-aop</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.framework.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Spring LDAP -->
			<dependency>
				<groupId>org.springframework.ldap</groupId>
				<artifactId>spring-ldap-core</artifactId>
				<version>${spring.ldap.core.version}</version>
			</dependency>

			<!-- Spring AOP + AspectJ -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${org.aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${org.aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${org.aspectj.version}</version>
			</dependency>

			<!-- Spring Mongo -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-commons</artifactId>
				<version>${spring.springframework.data.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb</artifactId>
				<version>${spring.springframework.data.mongo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-data-commons</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-expression</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-tx</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- <dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-redis</artifactId>
				<version>${spring.springframework.data.redis.version}</version>
			</dependency> -->
			<!-- <dependency>
				<groupId>org.springframework.data</groupId>
    			<artifactId>spring-data-elasticsearch</artifactId>
				<version>${spring.springframework.data.elasticsearch.version}</version>
			</dependency> -->

			<!-- Quartz -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.mchange</groupId>
						<artifactId>mchange-commons-java</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<!-- JodaTime -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda.time.version}</version>
			</dependency>

			<!-- Jersey Server - Web service libs -->
			<dependency>
			    <groupId>com.sun.jersey</groupId>
			    <artifactId>jersey-server</artifactId>
			    <version>${jersey.server.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.sun.jersey</groupId>
			    <artifactId>jersey-json</artifactId>
			    <version>${jersey.json.version}</version>
			    <exclusions>
					<exclusion>
						<groupId>javax.xml.stream</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
			    <groupId>com.sun.jersey.contribs</groupId>
			    <artifactId>jersey-spring</artifactId>
			    <version>${jersey.spring.version}</version>
			    <!-- In “jersey-spring.jar” version, it will download all the Spring 2.5.6 dependencies.
			    	To use Spring 3, you need to exclude those old Spring libraries manually -->
			    <!-- Fix Error: java.lang.IncompatibleClassChangeError: class org.springframework.core.type.classreading.ClassMetadataReadingVisitor
			    	has interface org.springframework.asm.ClassVisitor as super class.
			    	Because of conflicting spring-aop, spring-asm -->
			    <exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-aop</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-web</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-beans</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Jersey client -->
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.client.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey.contribs</groupId>
				<artifactId>jersey-multipart</artifactId>
				<version>${jersey.multipart.version}</version>
			</dependency>

			<!-- Nimbus - Spring Security JWT Authentication -->
			<dependency>
				<groupId>com.nimbusds</groupId>
				<artifactId>nimbus-jose-jwt</artifactId>
				<version>${com.nimbusds.jose.jwt.version}</version>
			</dependency>

			<!--  Jackson: Java to Json conversion -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${codehaus.jackson-core-asl.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${codehaus.jackson-jaxrs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${codehaus.jackson-mapper-asl.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${codehaus.jackson-xc.version}</version>
			</dependency>

			<!--  Jackson: Java to Xml conversion -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${com.fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${com.fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${com.fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.fasterxml.jackson.module</groupId>
			    <artifactId>jackson-module-jaxb-annotations</artifactId>
			    <version>${com.fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-xml</artifactId>
				<version>${com.fasterxml.jackson.version}</version>
			</dependency>
			<dependency> <!-- Required by jackson-dataformat-xml -->
			    <groupId>com.fasterxml.woodstox</groupId>
			    <artifactId>woodstox-core</artifactId>
			    <version>${com.fasterxml.woodstox.version}</version>
			</dependency>
			<dependency> <!-- Required by jackson-dataformat-xml -->
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>stax2-api</artifactId>
				<version>${org.codehaus.woodstox.version}</version>
			</dependency>

			<!-- Datasource -->
			<dependency>
				<groupId>com.mchange</groupId>
				<artifactId>c3p0</artifactId>
				<version>${com.mchange.c3p0.version}</version>
			</dependency>
			<dependency> <!-- PostgreSQL -->
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgre.version}</version>
			</dependency>
			<dependency> <!-- SQL Server -->
				<groupId>${sqlserver.groupId}</groupId>
				<artifactId>${sqlserver.artifactId}</artifactId>
				<version>${sqlserver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo.java.driver.version}</version>
			</dependency>

			<!-- Jasperreport Libary -->
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${net.sf.jasperreports.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-digester</groupId>
						<artifactId>commons-digester</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.xml.stream</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion> <!-- FIXME jasperreports dependency: org.olap4j:olap4j:`old version` has been deprecated -->
						<groupId>org.olap4j</groupId>
						<artifactId>olap4j</artifactId>
					</exclusion>
					<exclusion> <!-- FIXME jasperreports/httpclient dependency: com.lowagie:itext:2.1.7.js4 has been deprecated -->
						<groupId>com.lowagie</groupId>
						<artifactId>itext</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.sourceforge.jexcelapi</groupId>
				<artifactId>jxl</artifactId>
				<version>${net.sourceforge.jexcelapi.version}</version>
			</dependency>
			<dependency> <!-- FIXME jasperreports dependency: org.olap4j:olap4j:`old version` has been deprecated -->
				<groupId>org.olap4j</groupId>
				<artifactId>olap4j</artifactId>
				<version>${net.sf.jasperreports.olap4j.version}</version>
			</dependency>
			<dependency> <!-- FIXME jasperreports/httpclient dependency: com.lowagie:itext:2.1.7.js4 has been deprecated -->
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>${net.sf.jasperreports.itext.version}</version>
			</dependency>

			<!-- Apache POI -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${org.apache.poi.version}</version>
			    <exclusions>
			    	<exclusion>
			    		<groupId>commons-codec</groupId>
						<artifactId>commons-codec</artifactId>
			    	</exclusion>
			    </exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${org.apache.poi.ooxml.version}</version>
				<exclusions>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml-schemas</artifactId>
				<version>${org.apache.poi-schemas.version}</version>
				<exclusions>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>${org.apache.poi-scratchpad.version}</version>
			</dependency>

			<!-- Apache Commons Upload -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-io</groupId>
						<artifactId>commons-io</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Apache HTTP Components -->
			<dependency>
			    <groupId>${http.core.groupId}</groupId>
			    <artifactId>${http.core.artifactId}</artifactId>
			    <version>${http.core.version}</version>
			</dependency>
			<dependency>
			    <groupId>${http.client.groupId}</groupId>
			    <artifactId>${http.client.artifactId}</artifactId>
			    <version>${http.client.version}</version>
			    <exclusions>
			    	<exclusion>
			    		<groupId>commons-codec</groupId>
						<artifactId>commons-codec</artifactId>
			    	</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion> <!-- FIXME jasperreports/httpclient dependency: com.lowagie:itext:2.1.7.js4 has been deprecated -->
						<groupId>com.lowagie</groupId>
						<artifactId>itext</artifactId>
					</exclusion>
			    </exclusions>
			</dependency>

			<!-- Apache Tiles -->
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-jsp</artifactId>
				<version>${tiles.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-servlet</artifactId>
				<version>${tiles.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-digester</groupId>
						<artifactId>commons-digester</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-template</artifactId>
				<version>${tiles.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-el</artifactId>
				<version>${tiles.version}</version>
			</dependency>

			<!-- Apache Commons DHCP -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>${commons.dbcp2.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Apache Commons Utilities -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang3.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-collections4</artifactId>
			    <version>${commons.collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons.beanutils.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons.validator.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-digester</groupId>
						<artifactId>commons-digester</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
			</dependency>
			<!-- FIXME Belong to the tiles despendency, it used commons-digester, not commons-digester3 -->
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons.digester.version}</version>
			</dependency>

			<!-- HTML -->
			<dependency>
				<groupId>net.sourceforge.htmlcleaner</groupId>
				<artifactId>htmlcleaner</artifactId>
				<version>${net.sf.htmlcleaner.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${org.jsoup.version}</version>
			</dependency>

			<!--
				 XML API
				 Due to Eclipse using jdk (java.xml) as module-path, it conflicts with this dependency;
				 so just including it in here profile `jdk8`
			-->
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xml-apis.version}</version>
			</dependency>

			<!-- Browser Utils -->
	        <dependency>
				<groupId>eu.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${eu.bitwalker.version}</version>
			</dependency>

			<!-- Doma -->
			<dependency>
				<groupId>org.seasar.doma</groupId>
				<artifactId>doma</artifactId>
				<version>${doma.version}</version>
			</dependency>

			<!-- Hibernate -->
			<!-- <dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			<dependency> hibernate-entitymanager dependency
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>${org.hibernate.javax.persistence.version}</version>
			</dependency>
			<dependency> hibernate-entitymanager dependency
				<groupId>org.hibernate.common</groupId>
				<artifactId>hibernate-commons-annotations</artifactId>
				<version>${org.hibernate.common-annotations.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
	        <dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-c3p0</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency> -->
	        <dependency>
	            <groupId>org.hibernate</groupId>
	            <artifactId>hibernate-validator</artifactId>
	            <version>${org.hibernate.validator.version}</version>
	        </dependency>

			<!-- Lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${org.projectlombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Beans -->
			<!-- Use openbeans (not using java.beans) for all Java and Android -->
			<dependency>
			    <groupId>com.googlecode</groupId>
			    <artifactId>openbeans</artifactId>
			    <version>${com.google.openbeans.version}</version>
			</dependency>

			<!-- Bean Validation -->
			<dependency>
	            <groupId>javax.validation</groupId>
	            <artifactId>validation-api</artifactId>
	            <version>${javax.validation.api.version}</version>
	        </dependency>

			<!-- Barcode4j Dependency -->
			<!-- <dependency>
				<groupId>avalon-framework</groupId>
				<artifactId>avalon-framework</artifactId>
				<version>${avalon-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>avalon-framework</groupId>
				<artifactId>avalon-framework-api</artifactId>
				<version>${avalon-framework-api.version}</version>
			</dependency>
			<dependency>
				<groupId>avalon-framework</groupId>
				<artifactId>avalon-framework-impl</artifactId>
				<version>${avalon-framework-impl.version}</version>
			</dependency> -->
			<dependency>
				<groupId>org.apache.avalon.framework</groupId>
				<artifactId>avalon-framework-api</artifactId>
				<version>${avalon-framework-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avalon.framework</groupId>
				<artifactId>avalon-framework-impl</artifactId>
				<version>${avalon-framework-impl.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.avalon.framework</groupId>
      					<artifactId>avalon-framework-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Barcode4j -->
			<dependency>
				<groupId>net.sf.barcode4j</groupId>
				<artifactId>barcode4j</artifactId>
				<version>${net.sf.barcode4j.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>avalon-framework</groupId>
						<artifactId>avalon-framework-impl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Viber Bot -->
	      	<dependency>
				<groupId>com.viber</groupId>
				<artifactId>viber-bot</artifactId>
				<version>${com.viber.bot.version}</version>
	      	</dependency>

			<!-- Firebase -->
			<dependency>
				<groupId>com.google.firebase</groupId>
				<artifactId>firebase-admin</artifactId>
				<version>${com.google.firebase.version}</version>
			</dependency>

			<!-- Mail -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
			</dependency>

			<!-- Freemarker -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<!-- NoException -->
			<dependency>
			    <groupId>com.machinezoo.noexception</groupId>
			    <artifactId>noexception</artifactId>
			    <version>${noexception.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.machinezoo.noexception</groupId>
			    <artifactId>noexception-slf4j</artifactId>
			    <version>${noexception.slf4j.version}</version>
			</dependency>


			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${org.slf4j.version}</version>
			</dependency>
			<dependency> <!-- logback -->
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- Thumbnailer Libraries -->
			<dependency>
				<groupId>com.artofsolving</groupId>
				<artifactId>jodconverter</artifactId>
				<version>${com.artofsolving.jodconverter.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-io</groupId>
						<artifactId>commons-io</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.artofsolving</groupId>
				<artifactId>jodconverter-core</artifactId>
				<version>${com.artofsolving.jodconverter-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.semweb4j</groupId>
				<artifactId>rdf2go.api</artifactId>
				<version>${org.semweb4j.rdf2go.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>${org.apache.pdfbox.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>fontbox</artifactId>
				<version>${org.apache.pdfbox.fontbox.version}</version>
			</dependency>
			<!-- TODO Aperture Repo has been down.
			So need another third party libraries for generating office file(s) thumbnail -->
			<!-- <dependency>
				<groupId>org.semanticdesktop.aperture</groupId>
				<artifactId>aperture-core</artifactId>
				<version>${org.semanticdesktop.aperture.core.version}</version>
			</dependency> -->

			<!-- Test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<artifactId>hamcrest-core</artifactId>
						<groupId>org.hamcrest</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Others -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -->
			<!-- ANDROID -->
			<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -->
			<!-- Spring Android -->
			<dependency>
			    <groupId>org.springframework.android</groupId>
			    <artifactId>spring-android-core</artifactId>
			    <version>${spring.android.core.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.springframework.android</groupId>
			    <artifactId>spring-android-rest-template</artifactId>
			    <version>${spring.android.rest-template.version}</version>
			</dependency>

			<!-- Android -->
			<!-- Use scope "provided" to fix error: trouble processing "javax/xml/parsers/DocumentBuilder.class" -->
			<dependency>
			    <groupId>com.google.android</groupId>
			    <artifactId>android</artifactId>
			    <version>${com.google.android.version}</version>
			    <scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Dependencies -->
	<dependencies>
		<!-- Groovy for supporting root directory -->
		<!-- <dependency>
			<groupId>org.codehaus.gmaven</groupId>
			<artifactId>groovy-maven-plugin</artifactId>
		</dependency> -->

		<!-- Spring AOP + AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
		</dependency>
	</dependencies>
	
	<!--
		NLH4J GITHUB Repository SITE plugin:
		https://github.com/github/maven-plugins#readme
		https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github/14013645#14013645
	-->
	<distributionManagement>
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- NLH4J GITHUB Repository: Before 2019 (use github site as repository) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!--<repository>
	        <id>nlh4j.github.local.repo</id>
	        <name>NLH4J GITHUB Site Local Repository</name>
	        <url>file://${maven.github.repo.deployment}</url>
	    </repository>-->
	    <!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- NLH4J GITHUB Repository: From 2019 (use github packages as repository) -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
	    <!--<repository>
			<id>${github.global.server}</id>
			<name>NLH4J GitHub Repository</name>
			<url>https://maven.pkg.github.com/${github.global.repo.owner}/${github.global.repo.name}</url>
		</repository>-->

		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
		<!-- TODO Deprecated: Nexus Staging Repository -->
		<!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
	    <!--<snapshotRepository>
			<id>${maven.nexus.staging.serverId}</id>
			<url>${maven.nexus.staging.nexusUrl}</url>
		</snapshotRepository>-->
	</distributionManagement>

	<!-- Modules -->
	<modules>
		<!-- Base -->
		<!--<module>modules/utilities</module>-->
		<!--<module>modules/core</module>-->
		<!-- License -->
		<module>modules/license</module>
		<!-- SMS -->
		<module>modules/sms</module>
		<!-- Thumbnail -->
		<module>modules/thumbnailer</module>
		<!-- Mongo -->
		<module>modules/mongo</module>
		<!-- FCM (Belong to Mongo for observation) -->
		<module>modules/fcm</module>
		<!-- Web -->
		<module>modules/entities</module>
		<module>modules/domain</module>
		<module>modules/language</module>
		<module>modules/web-config</module>
		<module>modules/web-core</module>
		<module>modules/web-client</module>
		<module>modules/web-template</module>
		<module>modules/web-base</module>
		<!-- Android -->
		<module>modules/android</module>
	</modules>
	
	<!--
		Object ASM and JDK Compatibility:
		https://en.wikipedia.org/wiki/ObjectWeb_ASM#:~:text=ASM%20is%20Java%2Dcentric%20at,Python%20bytecode%2C%20etc.).&text=The%20name%20%22ASM%22%20is%20not,be%20implemented%20in%20assembly%20language.
		Release					Release Date					Highlights
		2.0						2005-05-17						Java 5 language support
		3.2						2009-06-11						support for the new invokedynamic code.[2]
		4.0						2011-10-29						Java 7 language support
		5.0						2014-03-16						Java 8 language support
		6.0						2017-09-23						Codebase migrated to Gitlab
																Java 9 language support
		6.1						2018-03-11						Java 10 language support
		7.0						2018-10-27						Java 11 language support
		7.1						2019-03-03						Java 13 language support
		8.0						2020-03-28						Java 14 language support
		9.0						2020-09-22						Java 16 language support
		9.1						2021-02-06						Java 17 language support
		9.2						2021-06-20						Java 18 language support
		9.3						2022-04-03						Java 19 language support, new Maven BOM
	-->
</project>